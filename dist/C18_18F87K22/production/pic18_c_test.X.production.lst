

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 16 16:52:07 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           ; Version 1.41
    45                           ; Generated 25/01/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18LF4620 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  001714                     __pidataCOMRAM:
    81                           	opt stack 0
    82                           
    83                           ;initializer for main@F2901
    84  001714  48                 	db	72
    85  001715  45                 	db	69
    86  001716  4C                 	db	76
    87  001717  4C                 	db	76
    88  001718  4F                 	db	79
    89  001719  20                 	db	32
    90  00171A  57                 	db	87
    91  00171B  4F                 	db	79
    92  00171C  52                 	db	82
    93  00171D  4C                 	db	76
    94  00171E  44                 	db	68
    95  00171F  00                 	db	0
    96  001720  00                 	db	0
    97  001721  00                 	db	0
    98  001722  00                 	db	0
    99  0000                     _LATB	set	3978
   100  0000                     _PORTD	set	3971
   101  0000                     _PORTCbits	set	3970
   102  0000                     _T0CON	set	4053
   103  0000                     _PORTB	set	3969
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISD	set	3989
   106  0000                     _TRISA	set	3986
   107  0000                     _TRISB	set	3987
   108  0000                     _INTCONbits	set	4082
   109  0000                     _LATC3	set	31835
   110  0000                     _LATC4	set	31836
   111                           
   112                           	psect	smallconst
   113  001000                     __psmallconst:
   114                           	opt stack 0
   115  001000  00                 	db	0
   116  001001                     STR_2:
   117  001001  5A                 	db	90	;'Z'
   118  001002  58                 	db	88	;'X'
   119  001003  5F                 	db	95	;'_'
   120  001004  45                 	db	69	;'E'
   121  001005  52                 	db	82	;'R'
   122  001006  52                 	db	82	;'R'
   123  001007  4F                 	db	79	;'O'
   124  001008  52                 	db	82	;'R'
   125  001009  00                 	db	0
   126  00100A                     STR_1:
   127  00100A  58                 	db	88	;'X'
   128  00100B  20                 	db	32
   129  00100C  50                 	db	80	;'P'
   130  00100D  4F                 	db	79	;'O'
   131  00100E  53                 	db	83	;'S'
   132  00100F  3A                 	db	58	;':'
   133  001010  20                 	db	32
   134  001011  00                 	db	0
   135                           
   136                           ; #config settings
   137  001012  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  001624                     __pcinit:
   141                           	opt stack 0
   142  001624                     start_initialization:
   143                           	opt stack 0
   144  001624                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (15 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  001624  0E14               	movlw	low __pidataCOMRAM
   150  001626  6EF6               	movwf	tblptrl,c
   151  001628  0E17               	movlw	high __pidataCOMRAM
   152  00162A  6EF7               	movwf	tblptrh,c
   153  00162C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  00162E  6EF8               	movwf	tblptru,c
   155  001630  EE00  F044         	lfsr	0,__pdataCOMRAM
   156  001634  EE10 F00F          	lfsr	1,15
   157  001638                     copy_data0:
   158  001638  0009               	tblrd		*+
   159  00163A  CFF5 FFEE          	movff	tablat,postinc0
   160  00163E  50E5               	movf	postdec1,w,c
   161  001640  50E1               	movf	fsr1l,w,c
   162  001642  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (3 bytes)
   165  001644  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   166  001646  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  001648  6A53               	clrf	__pbssCOMRAM& (0+255),c
   168  00164A                     end_of_initialization:
   169                           	opt stack 0
   170  00164A                     __end_of__initialization:
   171                           	opt stack 0
   172  00164A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173  00164C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174  00164E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  001650  6EF8               	movwf	tblptru,c
   176  001652  0100               	movlb	0
   177  001654  EF0A  F008         	goto	_main	;jump to C main() function
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           postinc0	equ	0xFEE
   183                           postdec1	equ	0xFE5
   184                           fsr1l	equ	0xFE1
   185                           
   186                           	psect	bssCOMRAM
   187  000053                     __pbssCOMRAM:
   188                           	opt stack 0
   189  000053                     __addr:
   190                           	opt stack 0
   191  000053                     	ds	1
   192  000054                     _ack:
   193                           	opt stack 0
   194  000054                     	ds	1
   195  000055                     _valuePort:
   196                           	opt stack 0
   197  000055                     	ds	1
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           postdec1	equ	0xFE5
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	dataCOMRAM
   207  000044                     __pdataCOMRAM:
   208                           	opt stack 0
   209  000044                     main@F2901:
   210                           	opt stack 0
   211  000044                     	ds	15
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	cstackBANK0
   221  000080                     __pcstackBANK0:
   222                           	opt stack 0
   223  000080                     main@str:
   224                           	opt stack 0
   225                           
   226                           ; 15 bytes @ 0x0
   227  000080                     	ds	15
   228  00008F                     main@xpos:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xF
   232  00008F                     	ds	1
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           postdec1	equ	0xFE5
   239                           fsr1l	equ	0xFE1
   240                           
   241                           	psect	cstackCOMRAM
   242  000001                     __pcstackCOMRAM:
   243                           	opt stack 0
   244  000001                     ??_high_isr:
   245  000001                     
   246                           ; 2 bytes @ 0x0
   247  000001                     	ds	16
   248  000011                     ??_low_isr:
   249                           
   250                           ; 1 bytes @ 0x10
   251  000011                     	ds	17
   252  000022                     ??_initLCD:
   253  000022                     ??_clearDisplay:
   254  000022                     ??_I2CStart:
   255  000022                     ??_I2CStop:
   256  000022                     ??_lcdWriteChar:
   257  000022                     ??_I2CSendError:
   258  000022                     ??_I2CReceiveError:
   259  000022                     ??_receiveByte:
   260  000022                     ?___lwdiv:
   261                           	opt stack 0
   262  000022                     ?___lwmod:
   263                           	opt stack 0
   264  000022                     ___lwdiv@dividend:
   265                           	opt stack 0
   266  000022                     ___lwmod@dividend:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x21
   270  000022                     	ds	1
   271  000023                     lcdWriteChar@leter:
   272                           	opt stack 0
   273  000023                     I2CSendError@i:
   274                           	opt stack 0
   275  000023                     I2CReceiveError@i:
   276                           	opt stack 0
   277  000023                     receiveByte@bit_count:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x22
   281  000023                     	ds	1
   282  000024                     ??_sendByte:
   283  000024                     receiveByte@retc:
   284                           	opt stack 0
   285  000024                     lcdWriteString@str:
   286                           	opt stack 0
   287  000024                     ___lwdiv@divisor:
   288                           	opt stack 0
   289  000024                     ___lwmod@divisor:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x23
   293  000024                     	ds	2
   294  000026                     ??_lcdWriteString:
   295  000026                     ___lwdiv@counter:
   296                           	opt stack 0
   297  000026                     ___lwmod@counter:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x25
   301  000026                     	ds	1
   302  000027                     sendByte@c:
   303                           	opt stack 0
   304  000027                     ___lwdiv@quotient:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x26
   308  000027                     	ds	1
   309  000028                     sendByte@bit_count:
   310                           	opt stack 0
   311  000028                     lcdWriteString@i:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x27
   315  000028                     	ds	1
   316  000029                     readDataByte@reg:
   317                           	opt stack 0
   318  000029                     lcdWriteUI@num:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x28
   322  000029                     	ds	1
   323  00002A                     readDataByte@c:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x29
   327  00002A                     	ds	1
   328  00002B                     readZ@z_pos:
   329                           	opt stack 0
   330  00002B                     positionAvailable@status:
   331                           	opt stack 0
   332  00002B                     lcdWriteUI@stack:
   333                           	opt stack 0
   334                           
   335                           ; 20 bytes @ 0x2A
   336  00002B                     	ds	20
   337  00003F                     lcdWriteUI@i:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x3E
   341  00003F                     	ds	2
   342  000041                     lcdWriteInt@num:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x40
   346  000041                     	ds	1
   347  000042                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x41
   350  000042                     	ds	2
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 42 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  str            15    0[BANK0 ] unsigned char [15]
   369 ;;  xpos            1   15[BANK0 ] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  2   55[None  ] int 
   372 ;; Registers used:
   373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;Total ram usage:       18 bytes
   384 ;; Hardware stack levels required when called:    7
   385 ;; This function calls:
   386 ;;		_ConfigureOscillator
   387 ;;		_I2CStart
   388 ;;		_I2CStop
   389 ;;		_InitApp
   390 ;;		_clearDisplay
   391 ;;		_initLCD
   392 ;;		_lcdWriteInt
   393 ;;		_lcdWriteString
   394 ;;		_positionAvailable
   395 ;;		_readZ
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text0
   402  001014                     __ptext0:
   403                           	opt stack 0
   404  001014                     _main:
   405                           	opt stack 24
   406                           
   407                           ;main.c: 45: ConfigureOscillator();
   408                           
   409                           ;incstack = 0
   410  001014  ECAE  F00B         	call	_ConfigureOscillator	;wreg free
   411                           
   412                           ;main.c: 48: InitApp();
   413  001018  ECAD  F00B         	call	_InitApp	;wreg free
   414                           
   415                           ;main.c: 50: TRISB=0X00;
   416  00101C  0E00               	movlw	0
   417  00101E  6E93               	movwf	3987,c	;volatile
   418                           
   419                           ;main.c: 51: TRISA=0XFF;
   420  001020  6892               	setf	3986,c	;volatile
   421                           
   422                           ;main.c: 52: TRISD = 0x00;
   423  001022  0E00               	movlw	0
   424  001024  6E95               	movwf	3989,c	;volatile
   425                           
   426                           ;main.c: 53: TRISC = 0b00000000;
   427  001026  0E00               	movlw	0
   428  001028  6E94               	movwf	3988,c	;volatile
   429                           
   430                           ;main.c: 54: PORTB=0X00;
   431  00102A  0E00               	movlw	0
   432  00102C  6E81               	movwf	3969,c	;volatile
   433                           
   434                           ;main.c: 56: T0CON = 0b10001000;
   435  00102E  0E88               	movlw	136
   436  001030  6ED5               	movwf	4053,c	;volatile
   437                           
   438                           ;main.c: 57: INTCONbits.TMR0IE = 1;
   439  001032  8AF2               	bsf	intcon,5,c	;volatile
   440                           
   441                           ;main.c: 60: _delay((unsigned long)((70)*(8000000/4000.0)));
   442  001034  0EB6               	movlw	182
   443  001036  6E42               	movwf	??_main& (0+255),c
   444  001038  0ED0               	movlw	208
   445  00103A                     u837:
   446  00103A  2EE8               	decfsz	wreg,f,c
   447  00103C  D7FE               	bra	u837
   448  00103E  2E42               	decfsz	??_main& (0+255),f,c
   449  001040  D7FC               	bra	u837
   450  001042  D000               	nop2	
   451                           
   452                           ;main.c: 61: initLCD();
   453  001044  EC46  F009         	call	_initLCD	;wreg free
   454                           
   455                           ;main.c: 62: unsigned char str[15] = "HELLO WORLD";
   456  001048  EE20  F044         	lfsr	2,main@F2901
   457  00104C  EE10  F080         	lfsr	1,main@str
   458  001050  0E0E               	movlw	14
   459  001052                     u771:
   460  001052  CFDB FFE3          	movff	plusw2,plusw1
   461  001056  06E8               	decf	wreg,f,c
   462  001058  E2FC               	bc	u771
   463                           
   464                           ;main.c: 63: lcdWriteString(str);
   465  00105A  0E80               	movlw	low main@str
   466  00105C  6E24               	movwf	lcdWriteString@str,c
   467  00105E  0E00               	movlw	high main@str
   468  001060  6E25               	movwf	lcdWriteString@str+1,c
   469  001062  EC12  F00A         	call	_lcdWriteString	;wreg free
   470                           
   471                           ;main.c: 64: _delay((unsigned long)((500)*(8000000/4000.0)));
   472  001066  0E06               	movlw	6
   473  001068  6E43               	movwf	(??_main+1)& (0+255),c
   474  00106A  0E13               	movlw	19
   475  00106C  6E42               	movwf	??_main& (0+255),c
   476  00106E  0EAE               	movlw	174
   477  001070                     u847:
   478  001070  2EE8               	decfsz	wreg,f,c
   479  001072  D7FE               	bra	u847
   480  001074  2E42               	decfsz	??_main& (0+255),f,c
   481  001076  D7FC               	bra	u847
   482  001078  2E43               	decfsz	(??_main+1)& (0+255),f,c
   483  00107A  D7FA               	bra	u847
   484                           
   485                           ;main.c: 65: clearDisplay();
   486  00107C  EC2C  F00B         	call	_clearDisplay	;wreg free
   487                           
   488                           ;main.c: 66: initLCD();
   489  001080  EC46  F009         	call	_initLCD	;wreg free
   490                           
   491                           ;main.c: 67: lcdWriteInt(123);
   492  001084  0E7B               	movlw	123
   493  001086  EC92  F00B         	call	_lcdWriteInt
   494                           
   495                           ;main.c: 68: _delay((unsigned long)((500)*(8000000/4000.0)));
   496  00108A  0E06               	movlw	6
   497  00108C  6E43               	movwf	(??_main+1)& (0+255),c
   498  00108E  0E13               	movlw	19
   499  001090  6E42               	movwf	??_main& (0+255),c
   500  001092  0EAE               	movlw	174
   501  001094                     u857:
   502  001094  2EE8               	decfsz	wreg,f,c
   503  001096  D7FE               	bra	u857
   504  001098  2E42               	decfsz	??_main& (0+255),f,c
   505  00109A  D7FC               	bra	u857
   506  00109C  2E43               	decfsz	(??_main+1)& (0+255),f,c
   507  00109E  D7FA               	bra	u857
   508                           
   509                           ;main.c: 70: unsigned char xpos;
   510                           ;main.c: 72: _addr = 0x20;
   511  0010A0  0E20               	movlw	32
   512  0010A2  6E53               	movwf	__addr,c
   513  0010A4                     l1764:
   514                           
   515                           ;main.c: 76: clearDisplay();
   516  0010A4  EC2C  F00B         	call	_clearDisplay	;wreg free
   517                           
   518                           ;main.c: 77: initLCD();
   519  0010A8  EC46  F009         	call	_initLCD	;wreg free
   520                           
   521                           ;main.c: 78: I2CStart();
   522  0010AC  ECBB  F00A         	call	_I2CStart	;wreg free
   523                           
   524                           ;main.c: 79: if (positionAvailable()){
   525  0010B0  EC70  F00B         	call	_positionAvailable	;wreg free
   526  0010B4  0900               	iorlw	0
   527  0010B6  B4D8               	btfsc	status,2,c
   528  0010B8  D019               	goto	l1782
   529                           
   530                           ;main.c: 80: xpos = readZ();
   531  0010BA  EC60  F00B         	call	_readZ	;wreg free
   532  0010BE  0100               	movlb	0	; () banked
   533  0010C0  6F8F               	movwf	main@xpos& (0+255),b
   534                           
   535                           ; BSR set to: 0
   536                           ;main.c: 81: if (xpos != 0xFF){
   537  0010C2  0100               	movlb	0	; () banked
   538  0010C4  298F               	incf	main@xpos& (0+255),w,b
   539  0010C6  B4D8               	btfsc	status,2,c
   540  0010C8  D00B               	goto	l1780
   541                           
   542                           ; BSR set to: 0
   543                           ;main.c: 82: lcdWriteString("X POS: ");
   544  0010CA  0E0A               	movlw	low STR_1
   545  0010CC  6E24               	movwf	lcdWriteString@str,c
   546  0010CE  0E10               	movlw	high STR_1
   547  0010D0  6E25               	movwf	lcdWriteString@str+1,c
   548  0010D2  EC12  F00A         	call	_lcdWriteString	;wreg free
   549                           
   550                           ;main.c: 83: lcdWriteInt(xpos);
   551  0010D6  0100               	movlb	0	; () banked
   552  0010D8  518F               	movf	main@xpos& (0+255),w,b
   553  0010DA  EC92  F00B         	call	_lcdWriteInt
   554                           
   555                           ;main.c: 84: }
   556  0010DE  D006               	goto	l1782
   557  0010E0                     l1780:
   558                           
   559                           ;main.c: 85: else{
   560                           ;main.c: 86: lcdWriteString("ZX_ERROR");
   561  0010E0  0E01               	movlw	low STR_2
   562  0010E2  6E24               	movwf	lcdWriteString@str,c
   563  0010E4  0E10               	movlw	high STR_2
   564  0010E6  6E25               	movwf	lcdWriteString@str+1,c
   565  0010E8  EC12  F00A         	call	_lcdWriteString	;wreg free
   566  0010EC                     l1782:
   567                           
   568                           ;main.c: 87: }
   569                           ;main.c: 88: }
   570                           ;main.c: 92: I2CStop();
   571  0010EC  EC46  F00B         	call	_I2CStop	;wreg free
   572                           
   573                           ;main.c: 93: _delay((unsigned long)((300)*(8000000/4000.0)));
   574  0010F0  0E04               	movlw	4
   575  0010F2  6E43               	movwf	(??_main+1)& (0+255),c
   576  0010F4  0E0C               	movlw	12
   577  0010F6  6E42               	movwf	??_main& (0+255),c
   578  0010F8  0E34               	movlw	52
   579  0010FA                     u867:
   580  0010FA  2EE8               	decfsz	wreg,f,c
   581  0010FC  D7FE               	bra	u867
   582  0010FE  2E42               	decfsz	??_main& (0+255),f,c
   583  001100  D7FC               	bra	u867
   584  001102  2E43               	decfsz	(??_main+1)& (0+255),f,c
   585  001104  D7FA               	bra	u867
   586  001106  D7CE               	goto	l1764
   587  001108                     __end_of_main:
   588                           	opt stack 0
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           intcon	equ	0xFF2
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           postdec1	equ	0xFE5
   597                           plusw1	equ	0xFE3
   598                           fsr1l	equ	0xFE1
   599                           plusw2	equ	0xFDB
   600                           status	equ	0xFD8
   601                           
   602 ;; *************** function _readZ *****************
   603 ;; Defined at:
   604 ;;		line 181 in file "I2C.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  z_pos           1   42[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      unsigned char 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        1 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    6
   625 ;; This function calls:
   626 ;;		_I2CReceiveError
   627 ;;		_readDataByte
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634  0016C0                     __ptext1:
   635                           	opt stack 0
   636  0016C0                     _readZ:
   637                           	opt stack 24
   638                           
   639                           ;I2C.c: 182: unsigned char z_pos;
   640                           ;I2C.c: 183: z_pos = readDataByte(0x0A);
   641                           
   642                           ;incstack = 0
   643  0016C0  0E0A               	movlw	10
   644  0016C2  EC7D  F00B         	call	_readDataByte
   645  0016C6  6E2B               	movwf	readZ@z_pos,c
   646                           
   647                           ;I2C.c: 185: if (ack == 0 || z_pos > 240){
   648  0016C8  5054               	movf	_ack,w,c
   649  0016CA  B4D8               	btfsc	status,2,c
   650  0016CC  D003               	goto	l1708
   651  0016CE  0EF0               	movlw	240
   652  0016D0  642B               	cpfsgt	readZ@z_pos,c
   653  0016D2  D004               	goto	l1716
   654  0016D4                     l1708:
   655                           
   656                           ;I2C.c: 186: I2CReceiveError();
   657  0016D4  ECDC  F00A         	call	_I2CReceiveError	;wreg free
   658                           
   659                           ;I2C.c: 187: return 0xFF;
   660  0016D8  0EFF               	movlw	255
   661                           
   662                           ;I2C.c: 188: }
   663  0016DA  0012               	return	
   664  0016DC                     l1716:
   665                           
   666                           ;I2C.c: 189: else{
   667                           ;I2C.c: 190: return z_pos;
   668  0016DC  502B               	movf	readZ@z_pos,w,c
   669  0016DE  0012               	return	
   670  0016E0                     __end_of_readZ:
   671                           	opt stack 0
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           intcon	equ	0xFF2
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           plusw1	equ	0xFE3
   681                           fsr1l	equ	0xFE1
   682                           plusw2	equ	0xFDB
   683                           status	equ	0xFD8
   684                           
   685 ;; *************** function _I2CReceiveError *****************
   686 ;; Defined at:
   687 ;;		line 42 in file "I2C.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  i               1   34[COMRAM] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    3
   708 ;; This function calls:
   709 ;;		_ledOff_1
   710 ;;		_ledOn_1
   711 ;; This function is called by:
   712 ;;		_readZ
   713 ;;		_readX
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  0015B8                     __ptext2:
   719                           	opt stack 0
   720  0015B8                     _I2CReceiveError:
   721                           	opt stack 26
   722                           
   723                           ;I2C.c: 44: unsigned char i;
   724                           ;I2C.c: 45: for (i=0;i<1;i++)
   725                           
   726                           ;incstack = 0
   727  0015B8  0E00               	movlw	0
   728  0015BA  6E23               	movwf	I2CReceiveError@i,c
   729  0015BC  5023               	movf	I2CReceiveError@i,w,c
   730  0015BE  A4D8               	btfss	status,2,c
   731  0015C0  0012               	return	
   732                           
   733                           ;I2C.c: 46: {
   734                           ;I2C.c: 47: ledOn_1();
   735  0015C2  EC99  F00B         	call	_ledOn_1	;wreg free
   736                           
   737                           ;I2C.c: 48: _delay((unsigned long)((60)*(8000000/4000.0)));
   738  0015C6  0E9C               	movlw	156
   739  0015C8  6E22               	movwf	??_I2CReceiveError& (0+255),c
   740  0015CA  0ED7               	movlw	215
   741  0015CC                     u877:
   742  0015CC  2EE8               	decfsz	wreg,f,c
   743  0015CE  D7FE               	bra	u877
   744  0015D0  2E22               	decfsz	??_I2CReceiveError& (0+255),f,c
   745  0015D2  D7FC               	bra	u877
   746  0015D4  F000               	nop	
   747                           
   748                           ;I2C.c: 49: ledOff_1();
   749  0015D6  EC9D  F00B         	call	_ledOff_1	;wreg free
   750                           
   751                           ;I2C.c: 50: _delay((unsigned long)((60)*(8000000/4000.0)));
   752  0015DA  0E9C               	movlw	156
   753  0015DC  6E22               	movwf	??_I2CReceiveError& (0+255),c
   754  0015DE  0ED7               	movlw	215
   755  0015E0                     u887:
   756  0015E0  2EE8               	decfsz	wreg,f,c
   757  0015E2  D7FE               	bra	u887
   758  0015E4  2E22               	decfsz	??_I2CReceiveError& (0+255),f,c
   759  0015E6  D7FC               	bra	u887
   760  0015E8  F000               	nop	
   761  0015EA  2A23               	incf	I2CReceiveError@i,f,c
   762  0015EC  D7E7               	goto	L1
   763  0015EE                     __end_of_I2CReceiveError:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           intcon	equ	0xFF2
   770                           postinc0	equ	0xFEE
   771                           wreg	equ	0xFE8
   772                           postdec1	equ	0xFE5
   773                           plusw1	equ	0xFE3
   774                           fsr1l	equ	0xFE1
   775                           plusw2	equ	0xFDB
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _ledOn_1 *****************
   779 ;; Defined at:
   780 ;;		line 138 in file "user.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_I2CReceiveError
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text3
   809  001732                     __ptext3:
   810                           	opt stack 0
   811  001732                     _ledOn_1:
   812                           	opt stack 26
   813                           
   814                           ;user.c: 139: LATB = LATB | 0b00000010;
   815                           
   816                           ;incstack = 0
   817  001732  508A               	movf	3978,w,c	;volatile
   818  001734  0902               	iorlw	2
   819  001736  6E8A               	movwf	3978,c	;volatile
   820  001738  0012               	return		;funcret
   821  00173A                     __end_of_ledOn_1:
   822                           	opt stack 0
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           intcon	equ	0xFF2
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           postdec1	equ	0xFE5
   831                           plusw1	equ	0xFE3
   832                           fsr1l	equ	0xFE1
   833                           plusw2	equ	0xFDB
   834                           status	equ	0xFD8
   835                           
   836 ;; *************** function _ledOff_1 *****************
   837 ;; Defined at:
   838 ;;		line 151 in file "user.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    2
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_I2CReceiveError
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text4
   867  00173A                     __ptext4:
   868                           	opt stack 0
   869  00173A                     _ledOff_1:
   870                           	opt stack 26
   871                           
   872                           ;user.c: 152: LATB = LATB & 0b11111101;
   873                           
   874                           ;incstack = 0
   875  00173A  508A               	movf	3978,w,c	;volatile
   876  00173C  0BFD               	andlw	253
   877  00173E  6E8A               	movwf	3978,c	;volatile
   878  001740  0012               	return		;funcret
   879  001742                     __end_of_ledOff_1:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           plusw1	equ	0xFE3
   890                           fsr1l	equ	0xFE1
   891                           plusw2	equ	0xFDB
   892                           status	equ	0xFD8
   893                           
   894 ;; *************** function _positionAvailable *****************
   895 ;; Defined at:
   896 ;;		line 194 in file "I2C.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  status          1   42[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        1 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    6
   917 ;; This function calls:
   918 ;;		_readDataByte
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text5
   925  0016E0                     __ptext5:
   926                           	opt stack 0
   927  0016E0                     _positionAvailable:
   928                           	opt stack 24
   929                           
   930                           ;I2C.c: 195: unsigned char status;
   931                           ;I2C.c: 196: status = readDataByte(0x00);
   932                           
   933                           ;incstack = 0
   934  0016E0  0E00               	movlw	0
   935  0016E2  EC7D  F00B         	call	_readDataByte
   936  0016E6  6E2B               	movwf	positionAvailable@status,c
   937                           
   938                           ;I2C.c: 197: if(ack == 0 || (status & 0b00000001) == 0){
   939  0016E8  5054               	movf	_ack,w,c
   940  0016EA  A4D8               	btfss	status,2,c
   941  0016EC  A02B               	btfss	positionAvailable@status,0,c
   942  0016EE  D001               	goto	l1692
   943  0016F0  D002               	goto	l1698
   944  0016F2                     l1692:
   945                           
   946                           ;I2C.c: 198: return 0;
   947  0016F2  0E00               	movlw	0
   948                           
   949                           ;I2C.c: 199: }
   950  0016F4  0012               	return	
   951  0016F6                     l1698:
   952                           
   953                           ;I2C.c: 200: else{
   954                           ;I2C.c: 201: return 1;
   955  0016F6  0E01               	movlw	1
   956  0016F8  0012               	return	
   957  0016FA                     __end_of_positionAvailable:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           intcon	equ	0xFF2
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           plusw1	equ	0xFE3
   968                           fsr1l	equ	0xFE1
   969                           plusw2	equ	0xFDB
   970                           status	equ	0xFD8
   971                           
   972 ;; *************** function _readDataByte *****************
   973 ;; Defined at:
   974 ;;		line 143 in file "I2C.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  reg             1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  reg             1   40[COMRAM] unsigned char 
   979 ;;  c               1   41[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      unsigned char 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        2 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    5
   996 ;; This function calls:
   997 ;;		_receiveByte
   998 ;;		_sendByte
   999 ;; This function is called by:
  1000 ;;		_readZ
  1001 ;;		_positionAvailable
  1002 ;;		_readX
  1003 ;;		_gestureAvailable
  1004 ;;		_readGesture
  1005 ;;		_readGestureSpeed
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text6
  1010  0016FA                     __ptext6:
  1011                           	opt stack 0
  1012  0016FA                     _readDataByte:
  1013                           	opt stack 24
  1014                           
  1015                           ;incstack = 0
  1016                           ;readDataByte@reg stored from wreg
  1017  0016FA  6E29               	movwf	readDataByte@reg,c
  1018                           
  1019                           ;I2C.c: 144: sendByte(reg);
  1020  0016FC  5029               	movf	readDataByte@reg,w,c
  1021  0016FE  EC84  F008         	call	_sendByte
  1022                           
  1023                           ;I2C.c: 145: _addr |= 0b00000001;
  1024  001702  8053               	bsf	__addr,0,c
  1025                           
  1026                           ;I2C.c: 146: sendByte(_addr);
  1027  001704  5053               	movf	__addr,w,c
  1028  001706  EC84  F008         	call	_sendByte
  1029                           
  1030                           ;I2C.c: 162: unsigned char c;
  1031                           ;I2C.c: 163: c = receiveByte();
  1032  00170A  EC91  F009         	call	_receiveByte	;wreg free
  1033  00170E  6E2A               	movwf	readDataByte@c,c
  1034                           
  1035                           ;I2C.c: 164: return c;
  1036  001710  502A               	movf	readDataByte@c,w,c
  1037  001712  0012               	return	
  1038  001714                     __end_of_readDataByte:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           plusw1	equ	0xFE3
  1049                           fsr1l	equ	0xFE1
  1050                           plusw2	equ	0xFDB
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _sendByte *****************
  1054 ;; Defined at:
  1055 ;;		line 67 in file "I2C.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  c               1    wreg     unsigned char 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  c               1   38[COMRAM] unsigned char 
  1060 ;;  bit_count       1   39[COMRAM] unsigned char 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        5 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    4
  1077 ;; This function calls:
  1078 ;;		_I2CSendError
  1079 ;; This function is called by:
  1080 ;;		_readDataByte
  1081 ;;		_writeDataByte
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text7
  1086  001108                     __ptext7:
  1087                           	opt stack 0
  1088  001108                     _sendByte:
  1089                           	opt stack 24
  1090                           
  1091                           ;incstack = 0
  1092                           ;sendByte@c stored from wreg
  1093  001108  6E27               	movwf	sendByte@c,c
  1094                           
  1095                           ;I2C.c: 70: _delay((unsigned long)((5)*(8000000/4000.0)));
  1096  00110A  0E0D               	movlw	13
  1097  00110C  6E24               	movwf	??_sendByte& (0+255),c
  1098  00110E  0EFC               	movlw	252
  1099  001110                     u897:
  1100  001110  2EE8               	decfsz	wreg,f,c
  1101  001112  D7FE               	bra	u897
  1102  001114  2E24               	decfsz	??_sendByte& (0+255),f,c
  1103  001116  D7FC               	bra	u897
  1104                           
  1105                           ;I2C.c: 71: unsigned char bit_count;
  1106                           ;I2C.c: 72: for (bit_count = 0; bit_count < 8; bit_count++)
  1107  001118  0E00               	movlw	0
  1108  00111A  6E28               	movwf	sendByte@bit_count,c
  1109  00111C                     l1454:
  1110  00111C  0E07               	movlw	7
  1111  00111E  6428               	cpfsgt	sendByte@bit_count,c
  1112  001120  D001               	goto	l1458
  1113  001122  D02F               	goto	l1470
  1114  001124                     l1458:
  1115                           
  1116                           ;I2C.c: 73: {
  1117                           ;I2C.c: 74: if (c & (0x80 >> bit_count)){
  1118  001124  C028  F024         	movff	sendByte@bit_count,??_sendByte
  1119  001128  0E80               	movlw	128
  1120  00112A  6E25               	movwf	(??_sendByte+1)& (0+255),c
  1121  00112C  0E00               	movlw	0
  1122  00112E  6E26               	movwf	(??_sendByte+2)& (0+255),c
  1123  001130  2A24               	incf	??_sendByte,f,c
  1124  001132  D003               	goto	u534
  1125  001134                     u535:
  1126  001134  3426               	rlcf	??_sendByte+2,w,c
  1127  001136  3226               	rrcf	??_sendByte+2,f,c
  1128  001138  3225               	rrcf	??_sendByte+1,f,c
  1129  00113A                     u534:
  1130  00113A  2E24               	decfsz	??_sendByte,f,c
  1131  00113C  D7FB               	goto	u535
  1132  00113E  5025               	movf	??_sendByte+1,w,c
  1133  001140  1427               	andwf	sendByte@c,w,c
  1134  001142  0900               	iorlw	0
  1135  001144  B4D8               	btfsc	status,2,c
  1136  001146  D002               	goto	l171
  1137                           
  1138                           ;I2C.c: 75: LATC4 = 1;
  1139  001148  888B               	bsf	3979,4,c	;volatile
  1140                           
  1141                           ;I2C.c: 76: }
  1142  00114A  D001               	goto	l1462
  1143  00114C                     l171:
  1144                           
  1145                           ;I2C.c: 77: else {
  1146                           ;I2C.c: 78: LATC4 = 0;
  1147  00114C  988B               	bcf	3979,4,c	;volatile
  1148  00114E                     l1462:
  1149                           
  1150                           ;I2C.c: 79: }
  1151                           ;I2C.c: 80: _delay((unsigned long)((5)*(8000000/4000.0)));
  1152  00114E  0E0D               	movlw	13
  1153  001150  6E24               	movwf	??_sendByte& (0+255),c
  1154  001152  0EFC               	movlw	252
  1155  001154                     u907:
  1156  001154  2EE8               	decfsz	wreg,f,c
  1157  001156  D7FE               	bra	u907
  1158  001158  2E24               	decfsz	??_sendByte& (0+255),f,c
  1159  00115A  D7FC               	bra	u907
  1160                           
  1161                           ;I2C.c: 81: LATC3 = 1;
  1162  00115C  868B               	bsf	3979,3,c	;volatile
  1163                           
  1164                           ;I2C.c: 82: _delay((unsigned long)((5)*(8000000/4000.0)));
  1165  00115E  0E0D               	movlw	13
  1166  001160  6E24               	movwf	??_sendByte& (0+255),c
  1167  001162  0EFC               	movlw	252
  1168  001164                     u917:
  1169  001164  2EE8               	decfsz	wreg,f,c
  1170  001166  D7FE               	bra	u917
  1171  001168  2E24               	decfsz	??_sendByte& (0+255),f,c
  1172  00116A  D7FC               	bra	u917
  1173                           
  1174                           ;I2C.c: 83: LATC3 = 0;
  1175  00116C  968B               	bcf	3979,3,c	;volatile
  1176                           
  1177                           ;I2C.c: 84: _delay((unsigned long)((6)*(8000000/4000.0)));
  1178  00116E  0E10               	movlw	16
  1179  001170  6E24               	movwf	??_sendByte& (0+255),c
  1180  001172  0E94               	movlw	148
  1181  001174                     u927:
  1182  001174  2EE8               	decfsz	wreg,f,c
  1183  001176  D7FE               	bra	u927
  1184  001178  2E24               	decfsz	??_sendByte& (0+255),f,c
  1185  00117A  D7FC               	bra	u927
  1186  00117C  D000               	nop2	
  1187  00117E  2A28               	incf	sendByte@bit_count,f,c
  1188  001180  D7CD               	goto	l1454
  1189  001182                     l1470:
  1190                           
  1191                           ;I2C.c: 85: }
  1192                           ;I2C.c: 86: _delay((unsigned long)((3)*(8000000/4000.0)));
  1193  001182  0E08               	movlw	8
  1194  001184  6E24               	movwf	??_sendByte& (0+255),c
  1195  001186  0ECA               	movlw	202
  1196  001188                     u937:
  1197  001188  2EE8               	decfsz	wreg,f,c
  1198  00118A  D7FE               	bra	u937
  1199  00118C  2E24               	decfsz	??_sendByte& (0+255),f,c
  1200  00118E  D7FC               	bra	u937
  1201                           
  1202                           ;I2C.c: 87: LATC4 = 1;
  1203  001190  888B               	bsf	3979,4,c	;volatile
  1204                           
  1205                           ;I2C.c: 88: _delay((unsigned long)((3)*(8000000/4000.0)));
  1206  001192  0E08               	movlw	8
  1207  001194  6E24               	movwf	??_sendByte& (0+255),c
  1208  001196  0ECA               	movlw	202
  1209  001198                     u947:
  1210  001198  2EE8               	decfsz	wreg,f,c
  1211  00119A  D7FE               	bra	u947
  1212  00119C  2E24               	decfsz	??_sendByte& (0+255),f,c
  1213  00119E  D7FC               	bra	u947
  1214                           
  1215                           ;I2C.c: 89: LATC3 = 1;
  1216  0011A0  868B               	bsf	3979,3,c	;volatile
  1217                           
  1218                           ;I2C.c: 90: _delay((unsigned long)((5)*(8000000/4000.0)));
  1219  0011A2  0E0D               	movlw	13
  1220  0011A4  6E24               	movwf	??_sendByte& (0+255),c
  1221  0011A6  0EFC               	movlw	252
  1222  0011A8                     u957:
  1223  0011A8  2EE8               	decfsz	wreg,f,c
  1224  0011AA  D7FE               	bra	u957
  1225  0011AC  2E24               	decfsz	??_sendByte& (0+255),f,c
  1226  0011AE  D7FC               	bra	u957
  1227                           
  1228                           ;I2C.c: 91: if (LATC4 == 1){
  1229  0011B0  A88B               	btfss	3979,4,c	;volatile
  1230  0011B2  D005               	goto	l1482
  1231                           
  1232                           ;I2C.c: 92: ack = 0;
  1233  0011B4  0E00               	movlw	0
  1234  0011B6  6E54               	movwf	_ack,c
  1235                           
  1236                           ;I2C.c: 93: I2CSendError();
  1237  0011B8  ECF7  F00A         	call	_I2CSendError	;wreg free
  1238                           
  1239                           ;I2C.c: 94: }
  1240  0011BC  D002               	goto	l1484
  1241  0011BE                     l1482:
  1242                           
  1243                           ;I2C.c: 95: else
  1244                           ;I2C.c: 96: ack = 1;
  1245  0011BE  0E01               	movlw	1
  1246  0011C0  6E54               	movwf	_ack,c
  1247  0011C2                     l1484:
  1248                           
  1249                           ;I2C.c: 97: _delay((unsigned long)((2)*(8000000/4000.0)));
  1250  0011C2  0E06               	movlw	6
  1251  0011C4  6E24               	movwf	??_sendByte& (0+255),c
  1252  0011C6  0E30               	movlw	48
  1253  0011C8                     u967:
  1254  0011C8  2EE8               	decfsz	wreg,f,c
  1255  0011CA  D7FE               	bra	u967
  1256  0011CC  2E24               	decfsz	??_sendByte& (0+255),f,c
  1257  0011CE  D7FC               	bra	u967
  1258  0011D0  D000               	nop2	
  1259                           
  1260                           ;I2C.c: 98: LATC3 = 0;
  1261  0011D2  968B               	bcf	3979,3,c	;volatile
  1262                           
  1263                           ;I2C.c: 99: _delay((unsigned long)((3)*(8000000/4000.0)));
  1264  0011D4  0E08               	movlw	8
  1265  0011D6  6E24               	movwf	??_sendByte& (0+255),c
  1266  0011D8  0ECA               	movlw	202
  1267  0011DA                     u977:
  1268  0011DA  2EE8               	decfsz	wreg,f,c
  1269  0011DC  D7FE               	bra	u977
  1270  0011DE  2E24               	decfsz	??_sendByte& (0+255),f,c
  1271  0011E0  D7FC               	bra	u977
  1272                           
  1273                           ;I2C.c: 100: LATC4 = 1;
  1274  0011E2  888B               	bsf	3979,4,c	;volatile
  1275                           
  1276                           ;I2C.c: 101: _delay((unsigned long)((3)*(8000000/4000.0)));
  1277  0011E4  0E08               	movlw	8
  1278  0011E6  6E24               	movwf	??_sendByte& (0+255),c
  1279  0011E8  0ECA               	movlw	202
  1280  0011EA                     u987:
  1281  0011EA  2EE8               	decfsz	wreg,f,c
  1282  0011EC  D7FE               	bra	u987
  1283  0011EE  2E24               	decfsz	??_sendByte& (0+255),f,c
  1284  0011F0  D7FC               	bra	u987
  1285  0011F2  0012               	return		;funcret
  1286  0011F4                     __end_of_sendByte:
  1287                           	opt stack 0
  1288                           tblptru	equ	0xFF8
  1289                           tblptrh	equ	0xFF7
  1290                           tblptrl	equ	0xFF6
  1291                           tablat	equ	0xFF5
  1292                           intcon	equ	0xFF2
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           postdec1	equ	0xFE5
  1296                           plusw1	equ	0xFE3
  1297                           fsr1l	equ	0xFE1
  1298                           plusw2	equ	0xFDB
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _I2CSendError *****************
  1302 ;; Defined at:
  1303 ;;		line 30 in file "I2C.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  i               1   34[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        2 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    3
  1324 ;; This function calls:
  1325 ;;		_ledOff_0
  1326 ;;		_ledOn_0
  1327 ;; This function is called by:
  1328 ;;		_sendByte
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text8
  1333  0015EE                     __ptext8:
  1334                           	opt stack 0
  1335  0015EE                     _I2CSendError:
  1336                           	opt stack 24
  1337                           
  1338                           ;I2C.c: 32: unsigned char i;
  1339                           ;I2C.c: 33: for (i=0;i<1;i++)
  1340                           
  1341                           ;incstack = 0
  1342  0015EE  0E00               	movlw	0
  1343  0015F0  6E23               	movwf	I2CSendError@i,c
  1344  0015F2  5023               	movf	I2CSendError@i,w,c
  1345  0015F4  A4D8               	btfss	status,2,c
  1346  0015F6  0012               	return	
  1347                           
  1348                           ;I2C.c: 34: {
  1349                           ;I2C.c: 35: ledOn_0();
  1350  0015F8  ECA1  F00B         	call	_ledOn_0	;wreg free
  1351                           
  1352                           ;I2C.c: 36: _delay((unsigned long)((60)*(8000000/4000.0)));
  1353  0015FC  0E9C               	movlw	156
  1354  0015FE  6E22               	movwf	??_I2CSendError& (0+255),c
  1355  001600  0ED7               	movlw	215
  1356  001602                     u997:
  1357  001602  2EE8               	decfsz	wreg,f,c
  1358  001604  D7FE               	bra	u997
  1359  001606  2E22               	decfsz	??_I2CSendError& (0+255),f,c
  1360  001608  D7FC               	bra	u997
  1361  00160A  F000               	nop	
  1362                           
  1363                           ;I2C.c: 37: ledOff_0();
  1364  00160C  ECA5  F00B         	call	_ledOff_0	;wreg free
  1365                           
  1366                           ;I2C.c: 38: _delay((unsigned long)((60)*(8000000/4000.0)));
  1367  001610  0E9C               	movlw	156
  1368  001612  6E22               	movwf	??_I2CSendError& (0+255),c
  1369  001614  0ED7               	movlw	215
  1370  001616                     u1007:
  1371  001616  2EE8               	decfsz	wreg,f,c
  1372  001618  D7FE               	bra	u1007
  1373  00161A  2E22               	decfsz	??_I2CSendError& (0+255),f,c
  1374  00161C  D7FC               	bra	u1007
  1375  00161E  F000               	nop	
  1376  001620  2A23               	incf	I2CSendError@i,f,c
  1377  001622  D7E7               	goto	L2
  1378  001624                     __end_of_I2CSendError:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           tblptrh	equ	0xFF7
  1382                           tblptrl	equ	0xFF6
  1383                           tablat	equ	0xFF5
  1384                           intcon	equ	0xFF2
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           plusw1	equ	0xFE3
  1389                           fsr1l	equ	0xFE1
  1390                           plusw2	equ	0xFDB
  1391                           status	equ	0xFD8
  1392                           
  1393 ;; *************** function _ledOn_0 *****************
  1394 ;; Defined at:
  1395 ;;		line 135 in file "user.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    2
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_I2CSendError
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text9
  1424  001742                     __ptext9:
  1425                           	opt stack 0
  1426  001742                     _ledOn_0:
  1427                           	opt stack 24
  1428                           
  1429                           ;user.c: 136: LATB = LATB | 0b00000001;
  1430                           
  1431                           ;incstack = 0
  1432  001742  508A               	movf	3978,w,c	;volatile
  1433  001744  0901               	iorlw	1
  1434  001746  6E8A               	movwf	3978,c	;volatile
  1435  001748  0012               	return		;funcret
  1436  00174A                     __end_of_ledOn_0:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           intcon	equ	0xFF2
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           postdec1	equ	0xFE5
  1446                           plusw1	equ	0xFE3
  1447                           fsr1l	equ	0xFE1
  1448                           plusw2	equ	0xFDB
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _ledOff_0 *****************
  1452 ;; Defined at:
  1453 ;;		line 148 in file "user.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    2
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_I2CSendError
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text10
  1482  00174A                     __ptext10:
  1483                           	opt stack 0
  1484  00174A                     _ledOff_0:
  1485                           	opt stack 24
  1486                           
  1487                           ;user.c: 149: LATB = LATB & 0b11111110;
  1488                           
  1489                           ;incstack = 0
  1490  00174A  508A               	movf	3978,w,c	;volatile
  1491  00174C  0BFE               	andlw	254
  1492  00174E  6E8A               	movwf	3978,c	;volatile
  1493  001750  0012               	return		;funcret
  1494  001752                     __end_of_ledOff_0:
  1495                           	opt stack 0
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           postdec1	equ	0xFE5
  1504                           plusw1	equ	0xFE3
  1505                           fsr1l	equ	0xFE1
  1506                           plusw2	equ	0xFDB
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _receiveByte *****************
  1510 ;; Defined at:
  1511 ;;		line 104 in file "I2C.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  retc            1   35[COMRAM] unsigned char 
  1516 ;;  bit_count       1   34[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        3 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_readDataByte
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text11
  1541  001322                     __ptext11:
  1542                           	opt stack 0
  1543  001322                     _receiveByte:
  1544                           	opt stack 26
  1545                           
  1546                           ;I2C.c: 105: unsigned char retc, bit_count;
  1547                           ;I2C.c: 106: retc = 0;
  1548                           
  1549                           ;incstack = 0
  1550  001322  0E00               	movlw	0
  1551  001324  6E24               	movwf	receiveByte@retc,c
  1552                           
  1553                           ;I2C.c: 107: LATC4 = 1;
  1554  001326  888B               	bsf	3979,4,c	;volatile
  1555                           
  1556                           ;I2C.c: 108: _delay((unsigned long)((5)*(8000000/4000.0)));
  1557  001328  0E0D               	movlw	13
  1558  00132A  6E22               	movwf	??_receiveByte& (0+255),c
  1559  00132C  0EFC               	movlw	252
  1560  00132E                     u1017:
  1561  00132E  2EE8               	decfsz	wreg,f,c
  1562  001330  D7FE               	bra	u1017
  1563  001332  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1564  001334  D7FC               	bra	u1017
  1565                           
  1566                           ;I2C.c: 109: for (bit_count = 0; bit_count < 8; bit_count++)
  1567  001336  0E00               	movlw	0
  1568  001338  6E23               	movwf	receiveByte@bit_count,c
  1569  00133A                     l1502:
  1570  00133A  0E07               	movlw	7
  1571  00133C  6423               	cpfsgt	receiveByte@bit_count,c
  1572  00133E  D001               	goto	l1506
  1573  001340  D029               	goto	l179
  1574  001342                     l1506:
  1575                           
  1576                           ;I2C.c: 110: {
  1577                           ;I2C.c: 111: _delay((unsigned long)((1)*(8000000/4000.0)));
  1578  001342  0E03               	movlw	3
  1579  001344  6E22               	movwf	??_receiveByte& (0+255),c
  1580  001346  0E98               	movlw	152
  1581  001348                     u1027:
  1582  001348  2EE8               	decfsz	wreg,f,c
  1583  00134A  D7FE               	bra	u1027
  1584  00134C  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1585  00134E  D7FC               	bra	u1027
  1586                           
  1587                           ;I2C.c: 112: LATC3 = 0;
  1588  001350  968B               	bcf	3979,3,c	;volatile
  1589                           
  1590                           ;I2C.c: 113: _delay((unsigned long)((5)*(8000000/4000.0)));
  1591  001352  0E0D               	movlw	13
  1592  001354  6E22               	movwf	??_receiveByte& (0+255),c
  1593  001356  0EFC               	movlw	252
  1594  001358                     u1037:
  1595  001358  2EE8               	decfsz	wreg,f,c
  1596  00135A  D7FE               	bra	u1037
  1597  00135C  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1598  00135E  D7FC               	bra	u1037
  1599                           
  1600                           ;I2C.c: 114: LATC3 = 1;
  1601  001360  868B               	bsf	3979,3,c	;volatile
  1602                           
  1603                           ;I2C.c: 115: _delay((unsigned long)((2)*(8000000/4000.0)));
  1604  001362  0E06               	movlw	6
  1605  001364  6E22               	movwf	??_receiveByte& (0+255),c
  1606  001366  0E30               	movlw	48
  1607  001368                     u1047:
  1608  001368  2EE8               	decfsz	wreg,f,c
  1609  00136A  D7FE               	bra	u1047
  1610  00136C  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1611  00136E  D7FC               	bra	u1047
  1612  001370  D000               	nop2	
  1613                           
  1614                           ;I2C.c: 116: retc = retc << 1;
  1615  001372  5024               	movf	receiveByte@retc,w,c
  1616  001374  2424               	addwf	receiveByte@retc,w,c
  1617  001376  6E24               	movwf	receiveByte@retc,c
  1618                           
  1619                           ;I2C.c: 117: if (LATC4 == 1)
  1620  001378  A88B               	btfss	3979,4,c	;volatile
  1621  00137A  D002               	goto	l1518
  1622                           
  1623                           ;I2C.c: 118: retc = retc + 1;
  1624  00137C  2824               	incf	receiveByte@retc,w,c
  1625  00137E  6E24               	movwf	receiveByte@retc,c
  1626  001380                     l1518:
  1627                           
  1628                           ;I2C.c: 119: _delay((unsigned long)((2)*(8000000/4000.0)));
  1629  001380  0E06               	movlw	6
  1630  001382  6E22               	movwf	??_receiveByte& (0+255),c
  1631  001384  0E30               	movlw	48
  1632  001386                     u1057:
  1633  001386  2EE8               	decfsz	wreg,f,c
  1634  001388  D7FE               	bra	u1057
  1635  00138A  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1636  00138C  D7FC               	bra	u1057
  1637  00138E  D000               	nop2	
  1638  001390  2A23               	incf	receiveByte@bit_count,f,c
  1639  001392  D7D3               	goto	l1502
  1640  001394                     l179:
  1641                           
  1642                           ;I2C.c: 120: }
  1643                           ;I2C.c: 121: LATC3 = 0;
  1644  001394  968B               	bcf	3979,3,c	;volatile
  1645                           
  1646                           ;I2C.c: 122: _delay((unsigned long)((2)*(8000000/4000.0)));
  1647  001396  0E06               	movlw	6
  1648  001398  6E22               	movwf	??_receiveByte& (0+255),c
  1649  00139A  0E30               	movlw	48
  1650  00139C                     u1067:
  1651  00139C  2EE8               	decfsz	wreg,f,c
  1652  00139E  D7FE               	bra	u1067
  1653  0013A0  2E22               	decfsz	??_receiveByte& (0+255),f,c
  1654  0013A2  D7FC               	bra	u1067
  1655  0013A4  D000               	nop2	
  1656                           
  1657                           ;I2C.c: 131: return retc;
  1658  0013A6  5024               	movf	receiveByte@retc,w,c
  1659  0013A8  0012               	return	
  1660  0013AA                     __end_of_receiveByte:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           plusw1	equ	0xFE3
  1671                           fsr1l	equ	0xFE1
  1672                           plusw2	equ	0xFDB
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _lcdWriteString *****************
  1676 ;; Defined at:
  1677 ;;		line 95 in file "user.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  str             2   35[COMRAM] PTR unsigned char 
  1680 ;;		 -> STR_2(9), STR_1(8), main@str(15), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  i               2   39[COMRAM] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    4
  1699 ;; This function calls:
  1700 ;;		_lcdWriteChar
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text12
  1707  001424                     __ptext12:
  1708                           	opt stack 0
  1709  001424                     _lcdWriteString:
  1710                           	opt stack 26
  1711                           
  1712                           ;user.c: 96: for(int i = 0; str[i]; i++){
  1713                           
  1714                           ;incstack = 0
  1715  001424  0E00               	movlw	0
  1716  001426  6E29               	movwf	lcdWriteString@i+1,c
  1717  001428  0E00               	movlw	0
  1718  00142A  6E28               	movwf	lcdWriteString@i,c
  1719  00142C  D01B               	goto	l1654
  1720  00142E                     l1650:
  1721                           
  1722                           ;user.c: 97: lcdWriteChar(str[i]);
  1723  00142E  5028               	movf	lcdWriteString@i,w,c
  1724  001430  2424               	addwf	lcdWriteString@str,w,c
  1725  001432  6E26               	movwf	??_lcdWriteString& (0+255),c
  1726  001434  5029               	movf	lcdWriteString@i+1,w,c
  1727  001436  2025               	addwfc	lcdWriteString@str+1,w,c
  1728  001438  6E27               	movwf	(??_lcdWriteString+1)& (0+255),c
  1729  00143A  C026  FFF6         	movff	??_lcdWriteString,tblptrl
  1730  00143E  C027  FFF7         	movff	??_lcdWriteString+1,tblptrh
  1731  001442  0E00               	movlw	low (__smallconst shr (0+16))
  1732  001444  6EF8               	movwf	tblptru,c
  1733  001446  0E0F               	movlw	(high __ramtop+-1)
  1734  001448  64F7               	cpfsgt	tblptrh,c
  1735  00144A  D003               	bra	u707
  1736  00144C  0008               	tblrd		*
  1737  00144E  50F5               	movf	tablat,w,c
  1738  001450  D005               	bra	u700
  1739  001452                     u707:
  1740  001452  CFF6 FFE1          	movff	tblptrl,fsr1l
  1741  001456  CFF7 FFE2          	movff	tblptrh,fsr1h
  1742  00145A  50E7               	movf	indf1,w,c
  1743  00145C                     u700:
  1744  00145C  EC76  F00A         	call	_lcdWriteChar
  1745  001460  4A28               	infsnz	lcdWriteString@i,f,c
  1746  001462  2A29               	incf	lcdWriteString@i+1,f,c
  1747  001464                     l1654:
  1748  001464  5028               	movf	lcdWriteString@i,w,c
  1749  001466  2424               	addwf	lcdWriteString@str,w,c
  1750  001468  6E26               	movwf	??_lcdWriteString& (0+255),c
  1751  00146A  5029               	movf	lcdWriteString@i+1,w,c
  1752  00146C  2025               	addwfc	lcdWriteString@str+1,w,c
  1753  00146E  6E27               	movwf	(??_lcdWriteString+1)& (0+255),c
  1754  001470  C026  FFF6         	movff	??_lcdWriteString,tblptrl
  1755  001474  C027  FFF7         	movff	??_lcdWriteString+1,tblptrh
  1756  001478  0E00               	movlw	low (__smallconst shr (0+16))
  1757  00147A  6EF8               	movwf	tblptru,c
  1758  00147C  0E0F               	movlw	(high __ramtop+-1)
  1759  00147E  64F7               	cpfsgt	tblptrh,c
  1760  001480  D003               	bra	u717
  1761  001482  0008               	tblrd		*
  1762  001484  50F5               	movf	tablat,w,c
  1763  001486  D005               	bra	u710
  1764  001488                     u717:
  1765  001488  CFF6 FFE1          	movff	tblptrl,fsr1l
  1766  00148C  CFF7 FFE2          	movff	tblptrh,fsr1h
  1767  001490  50E7               	movf	indf1,w,c
  1768  001492                     u710:
  1769  001492  0900               	iorlw	0
  1770  001494  B4D8               	btfsc	status,2,c
  1771  001496  0012               	return	
  1772  001498  D7CA               	goto	l1650
  1773  00149A                     __end_of_lcdWriteString:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           intcon	equ	0xFF2
  1780                           postinc0	equ	0xFEE
  1781                           wreg	equ	0xFE8
  1782                           indf1	equ	0xFE7
  1783                           postdec1	equ	0xFE5
  1784                           plusw1	equ	0xFE3
  1785                           fsr1h	equ	0xFE2
  1786                           fsr1l	equ	0xFE1
  1787                           plusw2	equ	0xFDB
  1788                           status	equ	0xFD8
  1789                           
  1790 ;; *************** function _lcdWriteInt *****************
  1791 ;; Defined at:
  1792 ;;		line 114 in file "user.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  num             1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  num             1   64[COMRAM] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;Total ram usage:        1 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    5
  1813 ;; This function calls:
  1814 ;;		_lcdWriteChar
  1815 ;;		_lcdWriteUI
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text13
  1822  001724                     __ptext13:
  1823                           	opt stack 0
  1824  001724                     _lcdWriteInt:
  1825                           	opt stack 25
  1826                           
  1827                           ;incstack = 0
  1828                           ;lcdWriteInt@num stored from wreg
  1829  001724  6E41               	movwf	lcdWriteInt@num,c
  1830                           
  1831                           ;user.c: 118: }
  1832                           ;user.c: 119: lcdWriteUI((unsigned int) num);
  1833                           
  1834                           ;user.c: 117: num = -num;
  1835                           
  1836                           ;user.c: 116: lcdWriteChar('-');
  1837                           
  1838                           ;user.c: 115: if(num < 0){
  1839  001726  C041  F029         	movff	lcdWriteInt@num,lcdWriteUI@num
  1840  00172A  6A2A               	clrf	lcdWriteUI@num+1,c
  1841  00172C  ECD5  F009         	call	_lcdWriteUI	;wreg free
  1842  001730  0012               	return		;funcret
  1843  001732                     __end_of_lcdWriteInt:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           indf1	equ	0xFE7
  1853                           postdec1	equ	0xFE5
  1854                           plusw1	equ	0xFE3
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           plusw2	equ	0xFDB
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _lcdWriteUI *****************
  1861 ;; Defined at:
  1862 ;;		line 101 in file "user.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  num             2   40[COMRAM] unsigned int 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  stack          20   42[COMRAM] unsigned char [20]
  1867 ;;  i               2   62[COMRAM] int 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:       24 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    4
  1884 ;; This function calls:
  1885 ;;		___lwdiv
  1886 ;;		___lwmod
  1887 ;;		_lcdWriteChar
  1888 ;; This function is called by:
  1889 ;;		_lcdWriteInt
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text14
  1894  0013AA                     __ptext14:
  1895                           	opt stack 0
  1896  0013AA                     _lcdWriteUI:
  1897                           	opt stack 25
  1898                           
  1899                           ;user.c: 102: char stack[20];
  1900                           ;user.c: 103: int i = 0;
  1901                           
  1902                           ;incstack = 0
  1903  0013AA  0E00               	movlw	0
  1904  0013AC  6E40               	movwf	lcdWriteUI@i+1,c
  1905  0013AE  0E00               	movlw	0
  1906  0013B0  6E3F               	movwf	lcdWriteUI@i,c
  1907  0013B2                     l1568:
  1908                           
  1909                           ;user.c: 105: stack[i++] = '0' + (num % 10);
  1910  0013B2  0E2B               	movlw	low lcdWriteUI@stack
  1911  0013B4  243F               	addwf	lcdWriteUI@i,w,c
  1912  0013B6  6ED9               	movwf	fsr2l,c
  1913  0013B8  0E00               	movlw	high lcdWriteUI@stack
  1914  0013BA  2040               	addwfc	lcdWriteUI@i+1,w,c
  1915  0013BC  6EDA               	movwf	fsr2h,c
  1916  0013BE  C029  F022         	movff	lcdWriteUI@num,___lwmod@dividend
  1917  0013C2  C02A  F023         	movff	lcdWriteUI@num+1,___lwmod@dividend+1
  1918  0013C6  0E00               	movlw	0
  1919  0013C8  6E25               	movwf	___lwmod@divisor+1,c
  1920  0013CA  0E0A               	movlw	10
  1921  0013CC  6E24               	movwf	___lwmod@divisor,c
  1922  0013CE  EC9A  F00A         	call	___lwmod	;wreg free
  1923  0013D2  5022               	movf	?___lwmod,w,c
  1924  0013D4  0F30               	addlw	48
  1925  0013D6  6EDF               	movwf	indf2,c
  1926  0013D8  4A3F               	infsnz	lcdWriteUI@i,f,c
  1927  0013DA  2A40               	incf	lcdWriteUI@i+1,f,c
  1928                           
  1929                           ;user.c: 106: num /= 10;
  1930  0013DC  C029  F022         	movff	lcdWriteUI@num,___lwdiv@dividend
  1931  0013E0  C02A  F023         	movff	lcdWriteUI@num+1,___lwdiv@dividend+1
  1932  0013E4  0E00               	movlw	0
  1933  0013E6  6E25               	movwf	___lwdiv@divisor+1,c
  1934  0013E8  0E0A               	movlw	10
  1935  0013EA  6E24               	movwf	___lwdiv@divisor,c
  1936  0013EC  EC4D  F00A         	call	___lwdiv	;wreg free
  1937  0013F0  C022  F029         	movff	?___lwdiv,lcdWriteUI@num
  1938  0013F4  C023  F02A         	movff	?___lwdiv+1,lcdWriteUI@num+1
  1939                           
  1940                           ;user.c: 107: }
  1941                           ;user.c: 108: while(num != 0);
  1942  0013F8  5029               	movf	lcdWriteUI@num,w,c
  1943  0013FA  102A               	iorwf	lcdWriteUI@num+1,w,c
  1944  0013FC  B4D8               	btfsc	status,2,c
  1945  0013FE  D00D               	goto	l1578
  1946  001400  D7D8               	goto	l1568
  1947  001402                     l1576:
  1948                           
  1949                           ;user.c: 110: lcdWriteChar(stack[--i]);
  1950  001402  063F               	decf	lcdWriteUI@i,f,c
  1951  001404  A0D8               	btfss	status,0,c
  1952  001406  0640               	decf	lcdWriteUI@i+1,f,c
  1953  001408  0E2B               	movlw	low lcdWriteUI@stack
  1954  00140A  243F               	addwf	lcdWriteUI@i,w,c
  1955  00140C  6ED9               	movwf	fsr2l,c
  1956  00140E  0E00               	movlw	high lcdWriteUI@stack
  1957  001410  2040               	addwfc	lcdWriteUI@i+1,w,c
  1958  001412  6EDA               	movwf	fsr2h,c
  1959  001414  50DF               	movf	indf2,w,c
  1960  001416  EC76  F00A         	call	_lcdWriteChar
  1961  00141A                     l1578:
  1962  00141A  503F               	movf	lcdWriteUI@i,w,c
  1963  00141C  1040               	iorwf	lcdWriteUI@i+1,w,c
  1964  00141E  B4D8               	btfsc	status,2,c
  1965  001420  0012               	return	
  1966  001422  D7EF               	goto	l1576
  1967  001424                     __end_of_lcdWriteUI:
  1968                           	opt stack 0
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           intcon	equ	0xFF2
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           indf1	equ	0xFE7
  1977                           postdec1	equ	0xFE5
  1978                           plusw1	equ	0xFE3
  1979                           fsr1h	equ	0xFE2
  1980                           fsr1l	equ	0xFE1
  1981                           indf2	equ	0xFDF
  1982                           plusw2	equ	0xFDB
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _lcdWriteChar *****************
  1988 ;; Defined at:
  1989 ;;		line 80 in file "user.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  leter           1    wreg     unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  leter           1   34[COMRAM] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    3
  2010 ;; This function calls:
  2011 ;;		_lcdEnable
  2012 ;; This function is called by:
  2013 ;;		_lcdWriteString
  2014 ;;		_lcdWriteUI
  2015 ;;		_lcdWriteInt
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text15
  2020  0014EC                     __ptext15:
  2021                           	opt stack 0
  2022  0014EC                     _lcdWriteChar:
  2023                           	opt stack 26
  2024                           
  2025                           ;incstack = 0
  2026                           ;lcdWriteChar@leter stored from wreg
  2027  0014EC  6E23               	movwf	lcdWriteChar@leter,c
  2028                           
  2029                           ;user.c: 81: PORTCbits.RC2 = 1;
  2030  0014EE  8482               	bsf	3970,2,c	;volatile
  2031                           
  2032                           ;user.c: 82: _delay((unsigned long)((10)*(8000000/4000.0)));
  2033  0014F0  0E1A               	movlw	26
  2034  0014F2  6E22               	movwf	??_lcdWriteChar& (0+255),c
  2035  0014F4  0EF8               	movlw	248
  2036  0014F6                     u1077:
  2037  0014F6  2EE8               	decfsz	wreg,f,c
  2038  0014F8  D7FE               	bra	u1077
  2039  0014FA  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  2040  0014FC  D7FC               	bra	u1077
  2041  0014FE  D000               	nop2	
  2042                           
  2043                           ;user.c: 85: PORTD = (leter >> 4) & 0b00001111;
  2044  001500  3823               	swapf	lcdWriteChar@leter,w,c
  2045  001502  0B0F               	andlw	15
  2046  001504  0B0F               	andlw	15
  2047  001506  6E83               	movwf	3971,c	;volatile
  2048                           
  2049                           ;user.c: 86: lcdEnable();
  2050  001508  ECA9  F00B         	call	_lcdEnable	;wreg free
  2051                           
  2052                           ;user.c: 87: _delay((unsigned long)((1)*(8000000/4000.0)));
  2053  00150C  0E03               	movlw	3
  2054  00150E  6E22               	movwf	??_lcdWriteChar& (0+255),c
  2055  001510  0E98               	movlw	152
  2056  001512                     u1087:
  2057  001512  2EE8               	decfsz	wreg,f,c
  2058  001514  D7FE               	bra	u1087
  2059  001516  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  2060  001518  D7FC               	bra	u1087
  2061                           
  2062                           ;user.c: 89: PORTD = leter & 0b00001111;
  2063  00151A  5023               	movf	lcdWriteChar@leter,w,c
  2064  00151C  0B0F               	andlw	15
  2065  00151E  6E83               	movwf	3971,c	;volatile
  2066                           
  2067                           ;user.c: 90: lcdEnable();
  2068  001520  ECA9  F00B         	call	_lcdEnable	;wreg free
  2069                           
  2070                           ;user.c: 91: _delay((unsigned long)((1)*(8000000/4000.0)));
  2071  001524  0E03               	movlw	3
  2072  001526  6E22               	movwf	??_lcdWriteChar& (0+255),c
  2073  001528  0E98               	movlw	152
  2074  00152A                     u1097:
  2075  00152A  2EE8               	decfsz	wreg,f,c
  2076  00152C  D7FE               	bra	u1097
  2077  00152E  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  2078  001530  D7FC               	bra	u1097
  2079  001532  0012               	return		;funcret
  2080  001534                     __end_of_lcdWriteChar:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           intcon	equ	0xFF2
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           indf1	equ	0xFE7
  2090                           postdec1	equ	0xFE5
  2091                           plusw1	equ	0xFE3
  2092                           fsr1h	equ	0xFE2
  2093                           fsr1l	equ	0xFE1
  2094                           indf2	equ	0xFDF
  2095                           plusw2	equ	0xFDB
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function ___lwmod *****************
  2101 ;; Defined at:
  2102 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  dividend        2   33[COMRAM] unsigned int 
  2105 ;;  divisor         2   35[COMRAM] unsigned int 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  counter         1   37[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   33[COMRAM] unsigned int 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        5 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_lcdWriteUI
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text16
  2132  001534                     __ptext16:
  2133                           	opt stack 0
  2134  001534                     ___lwmod:
  2135                           	opt stack 26
  2136                           
  2137                           ;incstack = 0
  2138  001534  5024               	movf	___lwmod@divisor,w,c
  2139  001536  1025               	iorwf	___lwmod@divisor+1,w,c
  2140  001538  B4D8               	btfsc	status,2,c
  2141  00153A  D018               	goto	l643
  2142  00153C  0E01               	movlw	1
  2143  00153E  6E26               	movwf	___lwmod@counter,c
  2144  001540  D004               	goto	l1556
  2145  001542                     l1554:
  2146  001542  90D8               	bcf	status,0,c
  2147  001544  3624               	rlcf	___lwmod@divisor,f,c
  2148  001546  3625               	rlcf	___lwmod@divisor+1,f,c
  2149  001548  2A26               	incf	___lwmod@counter,f,c
  2150  00154A                     l1556:
  2151  00154A  AE25               	btfss	___lwmod@divisor+1,7,c
  2152  00154C  D7FA               	goto	l1554
  2153  00154E                     l1558:
  2154  00154E  5024               	movf	___lwmod@divisor,w,c
  2155  001550  5C22               	subwf	___lwmod@dividend,w,c
  2156  001552  5025               	movf	___lwmod@divisor+1,w,c
  2157  001554  5823               	subwfb	___lwmod@dividend+1,w,c
  2158  001556  A0D8               	btfss	status,0,c
  2159  001558  D004               	goto	l1562
  2160  00155A  5024               	movf	___lwmod@divisor,w,c
  2161  00155C  5E22               	subwf	___lwmod@dividend,f,c
  2162  00155E  5025               	movf	___lwmod@divisor+1,w,c
  2163  001560  5A23               	subwfb	___lwmod@dividend+1,f,c
  2164  001562                     l1562:
  2165  001562  90D8               	bcf	status,0,c
  2166  001564  3225               	rrcf	___lwmod@divisor+1,f,c
  2167  001566  3224               	rrcf	___lwmod@divisor,f,c
  2168  001568  2E26               	decfsz	___lwmod@counter,f,c
  2169  00156A  D7F1               	goto	l1558
  2170  00156C                     l643:
  2171  00156C  C022  F022         	movff	___lwmod@dividend,?___lwmod
  2172  001570  C023  F023         	movff	___lwmod@dividend+1,?___lwmod+1
  2173  001574  0012               	return		;funcret
  2174  001576                     __end_of___lwmod:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf1	equ	0xFE7
  2184                           postdec1	equ	0xFE5
  2185                           plusw1	equ	0xFE3
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           plusw2	equ	0xFDB
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function ___lwdiv *****************
  2195 ;; Defined at:
  2196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  dividend        2   33[COMRAM] unsigned int 
  2199 ;;  divisor         2   35[COMRAM] unsigned int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  quotient        2   38[COMRAM] unsigned int 
  2202 ;;  counter         1   37[COMRAM] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  2   33[COMRAM] unsigned int 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;Total ram usage:        7 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_lcdWriteUI
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text17
  2227  00149A                     __ptext17:
  2228                           	opt stack 0
  2229  00149A                     ___lwdiv:
  2230                           	opt stack 26
  2231                           
  2232                           ;incstack = 0
  2233  00149A  0E00               	movlw	0
  2234  00149C  6E28               	movwf	___lwdiv@quotient+1,c
  2235  00149E  0E00               	movlw	0
  2236  0014A0  6E27               	movwf	___lwdiv@quotient,c
  2237  0014A2  5024               	movf	___lwdiv@divisor,w,c
  2238  0014A4  1025               	iorwf	___lwdiv@divisor+1,w,c
  2239  0014A6  B4D8               	btfsc	status,2,c
  2240  0014A8  D01C               	goto	l633
  2241  0014AA  0E01               	movlw	1
  2242  0014AC  6E26               	movwf	___lwdiv@counter,c
  2243  0014AE  D004               	goto	l1536
  2244  0014B0                     l1534:
  2245  0014B0  90D8               	bcf	status,0,c
  2246  0014B2  3624               	rlcf	___lwdiv@divisor,f,c
  2247  0014B4  3625               	rlcf	___lwdiv@divisor+1,f,c
  2248  0014B6  2A26               	incf	___lwdiv@counter,f,c
  2249  0014B8                     l1536:
  2250  0014B8  AE25               	btfss	___lwdiv@divisor+1,7,c
  2251  0014BA  D7FA               	goto	l1534
  2252  0014BC                     l1538:
  2253  0014BC  90D8               	bcf	status,0,c
  2254  0014BE  3627               	rlcf	___lwdiv@quotient,f,c
  2255  0014C0  3628               	rlcf	___lwdiv@quotient+1,f,c
  2256  0014C2  5024               	movf	___lwdiv@divisor,w,c
  2257  0014C4  5C22               	subwf	___lwdiv@dividend,w,c
  2258  0014C6  5025               	movf	___lwdiv@divisor+1,w,c
  2259  0014C8  5823               	subwfb	___lwdiv@dividend+1,w,c
  2260  0014CA  A0D8               	btfss	status,0,c
  2261  0014CC  D005               	goto	l1546
  2262  0014CE  5024               	movf	___lwdiv@divisor,w,c
  2263  0014D0  5E22               	subwf	___lwdiv@dividend,f,c
  2264  0014D2  5025               	movf	___lwdiv@divisor+1,w,c
  2265  0014D4  5A23               	subwfb	___lwdiv@dividend+1,f,c
  2266  0014D6  8027               	bsf	___lwdiv@quotient,0,c
  2267  0014D8                     l1546:
  2268  0014D8  90D8               	bcf	status,0,c
  2269  0014DA  3225               	rrcf	___lwdiv@divisor+1,f,c
  2270  0014DC  3224               	rrcf	___lwdiv@divisor,f,c
  2271  0014DE  2E26               	decfsz	___lwdiv@counter,f,c
  2272  0014E0  D7ED               	goto	l1538
  2273  0014E2                     l633:
  2274  0014E2  C027  F022         	movff	___lwdiv@quotient,?___lwdiv
  2275  0014E6  C028  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2276  0014EA  0012               	return		;funcret
  2277  0014EC                     __end_of___lwdiv:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           indf1	equ	0xFE7
  2287                           postdec1	equ	0xFE5
  2288                           plusw1	equ	0xFE3
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           plusw2	equ	0xFDB
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8
  2296                           
  2297 ;; *************** function _initLCD *****************
  2298 ;; Defined at:
  2299 ;;		line 47 in file "user.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;Total ram usage:        2 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    3
  2320 ;; This function calls:
  2321 ;;		_lcdEnable
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text18
  2328  00128C                     __ptext18:
  2329                           	opt stack 0
  2330  00128C                     _initLCD:
  2331                           	opt stack 27
  2332                           
  2333                           ;user.c: 48: PORTCbits.RC5 = 0;
  2334                           
  2335                           ;incstack = 0
  2336  00128C  9A82               	bcf	3970,5,c	;volatile
  2337                           
  2338                           ;user.c: 49: PORTCbits.RC2 = 0;
  2339  00128E  9482               	bcf	3970,2,c	;volatile
  2340                           
  2341                           ;user.c: 50: _delay((unsigned long)((100)*(8000000/4000.0)));
  2342  001290  0E02               	movlw	2
  2343  001292  6E23               	movwf	(??_initLCD+1)& (0+255),c
  2344  001294  0E04               	movlw	4
  2345  001296  6E22               	movwf	??_initLCD& (0+255),c
  2346  001298  0EBA               	movlw	186
  2347  00129A                     u1107:
  2348  00129A  2EE8               	decfsz	wreg,f,c
  2349  00129C  D7FE               	bra	u1107
  2350  00129E  2E22               	decfsz	??_initLCD& (0+255),f,c
  2351  0012A0  D7FC               	bra	u1107
  2352  0012A2  2E23               	decfsz	(??_initLCD+1)& (0+255),f,c
  2353  0012A4  D7FA               	bra	u1107
  2354  0012A6  D000               	nop2	
  2355                           
  2356                           ;user.c: 52: PORTD = 0b00000010;
  2357  0012A8  0E02               	movlw	2
  2358  0012AA  6E83               	movwf	3971,c	;volatile
  2359                           
  2360                           ;user.c: 53: lcdEnable();
  2361  0012AC  ECA9  F00B         	call	_lcdEnable	;wreg free
  2362                           
  2363                           ;user.c: 54: PORTD = 0b00000010;
  2364  0012B0  0E02               	movlw	2
  2365  0012B2  6E83               	movwf	3971,c	;volatile
  2366                           
  2367                           ;user.c: 55: lcdEnable();
  2368  0012B4  ECA9  F00B         	call	_lcdEnable	;wreg free
  2369                           
  2370                           ;user.c: 56: PORTD = 0b00001111;
  2371  0012B8  0E0F               	movlw	15
  2372  0012BA  6E83               	movwf	3971,c	;volatile
  2373                           
  2374                           ;user.c: 57: lcdEnable();
  2375  0012BC  ECA9  F00B         	call	_lcdEnable	;wreg free
  2376                           
  2377                           ;user.c: 58: _delay((unsigned long)((70)*(8000000/4000000.0)));
  2378  0012C0  0E2E               	movlw	46
  2379  0012C2                     u1117:
  2380  0012C2  2EE8               	decfsz	wreg,f,c
  2381  0012C4  D7FE               	bra	u1117
  2382  0012C6  D000               	nop2	
  2383                           
  2384                           ;user.c: 60: PORTD = 0b00000000;
  2385  0012C8  0E00               	movlw	0
  2386  0012CA  6E83               	movwf	3971,c	;volatile
  2387                           
  2388                           ;user.c: 61: lcdEnable();
  2389  0012CC  ECA9  F00B         	call	_lcdEnable	;wreg free
  2390                           
  2391                           ;user.c: 62: PORTD = 0b00001111;
  2392  0012D0  0E0F               	movlw	15
  2393  0012D2  6E83               	movwf	3971,c	;volatile
  2394                           
  2395                           ;user.c: 63: lcdEnable();
  2396  0012D4  ECA9  F00B         	call	_lcdEnable	;wreg free
  2397                           
  2398                           ;user.c: 64: _delay((unsigned long)((70)*(8000000/4000000.0)));
  2399  0012D8  0E2E               	movlw	46
  2400  0012DA                     u1127:
  2401  0012DA  2EE8               	decfsz	wreg,f,c
  2402  0012DC  D7FE               	bra	u1127
  2403  0012DE  D000               	nop2	
  2404                           
  2405                           ;user.c: 66: PORTD = 0b00000000;
  2406  0012E0  0E00               	movlw	0
  2407  0012E2  6E83               	movwf	3971,c	;volatile
  2408                           
  2409                           ;user.c: 67: lcdEnable();
  2410  0012E4  ECA9  F00B         	call	_lcdEnable	;wreg free
  2411                           
  2412                           ;user.c: 68: PORTD = 0b00000001;
  2413  0012E8  0E01               	movlw	1
  2414  0012EA  6E83               	movwf	3971,c	;volatile
  2415                           
  2416                           ;user.c: 69: lcdEnable();
  2417  0012EC  ECA9  F00B         	call	_lcdEnable	;wreg free
  2418                           
  2419                           ;user.c: 70: _delay((unsigned long)((10)*(8000000/4000.0)));
  2420  0012F0  0E1A               	movlw	26
  2421  0012F2  6E22               	movwf	??_initLCD& (0+255),c
  2422  0012F4  0EF8               	movlw	248
  2423  0012F6                     u1137:
  2424  0012F6  2EE8               	decfsz	wreg,f,c
  2425  0012F8  D7FE               	bra	u1137
  2426  0012FA  2E22               	decfsz	??_initLCD& (0+255),f,c
  2427  0012FC  D7FC               	bra	u1137
  2428  0012FE  D000               	nop2	
  2429                           
  2430                           ;user.c: 72: PORTD = 0b00000000;
  2431  001300  0E00               	movlw	0
  2432  001302  6E83               	movwf	3971,c	;volatile
  2433                           
  2434                           ;user.c: 73: lcdEnable();
  2435  001304  ECA9  F00B         	call	_lcdEnable	;wreg free
  2436                           
  2437                           ;user.c: 74: PORTD = 0b00000011;
  2438  001308  0E03               	movlw	3
  2439  00130A  6E83               	movwf	3971,c	;volatile
  2440                           
  2441                           ;user.c: 75: lcdEnable();
  2442  00130C  ECA9  F00B         	call	_lcdEnable	;wreg free
  2443                           
  2444                           ;user.c: 76: _delay((unsigned long)((30)*(8000000/4000.0)));
  2445  001310  0E4E               	movlw	78
  2446  001312  6E22               	movwf	??_initLCD& (0+255),c
  2447  001314  0EEB               	movlw	235
  2448  001316                     u1147:
  2449  001316  2EE8               	decfsz	wreg,f,c
  2450  001318  D7FE               	bra	u1147
  2451  00131A  2E22               	decfsz	??_initLCD& (0+255),f,c
  2452  00131C  D7FC               	bra	u1147
  2453  00131E  F000               	nop	
  2454  001320  0012               	return		;funcret
  2455  001322                     __end_of_initLCD:
  2456                           	opt stack 0
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           intcon	equ	0xFF2
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           indf1	equ	0xFE7
  2465                           postdec1	equ	0xFE5
  2466                           plusw1	equ	0xFE3
  2467                           fsr1h	equ	0xFE2
  2468                           fsr1l	equ	0xFE1
  2469                           indf2	equ	0xFDF
  2470                           plusw2	equ	0xFDB
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _clearDisplay *****************
  2476 ;; Defined at:
  2477 ;;		line 122 in file "user.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        1 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    3
  2498 ;; This function calls:
  2499 ;;		_lcdEnable
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text19
  2506  001658                     __ptext19:
  2507                           	opt stack 0
  2508  001658                     _clearDisplay:
  2509                           	opt stack 27
  2510                           
  2511                           ;user.c: 125: PORTCbits.RC2 = 0;
  2512                           
  2513                           ;incstack = 0
  2514  001658  9482               	bcf	3970,2,c	;volatile
  2515                           
  2516                           ;user.c: 126: PORTD = 0b00000000;
  2517  00165A  0E00               	movlw	0
  2518  00165C  6E83               	movwf	3971,c	;volatile
  2519                           
  2520                           ;user.c: 127: lcdEnable();
  2521  00165E  ECA9  F00B         	call	_lcdEnable	;wreg free
  2522                           
  2523                           ;user.c: 128: _delay((unsigned long)((10)*(8000000/4000.0)));
  2524  001662  0E1A               	movlw	26
  2525  001664  6E22               	movwf	??_clearDisplay& (0+255),c
  2526  001666  0EF8               	movlw	248
  2527  001668                     u1157:
  2528  001668  2EE8               	decfsz	wreg,f,c
  2529  00166A  D7FE               	bra	u1157
  2530  00166C  2E22               	decfsz	??_clearDisplay& (0+255),f,c
  2531  00166E  D7FC               	bra	u1157
  2532  001670  D000               	nop2	
  2533                           
  2534                           ;user.c: 130: PORTD = 0b00000001;
  2535  001672  0E01               	movlw	1
  2536  001674  6E83               	movwf	3971,c	;volatile
  2537                           
  2538                           ;user.c: 131: lcdEnable();
  2539  001676  ECA9  F00B         	call	_lcdEnable	;wreg free
  2540                           
  2541                           ;user.c: 132: _delay((unsigned long)((10)*(8000000/4000.0)));
  2542  00167A  0E1A               	movlw	26
  2543  00167C  6E22               	movwf	??_clearDisplay& (0+255),c
  2544  00167E  0EF8               	movlw	248
  2545  001680                     u1167:
  2546  001680  2EE8               	decfsz	wreg,f,c
  2547  001682  D7FE               	bra	u1167
  2548  001684  2E22               	decfsz	??_clearDisplay& (0+255),f,c
  2549  001686  D7FC               	bra	u1167
  2550  001688  D000               	nop2	
  2551  00168A  0012               	return		;funcret
  2552  00168C                     __end_of_clearDisplay:
  2553                           	opt stack 0
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           indf1	equ	0xFE7
  2562                           postdec1	equ	0xFE5
  2563                           plusw1	equ	0xFE3
  2564                           fsr1h	equ	0xFE2
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           plusw2	equ	0xFDB
  2568                           fsr2h	equ	0xFDA
  2569                           fsr2l	equ	0xFD9
  2570                           status	equ	0xFD8
  2571                           
  2572 ;; *************** function _lcdEnable *****************
  2573 ;; Defined at:
  2574 ;;		line 41 in file "user.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		None
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    2
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_initLCD
  2599 ;;		_lcdWriteChar
  2600 ;;		_clearDisplay
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text20
  2605  001752                     __ptext20:
  2606                           	opt stack 0
  2607  001752                     _lcdEnable:
  2608                           	opt stack 26
  2609                           
  2610                           ;user.c: 42: PORTCbits.RC5 = 1;
  2611                           
  2612                           ;incstack = 0
  2613  001752  8A82               	bsf	3970,5,c	;volatile
  2614                           
  2615                           ;user.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2616  001754  D000               	nop2		;2 cycle nop
  2617                           
  2618                           ;user.c: 44: PORTCbits.RC5 = 0;
  2619  001756  9A82               	bcf	3970,5,c	;volatile
  2620  001758  0012               	return		;funcret
  2621  00175A                     __end_of_lcdEnable:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           intcon	equ	0xFF2
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           indf1	equ	0xFE7
  2631                           postdec1	equ	0xFE5
  2632                           plusw1	equ	0xFE3
  2633                           fsr1h	equ	0xFE2
  2634                           fsr1l	equ	0xFE1
  2635                           indf2	equ	0xFDF
  2636                           plusw2	equ	0xFDB
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _InitApp *****************
  2642 ;; Defined at:
  2643 ;;		line 28 in file "user.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		None
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    2
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text21
  2672  00175A                     __ptext21:
  2673                           	opt stack 0
  2674  00175A                     _InitApp:
  2675                           	opt stack 28
  2676                           
  2677                           ;incstack = 0
  2678  00175A  0012               	return		;funcret
  2679  00175C                     __end_of_InitApp:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           indf1	equ	0xFE7
  2689                           postdec1	equ	0xFE5
  2690                           plusw1	equ	0xFE3
  2691                           fsr1h	equ	0xFE2
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           plusw2	equ	0xFDB
  2695                           fsr2h	equ	0xFDA
  2696                           fsr2l	equ	0xFD9
  2697                           status	equ	0xFD8
  2698                           
  2699 ;; *************** function _I2CStop *****************
  2700 ;; Defined at:
  2701 ;;		line 19 in file "I2C.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        1 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    2
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text22
  2730  00168C                     __ptext22:
  2731                           	opt stack 0
  2732  00168C                     _I2CStop:
  2733                           	opt stack 28
  2734                           
  2735                           ;I2C.c: 22: LATC4=0;
  2736                           
  2737                           ;incstack = 0
  2738  00168C  988B               	bcf	3979,4,c	;volatile
  2739                           
  2740                           ;I2C.c: 23: _delay((unsigned long)((2)*(8000000/4000.0)));
  2741  00168E  0E06               	movlw	6
  2742  001690  6E22               	movwf	??_I2CStop& (0+255),c
  2743  001692  0E30               	movlw	48
  2744  001694                     u1177:
  2745  001694  2EE8               	decfsz	wreg,f,c
  2746  001696  D7FE               	bra	u1177
  2747  001698  2E22               	decfsz	??_I2CStop& (0+255),f,c
  2748  00169A  D7FC               	bra	u1177
  2749  00169C  D000               	nop2	
  2750                           
  2751                           ;I2C.c: 24: LATC3=1;
  2752  00169E  868B               	bsf	3979,3,c	;volatile
  2753                           
  2754                           ;I2C.c: 25: _delay((unsigned long)((5)*(8000000/4000.0)));
  2755  0016A0  0E0D               	movlw	13
  2756  0016A2  6E22               	movwf	??_I2CStop& (0+255),c
  2757  0016A4  0EFC               	movlw	252
  2758  0016A6                     u1187:
  2759  0016A6  2EE8               	decfsz	wreg,f,c
  2760  0016A8  D7FE               	bra	u1187
  2761  0016AA  2E22               	decfsz	??_I2CStop& (0+255),f,c
  2762  0016AC  D7FC               	bra	u1187
  2763                           
  2764                           ;I2C.c: 26: LATC4=1;
  2765  0016AE  888B               	bsf	3979,4,c	;volatile
  2766                           
  2767                           ;I2C.c: 27: _delay((unsigned long)((5)*(8000000/4000.0)));
  2768  0016B0  0E0D               	movlw	13
  2769  0016B2  6E22               	movwf	??_I2CStop& (0+255),c
  2770  0016B4  0EFC               	movlw	252
  2771  0016B6                     u1197:
  2772  0016B6  2EE8               	decfsz	wreg,f,c
  2773  0016B8  D7FE               	bra	u1197
  2774  0016BA  2E22               	decfsz	??_I2CStop& (0+255),f,c
  2775  0016BC  D7FC               	bra	u1197
  2776  0016BE  0012               	return		;funcret
  2777  0016C0                     __end_of_I2CStop:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           intcon	equ	0xFF2
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           indf1	equ	0xFE7
  2787                           postdec1	equ	0xFE5
  2788                           plusw1	equ	0xFE3
  2789                           fsr1h	equ	0xFE2
  2790                           fsr1l	equ	0xFE1
  2791                           indf2	equ	0xFDF
  2792                           plusw2	equ	0xFDB
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8
  2796                           
  2797 ;; *************** function _I2CStart *****************
  2798 ;; Defined at:
  2799 ;;		line 55 in file "I2C.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;Total ram usage:        1 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    2
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text23
  2828  001576                     __ptext23:
  2829                           	opt stack 0
  2830  001576                     _I2CStart:
  2831                           	opt stack 28
  2832                           
  2833                           ;I2C.c: 57: LATC4=1;
  2834                           
  2835                           ;incstack = 0
  2836  001576  888B               	bsf	3979,4,c	;volatile
  2837                           
  2838                           ;I2C.c: 58: _delay((unsigned long)((3)*(8000000/4000.0)));
  2839  001578  0E08               	movlw	8
  2840  00157A  6E22               	movwf	??_I2CStart& (0+255),c
  2841  00157C  0ECA               	movlw	202
  2842  00157E                     u1207:
  2843  00157E  2EE8               	decfsz	wreg,f,c
  2844  001580  D7FE               	bra	u1207
  2845  001582  2E22               	decfsz	??_I2CStart& (0+255),f,c
  2846  001584  D7FC               	bra	u1207
  2847                           
  2848                           ;I2C.c: 59: LATC3=1;
  2849  001586  868B               	bsf	3979,3,c	;volatile
  2850                           
  2851                           ;I2C.c: 60: _delay((unsigned long)((5)*(8000000/4000.0)));
  2852  001588  0E0D               	movlw	13
  2853  00158A  6E22               	movwf	??_I2CStart& (0+255),c
  2854  00158C  0EFC               	movlw	252
  2855  00158E                     u1217:
  2856  00158E  2EE8               	decfsz	wreg,f,c
  2857  001590  D7FE               	bra	u1217
  2858  001592  2E22               	decfsz	??_I2CStart& (0+255),f,c
  2859  001594  D7FC               	bra	u1217
  2860                           
  2861                           ;I2C.c: 61: LATC4=0;
  2862  001596  988B               	bcf	3979,4,c	;volatile
  2863                           
  2864                           ;I2C.c: 62: _delay((unsigned long)((5)*(8000000/4000.0)));
  2865  001598  0E0D               	movlw	13
  2866  00159A  6E22               	movwf	??_I2CStart& (0+255),c
  2867  00159C  0EFC               	movlw	252
  2868  00159E                     u1227:
  2869  00159E  2EE8               	decfsz	wreg,f,c
  2870  0015A0  D7FE               	bra	u1227
  2871  0015A2  2E22               	decfsz	??_I2CStart& (0+255),f,c
  2872  0015A4  D7FC               	bra	u1227
  2873                           
  2874                           ;I2C.c: 63: LATC3=0;
  2875  0015A6  968B               	bcf	3979,3,c	;volatile
  2876                           
  2877                           ;I2C.c: 64: _delay((unsigned long)((3)*(8000000/4000.0)));
  2878  0015A8  0E08               	movlw	8
  2879  0015AA  6E22               	movwf	??_I2CStart& (0+255),c
  2880  0015AC  0ECA               	movlw	202
  2881  0015AE                     u1237:
  2882  0015AE  2EE8               	decfsz	wreg,f,c
  2883  0015B0  D7FE               	bra	u1237
  2884  0015B2  2E22               	decfsz	??_I2CStart& (0+255),f,c
  2885  0015B4  D7FC               	bra	u1237
  2886  0015B6  0012               	return		;funcret
  2887  0015B8                     __end_of_I2CStart:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           intcon	equ	0xFF2
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           indf1	equ	0xFE7
  2897                           postdec1	equ	0xFE5
  2898                           plusw1	equ	0xFE3
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           indf2	equ	0xFDF
  2902                           plusw2	equ	0xFDB
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _ConfigureOscillator *****************
  2908 ;; Defined at:
  2909 ;;		line 24 in file "system.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		None
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    2
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text24
  2938  00175C                     __ptext24:
  2939                           	opt stack 0
  2940  00175C                     _ConfigureOscillator:
  2941                           	opt stack 28
  2942                           
  2943                           ;incstack = 0
  2944  00175C  0012               	return		;funcret
  2945  00175E                     __end_of_ConfigureOscillator:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           intcon	equ	0xFF2
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           indf1	equ	0xFE7
  2955                           postdec1	equ	0xFE5
  2956                           plusw1	equ	0xFE3
  2957                           fsr1h	equ	0xFE2
  2958                           fsr1l	equ	0xFE1
  2959                           indf2	equ	0xFDF
  2960                           plusw2	equ	0xFDB
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _low_isr *****************
  2966 ;; Defined at:
  2967 ;;		line 75 in file "interrupts.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		None
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;Total ram usage:       17 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		Interrupt level 1
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	intcodelo
  2996  000018                     __pintcodelo:
  2997                           	opt stack 0
  2998  000018                     _low_isr:
  2999                           	opt stack 24
  3000                           
  3001                           ;incstack = 0
  3002  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  3003  00001A  CFD8 F011          	movff	status,??_low_isr
  3004  00001E  CFE8 F012          	movff	wreg,??_low_isr+1
  3005  000022  CFE0 F013          	movff	bsr,??_low_isr+2
  3006  000026  CFFA F014          	movff	pclath,??_low_isr+3
  3007  00002A  CFFB F015          	movff	pclatu,??_low_isr+4
  3008  00002E  CFE9 F016          	movff	fsr0l,??_low_isr+5
  3009  000032  CFEA F017          	movff	fsr0h,??_low_isr+6
  3010  000036  CFE1 F018          	movff	fsr1l,??_low_isr+7
  3011  00003A  CFE2 F019          	movff	fsr1h,??_low_isr+8
  3012  00003E  CFD9 F01A          	movff	fsr2l,??_low_isr+9
  3013  000042  CFDA F01B          	movff	fsr2h,??_low_isr+10
  3014  000046  CFF3 F01C          	movff	prodl,??_low_isr+11
  3015  00004A  CFF4 F01D          	movff	prodh,??_low_isr+12
  3016  00004E  CFF6 F01E          	movff	tblptrl,??_low_isr+13
  3017  000052  CFF7 F01F          	movff	tblptrh,??_low_isr+14
  3018  000056  CFF8 F020          	movff	tblptru,??_low_isr+15
  3019  00005A  CFF5 F021          	movff	tablat,??_low_isr+16
  3020  00005E  C021  FFF5         	movff	??_low_isr+16,tablat
  3021  000062  C020  FFF8         	movff	??_low_isr+15,tblptru
  3022  000066  C01F  FFF7         	movff	??_low_isr+14,tblptrh
  3023  00006A  C01E  FFF6         	movff	??_low_isr+13,tblptrl
  3024  00006E  C01D  FFF4         	movff	??_low_isr+12,prodh
  3025  000072  C01C  FFF3         	movff	??_low_isr+11,prodl
  3026  000076  C01B  FFDA         	movff	??_low_isr+10,fsr2h
  3027  00007A  C01A  FFD9         	movff	??_low_isr+9,fsr2l
  3028  00007E  C019  FFE2         	movff	??_low_isr+8,fsr1h
  3029  000082  C018  FFE1         	movff	??_low_isr+7,fsr1l
  3030  000086  C017  FFEA         	movff	??_low_isr+6,fsr0h
  3031  00008A  C016  FFE9         	movff	??_low_isr+5,fsr0l
  3032  00008E  C015  FFFB         	movff	??_low_isr+4,pclatu
  3033  000092  C014  FFFA         	movff	??_low_isr+3,pclath
  3034  000096  C013  FFE0         	movff	??_low_isr+2,bsr
  3035  00009A  C012  FFE8         	movff	??_low_isr+1,wreg
  3036  00009E  C011  FFD8         	movff	??_low_isr,status
  3037  0000A2  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  3038  0000A4  0010               	retfie	
  3039  0000A6                     __end_of_low_isr:
  3040                           	opt stack 0
  3041                           pclatu	equ	0xFFB
  3042                           pclath	equ	0xFFA
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           intcon	equ	0xFF2
  3050                           postinc0	equ	0xFEE
  3051                           fsr0h	equ	0xFEA
  3052                           fsr0l	equ	0xFE9
  3053                           wreg	equ	0xFE8
  3054                           indf1	equ	0xFE7
  3055                           postdec1	equ	0xFE5
  3056                           plusw1	equ	0xFE3
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           bsr	equ	0xFE0
  3060                           indf2	equ	0xFDF
  3061                           plusw2	equ	0xFDB
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _high_isr *****************
  3067 ;; Defined at:
  3068 ;;		line 30 in file "interrupts.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:       16 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		Interrupt level 2
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	intcode
  3096  000008                     __pintcode:
  3097                           	opt stack 0
  3098  000008                     _high_isr:
  3099                           	opt stack 24
  3100                           
  3101                           ;incstack = 0
  3102  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3103  00000A  EFFA  F008         	goto	int_func
  3104                           pclatu	equ	0xFFB
  3105                           pclath	equ	0xFFA
  3106                           tblptru	equ	0xFF8
  3107                           tblptrh	equ	0xFF7
  3108                           tblptrl	equ	0xFF6
  3109                           tablat	equ	0xFF5
  3110                           prodh	equ	0xFF4
  3111                           prodl	equ	0xFF3
  3112                           intcon	equ	0xFF2
  3113                           postinc0	equ	0xFEE
  3114                           fsr0h	equ	0xFEA
  3115                           fsr0l	equ	0xFE9
  3116                           wreg	equ	0xFE8
  3117                           indf1	equ	0xFE7
  3118                           postdec1	equ	0xFE5
  3119                           plusw1	equ	0xFE3
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           bsr	equ	0xFE0
  3123                           indf2	equ	0xFDF
  3124                           plusw2	equ	0xFDB
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129                           	psect	intcode_body
  3130  0011F4                     __pintcode_body:
  3131                           	opt stack 24
  3132  0011F4                     int_func:
  3133                           	opt stack 24
  3134  0011F4  CFFA F003          	movff	pclath,??_high_isr+2
  3135  0011F8  CFFB F004          	movff	pclatu,??_high_isr+3
  3136  0011FC  CFE9 F005          	movff	fsr0l,??_high_isr+4
  3137  001200  CFEA F006          	movff	fsr0h,??_high_isr+5
  3138  001204  CFE1 F007          	movff	fsr1l,??_high_isr+6
  3139  001208  CFE2 F008          	movff	fsr1h,??_high_isr+7
  3140  00120C  CFD9 F009          	movff	fsr2l,??_high_isr+8
  3141  001210  CFDA F00A          	movff	fsr2h,??_high_isr+9
  3142  001214  CFF3 F00B          	movff	prodl,??_high_isr+10
  3143  001218  CFF4 F00C          	movff	prodh,??_high_isr+11
  3144  00121C  CFF6 F00D          	movff	tblptrl,??_high_isr+12
  3145  001220  CFF7 F00E          	movff	tblptrh,??_high_isr+13
  3146  001224  CFF8 F00F          	movff	tblptru,??_high_isr+14
  3147  001228  CFF5 F010          	movff	tablat,??_high_isr+15
  3148                           
  3149                           ;interrupts.c: 66: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  3150  00122C  BAF2               	btfsc	intcon,5,c	;volatile
  3151  00122E  A4F2               	btfss	intcon,2,c	;volatile
  3152  001230  D00F               	goto	i2l10
  3153                           
  3154                           ;interrupts.c: 67: valuePort = valuePort + 1;
  3155  001232  2855               	incf	_valuePort,w,c
  3156  001234  6E55               	movwf	_valuePort,c
  3157                           
  3158                           ;interrupts.c: 68: _delay(200000);
  3159  001236  0E02               	movlw	2
  3160  001238  6E02               	movwf	(??_high_isr+1)& (0+255),c
  3161  00123A  0E04               	movlw	4
  3162  00123C  6E01               	movwf	??_high_isr& (0+255),c
  3163  00123E  0EBA               	movlw	186
  3164  001240                     i2u124_47:
  3165  001240  2EE8               	decfsz	wreg,f,c
  3166  001242  D7FE               	bra	i2u124_47
  3167  001244  2E01               	decfsz	??_high_isr& (0+255),f,c
  3168  001246  D7FC               	bra	i2u124_47
  3169  001248  2E02               	decfsz	(??_high_isr+1)& (0+255),f,c
  3170  00124A  D7FA               	bra	i2u124_47
  3171  00124C  D000               	nop2	
  3172                           
  3173                           ;interrupts.c: 69: INTCONbits.TMR0IF = 0;
  3174  00124E  94F2               	bcf	intcon,2,c	;volatile
  3175  001250                     i2l10:
  3176  001250  C010  FFF5         	movff	??_high_isr+15,tablat
  3177  001254  C00F  FFF8         	movff	??_high_isr+14,tblptru
  3178  001258  C00E  FFF7         	movff	??_high_isr+13,tblptrh
  3179  00125C  C00D  FFF6         	movff	??_high_isr+12,tblptrl
  3180  001260  C00C  FFF4         	movff	??_high_isr+11,prodh
  3181  001264  C00B  FFF3         	movff	??_high_isr+10,prodl
  3182  001268  C00A  FFDA         	movff	??_high_isr+9,fsr2h
  3183  00126C  C009  FFD9         	movff	??_high_isr+8,fsr2l
  3184  001270  C008  FFE2         	movff	??_high_isr+7,fsr1h
  3185  001274  C007  FFE1         	movff	??_high_isr+6,fsr1l
  3186  001278  C006  FFEA         	movff	??_high_isr+5,fsr0h
  3187  00127C  C005  FFE9         	movff	??_high_isr+4,fsr0l
  3188  001280  C004  FFFB         	movff	??_high_isr+3,pclatu
  3189  001284  C003  FFFA         	movff	??_high_isr+2,pclath
  3190  001288  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3191  00128A  0011               	retfie		f
  3192  00128C                     __end_of_high_isr:
  3193                           	opt stack 0
  3194                           pclatu	equ	0xFFB
  3195                           pclath	equ	0xFFA
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           intcon	equ	0xFF2
  3203                           postinc0	equ	0xFEE
  3204                           fsr0h	equ	0xFEA
  3205                           fsr0l	equ	0xFE9
  3206                           wreg	equ	0xFE8
  3207                           indf1	equ	0xFE7
  3208                           postdec1	equ	0xFE5
  3209                           plusw1	equ	0xFE3
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           bsr	equ	0xFE0
  3213                           indf2	equ	0xFDF
  3214                           plusw2	equ	0xFDB
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           pclatu	equ	0xFFB
  3219                           pclath	equ	0xFFA
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           intcon	equ	0xFF2
  3227                           postinc0	equ	0xFEE
  3228                           fsr0h	equ	0xFEA
  3229                           fsr0l	equ	0xFE9
  3230                           wreg	equ	0xFE8
  3231                           indf1	equ	0xFE7
  3232                           postdec1	equ	0xFE5
  3233                           plusw1	equ	0xFE3
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           bsr	equ	0xFE0
  3237                           indf2	equ	0xFDF
  3238                           plusw2	equ	0xFDB
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243                           	psect	rparam
  3244  0000                     pclatu	equ	0xFFB
  3245                           pclath	equ	0xFFA
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           intcon	equ	0xFF2
  3253                           postinc0	equ	0xFEE
  3254                           fsr0h	equ	0xFEA
  3255                           fsr0l	equ	0xFE9
  3256                           wreg	equ	0xFE8
  3257                           indf1	equ	0xFE7
  3258                           postdec1	equ	0xFE5
  3259                           plusw1	equ	0xFE3
  3260                           fsr1h	equ	0xFE2
  3261                           fsr1l	equ	0xFE1
  3262                           bsr	equ	0xFE0
  3263                           indf2	equ	0xFDF
  3264                           plusw2	equ	0xFDB
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269                           	psect	temp
  3270  000056                     btemp:
  3271                           	opt stack 0
  3272  000056                     	ds	1
  3273  0000                     int$flags	set	btemp
  3274                           pclatu	equ	0xFFB
  3275                           pclath	equ	0xFFA
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           prodh	equ	0xFF4
  3281                           prodl	equ	0xFF3
  3282                           intcon	equ	0xFF2
  3283                           postinc0	equ	0xFEE
  3284                           fsr0h	equ	0xFEA
  3285                           fsr0l	equ	0xFE9
  3286                           wreg	equ	0xFE8
  3287                           indf1	equ	0xFE7
  3288                           postdec1	equ	0xFE5
  3289                           plusw1	equ	0xFE3
  3290                           fsr1h	equ	0xFE2
  3291                           fsr1l	equ	0xFE1
  3292                           bsr	equ	0xFE0
  3293                           indf2	equ	0xFDF
  3294                           plusw2	equ	0xFDB
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        15
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     67      85
    BANK0           128     16      16
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcdWriteString@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[9]), STR_1(CODE[8]), main@str(BANK0[15]), 


Critical Paths under _main in COMRAM

    _main->_lcdWriteInt
    _readZ->_readDataByte
    _positionAvailable->_readDataByte
    _readDataByte->_sendByte
    _sendByte->_I2CSendError
    _lcdWriteString->_lcdWriteChar
    _lcdWriteInt->_lcdWriteUI
    _lcdWriteUI->___lwdiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    2493
                                             65 COMRAM     2     2      0
                                              0 BANK0     16    16      0
                _ConfigureOscillator
                           _I2CStart
                            _I2CStop
                            _InitApp
                       _clearDisplay
                            _initLCD
                        _lcdWriteInt
                     _lcdWriteString
                  _positionAvailable
                              _readZ
 ---------------------------------------------------------------------------------
 (1) _readZ                                                1     1      0     387
                                             42 COMRAM     1     1      0
                    _I2CReceiveError
                       _readDataByte
 ---------------------------------------------------------------------------------
 (2) _I2CReceiveError                                      2     2      0      46
                                             33 COMRAM     2     2      0
                           _ledOff_1
                            _ledOn_1
 ---------------------------------------------------------------------------------
 (3) _ledOn_1                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ledOff_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _positionAvailable                                    1     1      0     319
                                             42 COMRAM     1     1      0
                       _readDataByte
 ---------------------------------------------------------------------------------
 (2) _readDataByte                                         2     2      0     296
                                             40 COMRAM     2     2      0
                        _receiveByte
                           _sendByte
 ---------------------------------------------------------------------------------
 (3) _sendByte                                             5     5      0     136
                                             35 COMRAM     5     5      0
                       _I2CSendError
 ---------------------------------------------------------------------------------
 (4) _I2CSendError                                         2     2      0      46
                                             33 COMRAM     2     2      0
                           _ledOff_0
                            _ledOn_0
 ---------------------------------------------------------------------------------
 (5) _ledOn_0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ledOff_0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _receiveByte                                          3     3      0     115
                                             33 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcdWriteString                                       6     4      2     405
                                             35 COMRAM     6     4      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (1) _lcdWriteInt                                          1     1      0    1277
                                             64 COMRAM     1     1      0
                       _lcdWriteChar
                         _lcdWriteUI
 ---------------------------------------------------------------------------------
 (2) _lcdWriteUI                                          24    22      2    1168
                                             40 COMRAM    24    22      2
                            ___lwdiv
                            ___lwmod
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         2     2      0      44
                                             33 COMRAM     2     2      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             33 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             33 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0       0
                                             33 COMRAM     2     2      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         1     1      0       0
                                             33 COMRAM     1     1      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (3) _lcdEnable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CStop                                              1     1      0       0
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CStart                                             1     1      0       0
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _low_isr                                             17    17      0       0
                                             16 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                            16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _I2CStart
   _I2CStop
   _InitApp
   _clearDisplay
     _lcdEnable
   _initLCD
     _lcdEnable
   _lcdWriteInt
     _lcdWriteChar
       _lcdEnable
     _lcdWriteUI
       ___lwdiv
       ___lwmod
       _lcdWriteChar
         _lcdEnable
   _lcdWriteString
     _lcdWriteChar
       _lcdEnable
   _positionAvailable
     _readDataByte
       _receiveByte
       _sendByte
         _I2CSendError
           _ledOff_0
           _ledOn_0
   _readZ
     _I2CReceiveError
       _ledOff_1
       _ledOn_1
     _readDataByte
       _receiveByte
       _sendByte
         _I2CSendError
           _ledOff_0
           _ledOn_0

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     10      10       5       12.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     43      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      34        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 16 16:52:07 2017

                 lcdWriteUI@i 003F                            bsr 000FE0                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000  
                         l171 114C                           l179 1394                           l633 14E2  
                         l643 156C                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         u700 145C                           u710 1492                           u534 113A  
                         u535 1134                           u707 1452                           u717 1488  
                         u907 1154                           u771 1052                           u917 1164  
                         u837 103A                           u927 1174                           u847 1070  
                         u937 1188                           u857 1094                           u947 1198  
                         u867 10FA                           u957 11A8                           u877 15CC  
                         u967 11C8                           u887 15E0                           u977 11DA  
                         u897 1110                           u987 11EA                           u997 1602  
                         _ack 0054               __end_of_I2CStop 16C0                           wreg 000FE8  
               lcdWriteUI@num 0029                ??_lcdWriteChar 0022                          l1502 133A  
                        l1506 1342                          l1534 14B0                          l1518 1380  
                        l1462 114E                          l1470 1182                          l1454 111C  
                        l1536 14B8                          l1546 14D8                          l1538 14BC  
                        l1562 1562                          l1554 1542                          l1650 142E  
                        l1482 11BE                          l1458 1124                          l1556 154A  
                        l1484 11C2                          l1716 16DC                          l1708 16D4  
                        l1558 154E                          l1654 1464                          l1576 1402  
                        l1568 13B2                          l1578 141A                          l1692 16F2  
                        l1780 10E0                          l1764 10A4                          l1782 10EC  
                        l1698 16F6                          STR_1 100A                          STR_2 1001  
                        u1007 1616                          u1017 132E                          u1107 129A  
                        u1027 1348                          u1117 12C2                          u1037 1358  
                        u1207 157E                          u1127 12DA                          u1047 1368  
                        u1217 158E                          u1137 12F6                          u1057 1386  
                        u1227 159E                          u1147 1316                          u1067 139C  
                        u1237 15AE                          u1157 1668                          u1077 14F6  
                        _LATB 000F8A                          u1167 1680                          u1087 1512  
                        u1177 1694                          u1097 152A                          u1187 16A6  
                        u1197 16B6                          i2l10 1250         __size_of_I2CSendError 0036  
                        _main 1014                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0056              __end_of_I2CStart 15B8                          prodh 000FF4  
                        prodl 000FF3                          start 00A6                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000          __end_of_clearDisplay 168C  
             __end_of_InitApp 175C                lcdWriteInt@num 0041                         ?_main 0001  
                       _T0CON 000FD5                         _LATC3 007C5B                         _LATC4 007C5C  
             __end_of___lwdiv 14EC               __end_of___lwmod 1576                         _PORTB 000F81  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95           _ConfigureOscillator 175C  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000               __end_of_ledOn_0 174A  
             __end_of_ledOn_1 173A                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                  _I2CSendError 15EE  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                         __addr 0053  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000               __end_of_initLCD 1322  
              __CFG_EBTRB$OFF 000000                         _readZ 16C0               __end_of_low_isr 00A6  
                       pclath 000FFA              I2CReceiveError@i 0023                         tablat 000FF5  
                       plusw1 000FE3                         plusw2 000FDB                         status 000FD8  
                ?_receiveByte 0001                __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001  
             __initialization 1624                 ?_readDataByte 0001                  __end_of_main 1108  
             lcdWriteUI@stack 002B                __CFG_OSC$RCIO6 000000                     ??_I2CStop 0022  
                      ??_main 0042                 __activetblptr 000002              ??_lcdWriteString 0026  
                      ?_readZ 0001                     ??_InitApp 0022         ??_ConfigureOscillator 0022  
        __size_of_lcdWriteInt 000E              __end_of_ledOff_0 1752              __end_of_ledOff_1 1742  
              ??_readDataByte 0029                __CFG_XINST$OFF 000000              __end_of_high_isr 128C  
        __end_of_lcdWriteChar 1534                __CFG_STVREN$ON 000000               lcdWriteString@i 0028  
                   ??___lwdiv 0026                     ??___lwmod 0026                     ??_ledOn_0 0022  
                   ??_ledOn_1 0022              __end_of_sendByte 11F4                     ??_initLCD 0022  
                __pdataCOMRAM 0044                     ?_I2CStart 0001                  __mediumconst 0000  
                   ??_low_isr 0011                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0080       __end_of__initialization 164A  
       __size_of_clearDisplay 0034                 ___rparam_used 000001                __pcstackCOMRAM 0001  
               __end_of_readZ 16E0            __size_of_lcdEnable 0008                    ??_I2CStart 0022  
                _clearDisplay 1658                       ??_readZ 002B          __size_of_receiveByte 0088  
    __size_of_I2CReceiveError 0036                       _I2CStop 168C                    _lcdWriteUI 13AA  
        __end_of_readDataByte 1714                     ?_ledOff_0 0001                     ?_ledOff_1 0001  
                   ?_high_isr 0001             __end_of_lcdEnable 175A                       _InitApp 175A  
       __size_of_lcdWriteChar 0048                     ?_sendByte 0001                       __Hparam 0000  
                     __Lparam 0000                       ___lwdiv 149A                       ___lwmod 1534  
                __psmallconst 1000                       __pcinit 1624                       __ramtop 1000  
                     _ledOn_0 1742                       _ledOn_1 1732                       __ptext0 1014  
                     __ptext1 16C0                       __ptext2 15B8                       __ptext3 1732  
                     __ptext4 173A                       __ptext5 16E0                       __ptext6 16FA  
                     __ptext7 1108                       __ptext8 15EE                       __ptext9 1742  
                     _initLCD 128C                       _low_isr 0018                    ??_ledOff_0 0022  
                  ??_ledOff_1 0022             sendByte@bit_count 0028                       main@str 0080  
                  ??_high_isr 0001                  _lcdWriteChar 14EC                __pintcode_body 11F4  
        end_of_initialization 164A                 __Lmediumconst 0000                       int_func 11F4  
                  ??_sendByte 0024          receiveByte@bit_count 0023                       postdec1 000FE5  
                     postinc0 000FEE                     _PORTCbits 000F82                   ?_lcdWriteUI 0029  
           ??_I2CReceiveError 0022             __size_of_I2CStart 0042   __end_of_ConfigureOscillator 175E  
             receiveByte@retc 0024                 ??_lcdWriteInt 0041                 __pidataCOMRAM 1714  
       __size_of_readDataByte 001A           start_initialization 1624       __size_of_lcdWriteString 0076  
                  readZ@z_pos 002B           __size_of_lcdWriteUI 007A             lcdWriteChar@leter 0023  
                _readDataByte 16FA           __end_of_lcdWriteInt 1732              __CFG_LPT1OSC$OFF 000000  
                    ?_I2CStop 0001             _positionAvailable 16E0                   __pbssCOMRAM 0053  
               ?_I2CSendError 0001                 __pcstackBANK0 0080            ?_positionAvailable 0001  
     positionAvailable@status 002B             __size_of_ledOff_0 0008             __size_of_ledOff_1 0008  
         ??_positionAvailable 002B             __size_of_high_isr 1284                 ??_receiveByte 0022  
                    ?_InitApp 0001              ___lwdiv@dividend 0022             __CFG_CCP2MX$PORTC 000000  
               I2CSendError@i 0023                     _lcdEnable 1752                     __pintcode 0008  
           __size_of_sendByte 00EC                      ?___lwdiv 0022                      ?___lwmod 0022  
                 __pintcodelo 0018                 readDataByte@c 002A     __end_of_positionAvailable 16FA  
                    ?_ledOn_0 0001                      ?_ledOn_1 0001                      ?_initLCD 0001  
                 __smallconst 1000                ??_I2CSendError 0022                      _I2CStart 1576  
                    ?_low_isr 0001              ___lwdiv@quotient 0027                __size_of_readZ 0020  
                 _lcdWriteInt 1724               readDataByte@reg 0029                      i2u124_47 1240  
                  ?_lcdEnable 0001                     _valuePort 0055              __CFG_WDTPS$32768 000000  
                   main@F2901 0044               _I2CReceiveError 15B8           __end_of_receiveByte 13AA  
            __size_of_I2CStop 0034                  ??_lcdWriteUI 002B                     copy_data0 1638  
              _lcdWriteString 1424              __size_of_InitApp 0002                      __Hrparam 0000  
                    __Lrparam 0000            __end_of_lcdWriteUI 1424            __CFG_BOREN$SBORDIS 000000  
            __size_of___lwdiv 0052              __size_of___lwmod 0042    __size_of_positionAvailable 001A  
            __size_of_ledOn_0 0008              __size_of_ledOn_1 0008              __size_of_initLCD 0096  
           lcdWriteString@str 0024                     sendByte@c 0027               ___lwdiv@divisor 0024  
             ___lwdiv@counter 0026              __size_of_low_isr 008E                      _ledOff_0 174A  
                    _ledOff_1 173A                 ?_clearDisplay 0001                      __ptext10 174A  
                    __ptext11 1322                      __ptext20 1752                      __ptext12 1424  
                    __ptext21 175A                      __ptext13 1724                      __ptext22 168C  
                    __ptext14 13AA                      __ptext23 1576                      __ptext15 14EC  
                    __ptext24 175C                      __ptext16 1534                      __ptext17 149A  
                    __ptext18 128C                      __ptext19 1658        __end_of_lcdWriteString 149A  
                    _high_isr 0008                 __size_of_main 00F4       __end_of_I2CReceiveError 15EE  
                 _receiveByte 1322                      _sendByte 1108  __size_of_ConfigureOscillator 0002  
        __end_of_I2CSendError 1624                   ??_lcdEnable 0022                      int$flags 0056  
                    main@xpos 008F                    _INTCONbits 000FF2                ??_clearDisplay 0022  
             ?_lcdWriteString 0024                      intlevel1 0000                      intlevel2 0000  
            ___lwmod@dividend 0022               ___lwmod@divisor 0024               ___lwmod@counter 0026  
               ?_lcdWriteChar 0001                  ?_lcdWriteInt 0001              ?_I2CReceiveError 0001  
