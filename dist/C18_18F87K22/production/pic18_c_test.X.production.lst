

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Mar 24 13:17:36 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.41
    42                           ; Generated 25/01/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18LF4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0014C8                     __pidataCOMRAM:
    78                           	opt stack 0
    79                           
    80                           ;initializer for main@F2902
    81  0014C8  48                 	db	72
    82  0014C9  45                 	db	69
    83  0014CA  4C                 	db	76
    84  0014CB  4C                 	db	76
    85  0014CC  4F                 	db	79
    86  0014CD  20                 	db	32
    87  0014CE  57                 	db	87
    88  0014CF  4F                 	db	79
    89  0014D0  52                 	db	82
    90  0014D1  4C                 	db	76
    91  0014D2  44                 	db	68
    92  0014D3  00                 	db	0
    93  0014D4  00                 	db	0
    94  0014D5  00                 	db	0
    95  0014D6  00                 	db	0
    96  0000                     _SSPBUF	set	4041
    97  0000                     _PIR1bits	set	3998
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPCON1bits	set	4038
   100  0000                     _LATB	set	3978
   101  0000                     _PORTD	set	3971
   102  0000                     _PORTCbits	set	3970
   103  0000                     _T0CON	set	4053
   104  0000                     _PORTB	set	3969
   105  0000                     _TRISC	set	3988
   106  0000                     _TRISD	set	3989
   107  0000                     _TRISA	set	3986
   108  0000                     _TRISB	set	3987
   109  0000                     _INTCONbits	set	4082
   110                           
   111                           	psect	smallconst
   112  001000                     __psmallconst:
   113                           	opt stack 0
   114  001000  00                 	db	0
   115  001001                     STR_2:
   116  001001  20                 	db	32
   117  001002  58                 	db	88	;'X'
   118  001003  3A                 	db	58	;':'
   119  001004  20                 	db	32
   120  001005  00                 	db	0
   121  001006                     STR_1:
   122  001006  5A                 	db	90	;'Z'
   123  001007  3A                 	db	58	;':'
   124  001008  20                 	db	32
   125  001009  00                 	db	0
   126                           
   127                           ; #config settings
   128  00100A  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  0013F6                     __pcinit:
   132                           	opt stack 0
   133  0013F6                     start_initialization:
   134                           	opt stack 0
   135  0013F6                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Initialize objects allocated to COMRAM (15 bytes)
   139                           ; load TBLPTR registers with __pidataCOMRAM
   140  0013F6  0EC8               	movlw	low __pidataCOMRAM
   141  0013F8  6EF6               	movwf	tblptrl,c
   142  0013FA  0E14               	movlw	high __pidataCOMRAM
   143  0013FC  6EF7               	movwf	tblptrh,c
   144  0013FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   145  001400  6EF8               	movwf	tblptru,c
   146  001402  EE00  F044         	lfsr	0,__pdataCOMRAM
   147  001406  EE10 F00F          	lfsr	1,15
   148  00140A                     copy_data0:
   149  00140A  0009               	tblrd		*+
   150  00140C  CFF5 FFEE          	movff	tablat,postinc0
   151  001410  50E5               	movf	postdec1,w,c
   152  001412  50E1               	movf	fsr1l,w,c
   153  001414  E1FA               	bnz	copy_data0
   154                           
   155                           ; Clear objects allocated to COMRAM (3 bytes)
   156  001416  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   157  001418  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   158  00141A  6A53               	clrf	__pbssCOMRAM& (0+255),c
   159  00141C                     end_of_initialization:
   160                           	opt stack 0
   161  00141C                     __end_of__initialization:
   162                           	opt stack 0
   163  00141C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164  00141E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165  001420  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  001422  6EF8               	movwf	tblptru,c
   167  001424  0100               	movlb	0
   168  001426  EF06  F008         	goto	_main	;jump to C main() function
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           postdec1	equ	0xFE5
   175                           fsr1l	equ	0xFE1
   176                           
   177                           	psect	bssCOMRAM
   178  000053                     __pbssCOMRAM:
   179                           	opt stack 0
   180  000053                     __addr:
   181                           	opt stack 0
   182  000053                     	ds	1
   183  000054                     _ack:
   184                           	opt stack 0
   185  000054                     	ds	1
   186  000055                     _valuePort:
   187                           	opt stack 0
   188  000055                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           postdec1	equ	0xFE5
   195                           fsr1l	equ	0xFE1
   196                           
   197                           	psect	dataCOMRAM
   198  000044                     __pdataCOMRAM:
   199                           	opt stack 0
   200  000044                     main@F2902:
   201                           	opt stack 0
   202  000044                     	ds	15
   203                           tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           postdec1	equ	0xFE5
   209                           fsr1l	equ	0xFE1
   210                           
   211                           	psect	cstackBANK0
   212  000080                     __pcstackBANK0:
   213                           	opt stack 0
   214  000080                     main@str:
   215                           	opt stack 0
   216                           
   217                           ; 15 bytes @ 0x0
   218  000080                     	ds	15
   219  00008F                     main@xpos:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xF
   223  00008F                     	ds	1
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           postdec1	equ	0xFE5
   230                           fsr1l	equ	0xFE1
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	opt stack 0
   235  000001                     ??_high_isr:
   236  000001                     
   237                           ; 2 bytes @ 0x0
   238  000001                     	ds	16
   239  000011                     ??_low_isr:
   240                           
   241                           ; 1 bytes @ 0x10
   242  000011                     	ds	17
   243  000022                     ??_initLCD:
   244  000022                     ??_clearDisplay:
   245  000022                     ??_lcdWriteChar:
   246  000022                     ?___lwdiv:
   247                           	opt stack 0
   248  000022                     ?___lwmod:
   249                           	opt stack 0
   250  000022                     sendByte@c:
   251                           	opt stack 0
   252  000022                     receiveByte@retc:
   253                           	opt stack 0
   254  000022                     ___lwdiv@dividend:
   255                           	opt stack 0
   256  000022                     ___lwmod@dividend:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x21
   260  000022                     	ds	1
   261  000023                     lcdWriteChar@leter:
   262                           	opt stack 0
   263  000023                     writeDataByte@reg:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x22
   267  000023                     	ds	1
   268  000024                     writeDataByte@addr:
   269                           	opt stack 0
   270  000024                     lcdWriteString@str:
   271                           	opt stack 0
   272  000024                     ___lwdiv@divisor:
   273                           	opt stack 0
   274  000024                     ___lwmod@divisor:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x23
   278  000024                     	ds	1
   279  000025                     readDataByte@reg:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x24
   283  000025                     	ds	1
   284  000026                     ??_lcdWriteString:
   285  000026                     readDataByte@retc:
   286                           	opt stack 0
   287  000026                     ___lwdiv@counter:
   288                           	opt stack 0
   289  000026                     ___lwmod@counter:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0x25
   293  000026                     	ds	1
   294  000027                     readDataByte@addr:
   295                           	opt stack 0
   296  000027                     ___lwdiv@quotient:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x26
   300  000027                     	ds	1
   301  000028                     readX@x_pos:
   302                           	opt stack 0
   303  000028                     readZ@z_pos:
   304                           	opt stack 0
   305  000028                     lcdWriteString@i:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x27
   309  000028                     	ds	1
   310  000029                     lcdWriteUI@num:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x28
   314  000029                     	ds	2
   315  00002B                     lcdWriteUI@stack:
   316                           	opt stack 0
   317                           
   318                           ; 20 bytes @ 0x2A
   319  00002B                     	ds	20
   320  00003F                     lcdWriteUI@i:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x3E
   324  00003F                     	ds	2
   325  000041                     lcdWriteInt@num:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x40
   329  000041                     	ds	1
   330  000042                     ??_main:
   331                           
   332                           ; 1 bytes @ 0x41
   333  000042                     	ds	2
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 42 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  str            15    0[BANK0 ] unsigned char [15]
   352 ;;  xpos            1   15[BANK0 ] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  2   55[None  ] int 
   355 ;; Registers used:
   356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;Total ram usage:       18 bytes
   367 ;; Hardware stack levels required when called:    6
   368 ;; This function calls:
   369 ;;		_ConfigureOscillator
   370 ;;		_I2CInit
   371 ;;		_I2CStop
   372 ;;		_InitApp
   373 ;;		_clearDisplay
   374 ;;		_initLCD
   375 ;;		_lcdWriteInt
   376 ;;		_lcdWriteString
   377 ;;		_readX
   378 ;;		_readZ
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  00100C                     __ptext0:
   386                           	opt stack 0
   387  00100C                     _main:
   388                           	opt stack 25
   389                           
   390                           ;main.c: 45: ConfigureOscillator();
   391                           
   392                           ;incstack = 0
   393  00100C  EC8F  F00A         	call	_ConfigureOscillator	;wreg free
   394                           
   395                           ;main.c: 48: InitApp();
   396  001010  EC8E  F00A         	call	_InitApp	;wreg free
   397                           
   398                           ;main.c: 50: TRISB=0X00;
   399  001014  0E00               	movlw	0
   400  001016  6E93               	movwf	3987,c	;volatile
   401                           
   402                           ;main.c: 51: TRISA=0XFF;
   403  001018  6892               	setf	3986,c	;volatile
   404                           
   405                           ;main.c: 52: TRISD = 0x00;
   406  00101A  0E00               	movlw	0
   407  00101C  6E95               	movwf	3989,c	;volatile
   408                           
   409                           ;main.c: 53: TRISC = 0b00011000;
   410  00101E  0E18               	movlw	24
   411  001020  6E94               	movwf	3988,c	;volatile
   412                           
   413                           ;main.c: 54: PORTB=0X00;
   414  001022  0E00               	movlw	0
   415  001024  6E81               	movwf	3969,c	;volatile
   416                           
   417                           ;main.c: 56: T0CON = 0b10001000;
   418  001026  0E88               	movlw	136
   419  001028  6ED5               	movwf	4053,c	;volatile
   420                           
   421                           ;main.c: 57: INTCONbits.TMR0IE = 1;
   422  00102A  8AF2               	bsf	intcon,5,c	;volatile
   423                           
   424                           ;main.c: 60: _delay((unsigned long)((70)*(8000000/4000.0)));
   425  00102C  0EB6               	movlw	182
   426  00102E  6E42               	movwf	??_main& (0+255),c
   427  001030  0ED0               	movlw	208
   428  001032                     u547:
   429  001032  2EE8               	decfsz	wreg,f,c
   430  001034  D7FE               	bra	u547
   431  001036  2E42               	decfsz	??_main& (0+255),f,c
   432  001038  D7FC               	bra	u547
   433  00103A  D000               	nop2	
   434                           
   435                           ;main.c: 61: initLCD();
   436  00103C  ECCA  F008         	call	_initLCD	;wreg free
   437                           
   438                           ;main.c: 62: unsigned char str[15] = "HELLO WORLD";
   439  001040  EE20  F044         	lfsr	2,main@F2902
   440  001044  EE10  F080         	lfsr	1,main@str
   441  001048  0E0E               	movlw	14
   442  00104A                     u521:
   443  00104A  CFDB FFE3          	movff	plusw2,plusw1
   444  00104E  06E8               	decf	wreg,f,c
   445  001050  E2FC               	bc	u521
   446                           
   447                           ;main.c: 63: lcdWriteString(str);
   448  001052  0E80               	movlw	low main@str
   449  001054  6E24               	movwf	lcdWriteString@str,c
   450  001056  0E00               	movlw	high main@str
   451  001058  6E25               	movwf	lcdWriteString@str+1,c
   452  00105A  EC52  F009         	call	_lcdWriteString	;wreg free
   453                           
   454                           ;main.c: 64: _delay((unsigned long)((500)*(8000000/4000.0)));
   455  00105E  0E06               	movlw	6
   456  001060  6E43               	movwf	(??_main+1)& (0+255),c
   457  001062  0E13               	movlw	19
   458  001064  6E42               	movwf	??_main& (0+255),c
   459  001066  0EAE               	movlw	174
   460  001068                     u557:
   461  001068  2EE8               	decfsz	wreg,f,c
   462  00106A  D7FE               	bra	u557
   463  00106C  2E42               	decfsz	??_main& (0+255),f,c
   464  00106E  D7FC               	bra	u557
   465  001070  2E43               	decfsz	(??_main+1)& (0+255),f,c
   466  001072  D7FA               	bra	u557
   467                           
   468                           ;main.c: 65: clearDisplay();
   469  001074  EC15  F00A         	call	_clearDisplay	;wreg free
   470                           
   471                           ;main.c: 66: initLCD();
   472  001078  ECCA  F008         	call	_initLCD	;wreg free
   473                           
   474                           ;main.c: 67: lcdWriteInt(123);
   475  00107C  0E7B               	movlw	123
   476  00107E  EC73  F00A         	call	_lcdWriteInt
   477                           
   478                           ;main.c: 68: _delay((unsigned long)((500)*(8000000/4000.0)));
   479  001082  0E06               	movlw	6
   480  001084  6E43               	movwf	(??_main+1)& (0+255),c
   481  001086  0E13               	movlw	19
   482  001088  6E42               	movwf	??_main& (0+255),c
   483  00108A  0EAE               	movlw	174
   484  00108C                     u567:
   485  00108C  2EE8               	decfsz	wreg,f,c
   486  00108E  D7FE               	bra	u567
   487  001090  2E42               	decfsz	??_main& (0+255),f,c
   488  001092  D7FC               	bra	u567
   489  001094  2E43               	decfsz	(??_main+1)& (0+255),f,c
   490  001096  D7FA               	bra	u567
   491                           
   492                           ;main.c: 70: unsigned char xpos;
   493                           ;main.c: 72: _addr = 0x20;
   494  001098  0E20               	movlw	32
   495  00109A  6E53               	movwf	__addr,c
   496  00109C                     l1594:
   497                           
   498                           ;main.c: 76: clearDisplay();
   499  00109C  EC15  F00A         	call	_clearDisplay	;wreg free
   500                           
   501                           ;main.c: 77: initLCD();
   502  0010A0  ECCA  F008         	call	_initLCD	;wreg free
   503                           
   504                           ;main.c: 78: I2CInit();
   505  0010A4  EC7A  F00A         	call	_I2CInit	;wreg free
   506                           
   507                           ;main.c: 80: xpos = readZ();
   508  0010A8  EC4C  F00A         	call	_readZ	;wreg free
   509  0010AC  0100               	movlb	0	; () banked
   510  0010AE  6F8F               	movwf	main@xpos& (0+255),b
   511                           
   512                           ; BSR set to: 0
   513                           ;main.c: 81: lcdWriteString("Z: ");
   514  0010B0  0E06               	movlw	low STR_1
   515  0010B2  6E24               	movwf	lcdWriteString@str,c
   516  0010B4  0E10               	movlw	high STR_1
   517  0010B6  6E25               	movwf	lcdWriteString@str+1,c
   518  0010B8  EC52  F009         	call	_lcdWriteString	;wreg free
   519                           
   520                           ;main.c: 82: lcdWriteInt(xpos);
   521  0010BC  0100               	movlb	0	; () banked
   522  0010BE  518F               	movf	main@xpos& (0+255),w,b
   523  0010C0  EC73  F00A         	call	_lcdWriteInt
   524                           
   525                           ;main.c: 83: xpos = readX();
   526  0010C4  EC54  F00A         	call	_readX	;wreg free
   527  0010C8  0100               	movlb	0	; () banked
   528  0010CA  6F8F               	movwf	main@xpos& (0+255),b
   529                           
   530                           ; BSR set to: 0
   531                           ;main.c: 84: lcdWriteString(" X: ");
   532  0010CC  0E01               	movlw	low STR_2
   533  0010CE  6E24               	movwf	lcdWriteString@str,c
   534  0010D0  0E10               	movlw	high STR_2
   535  0010D2  6E25               	movwf	lcdWriteString@str+1,c
   536  0010D4  EC52  F009         	call	_lcdWriteString	;wreg free
   537                           
   538                           ;main.c: 85: lcdWriteInt(xpos);
   539  0010D8  0100               	movlb	0	; () banked
   540  0010DA  518F               	movf	main@xpos& (0+255),w,b
   541  0010DC  EC73  F00A         	call	_lcdWriteInt
   542                           
   543                           ;main.c: 95: I2CStop();
   544  0010E0  EC8C  F00A         	call	_I2CStop	;wreg free
   545                           
   546                           ;main.c: 96: _delay((unsigned long)((500)*(8000000/4000.0)));
   547  0010E4  0E06               	movlw	6
   548  0010E6  6E43               	movwf	(??_main+1)& (0+255),c
   549  0010E8  0E13               	movlw	19
   550  0010EA  6E42               	movwf	??_main& (0+255),c
   551  0010EC  0EAE               	movlw	174
   552  0010EE                     u577:
   553  0010EE  2EE8               	decfsz	wreg,f,c
   554  0010F0  D7FE               	bra	u577
   555  0010F2  2E42               	decfsz	??_main& (0+255),f,c
   556  0010F4  D7FC               	bra	u577
   557  0010F6  2E43               	decfsz	(??_main+1)& (0+255),f,c
   558  0010F8  D7FA               	bra	u577
   559  0010FA  D7D0               	goto	l1594
   560  0010FC                     __end_of_main:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           intcon	equ	0xFF2
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           plusw1	equ	0xFE3
   571                           fsr1l	equ	0xFE1
   572                           plusw2	equ	0xFDB
   573                           
   574 ;; *************** function _readZ *****************
   575 ;; Defined at:
   576 ;;		line 117 in file "I2C.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  z_pos           1   39[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      unsigned char 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;Total ram usage:        1 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    5
   597 ;; This function calls:
   598 ;;		_readDataByte
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text1
   605  001498                     __ptext1:
   606                           	opt stack 0
   607  001498                     _readZ:
   608                           	opt stack 25
   609                           
   610                           ;I2C.c: 118: unsigned char z_pos;
   611                           ;I2C.c: 119: z_pos = readDataByte(_addr, 0x0A);
   612                           
   613                           ;incstack = 0
   614  001498  0E0A               	movlw	10
   615  00149A  6E25               	movwf	readDataByte@reg,c
   616  00149C  5053               	movf	__addr,w,c
   617  00149E  EC2F  F00A         	call	_readDataByte
   618  0014A2  6E28               	movwf	readZ@z_pos,c
   619                           
   620                           ;I2C.c: 120: return z_pos;
   621  0014A4  5028               	movf	readZ@z_pos,w,c
   622  0014A6  0012               	return	
   623  0014A8                     __end_of_readZ:
   624                           	opt stack 0
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           intcon	equ	0xFF2
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           plusw1	equ	0xFE3
   634                           fsr1l	equ	0xFE1
   635                           plusw2	equ	0xFDB
   636                           
   637 ;; *************** function _readX *****************
   638 ;; Defined at:
   639 ;;		line 101 in file "I2C.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  x_pos           1   39[COMRAM] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      unsigned char 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        1 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    5
   660 ;; This function calls:
   661 ;;		_readDataByte
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text2
   668  0014A8                     __ptext2:
   669                           	opt stack 0
   670  0014A8                     _readX:
   671                           	opt stack 25
   672                           
   673                           ;I2C.c: 102: unsigned char x_pos;
   674                           ;I2C.c: 103: x_pos = readDataByte(_addr, 0x08);
   675                           
   676                           ;incstack = 0
   677  0014A8  0E08               	movlw	8
   678  0014AA  6E25               	movwf	readDataByte@reg,c
   679  0014AC  5053               	movf	__addr,w,c
   680  0014AE  EC2F  F00A         	call	_readDataByte
   681  0014B2  6E28               	movwf	readX@x_pos,c
   682                           
   683                           ;I2C.c: 105: return x_pos;
   684  0014B4  5028               	movf	readX@x_pos,w,c
   685  0014B6  0012               	return	
   686  0014B8                     __end_of_readX:
   687                           	opt stack 0
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           intcon	equ	0xFF2
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           plusw1	equ	0xFE3
   697                           fsr1l	equ	0xFE1
   698                           plusw2	equ	0xFDB
   699                           
   700 ;; *************** function _readDataByte *****************
   701 ;; Defined at:
   702 ;;		line 92 in file "I2C.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  addr            1    wreg     unsigned char 
   705 ;;  reg             1   36[COMRAM] unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  addr            1   38[COMRAM] unsigned char 
   708 ;;  retc            1   37[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      unsigned char 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;Total ram usage:        3 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    4
   725 ;; This function calls:
   726 ;;		_I2CRestart
   727 ;;		_receiveByte
   728 ;;		_sendByte
   729 ;;		_writeDataByte
   730 ;; This function is called by:
   731 ;;		_readX
   732 ;;		_readZ
   733 ;;		_positionAvailable
   734 ;;		_gestureAvailable
   735 ;;		_readGesture
   736 ;;		_readGestureSpeed
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text3
   741  00145E                     __ptext3:
   742                           	opt stack 0
   743  00145E                     _readDataByte:
   744                           	opt stack 25
   745                           
   746                           ;incstack = 0
   747                           ;readDataByte@addr stored from wreg
   748  00145E  6E27               	movwf	readDataByte@addr,c
   749                           
   750                           ;I2C.c: 93: writeDataByte(addr, reg);
   751  001460  C025  F023         	movff	readDataByte@reg,writeDataByte@reg
   752  001464  5027               	movf	readDataByte@addr,w,c
   753  001466  EC40  F00A         	call	_writeDataByte
   754                           
   755                           ;I2C.c: 94: I2CRestart();
   756  00146A  EC84  F00A         	call	_I2CRestart	;wreg free
   757                           
   758                           ;I2C.c: 95: sendByte(addr | 0x01);
   759  00146E  5027               	movf	readDataByte@addr,w,c
   760  001470  0901               	iorlw	1
   761  001472  EC6C  F00A         	call	_sendByte
   762                           
   763                           ;I2C.c: 96: unsigned char retc = receiveByte();
   764  001476  EC5C  F00A         	call	_receiveByte	;wreg free
   765  00147A  6E26               	movwf	readDataByte@retc,c
   766                           
   767                           ;I2C.c: 97: return retc;
   768  00147C  5026               	movf	readDataByte@retc,w,c
   769  00147E  0012               	return	
   770  001480                     __end_of_readDataByte:
   771                           	opt stack 0
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           intcon	equ	0xFF2
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           postdec1	equ	0xFE5
   780                           plusw1	equ	0xFE3
   781                           fsr1l	equ	0xFE1
   782                           plusw2	equ	0xFDB
   783                           
   784 ;; *************** function _writeDataByte *****************
   785 ;; Defined at:
   786 ;;		line 85 in file "I2C.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  addr            1    wreg     unsigned char 
   789 ;;  reg             1   34[COMRAM] unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  addr            1   35[COMRAM] unsigned char 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    3
   808 ;; This function calls:
   809 ;;		_I2CInit
   810 ;;		_I2CStart
   811 ;;		_sendByte
   812 ;; This function is called by:
   813 ;;		_readDataByte
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text4
   818  001480                     __ptext4:
   819                           	opt stack 0
   820  001480                     _writeDataByte:
   821                           	opt stack 25
   822                           
   823                           ;incstack = 0
   824                           ;writeDataByte@addr stored from wreg
   825  001480  6E24               	movwf	writeDataByte@addr,c
   826                           
   827                           ;I2C.c: 86: I2CInit();
   828  001482  EC7A  F00A         	call	_I2CInit	;wreg free
   829                           
   830                           ;I2C.c: 87: I2CStart();
   831  001486  EC80  F00A         	call	_I2CStart	;wreg free
   832                           
   833                           ;I2C.c: 88: sendByte(addr);
   834  00148A  5024               	movf	writeDataByte@addr,w,c
   835  00148C  EC6C  F00A         	call	_sendByte
   836                           
   837                           ;I2C.c: 89: sendByte(reg);
   838  001490  5023               	movf	writeDataByte@reg,w,c
   839  001492  EC6C  F00A         	call	_sendByte
   840  001496  0012               	return		;funcret
   841  001498                     __end_of_writeDataByte:
   842                           	opt stack 0
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           intcon	equ	0xFF2
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           plusw1	equ	0xFE3
   852                           fsr1l	equ	0xFE1
   853                           plusw2	equ	0xFDB
   854                           
   855 ;; *************** function _sendByte *****************
   856 ;; Defined at:
   857 ;;		line 69 in file "I2C.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  c               1    wreg     unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  c               1   33[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;Total ram usage:        1 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    2
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_writeDataByte
   882 ;;		_readDataByte
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text5
   887  0014D8                     __ptext5:
   888                           	opt stack 0
   889  0014D8                     _sendByte:
   890                           	opt stack 25
   891                           
   892                           ;incstack = 0
   893                           ;sendByte@c stored from wreg
   894  0014D8  6E22               	movwf	sendByte@c,c
   895                           
   896                           ;I2C.c: 70: PIR1bits.SSPIF = 0;
   897  0014DA  969E               	bcf	3998,3,c	;volatile
   898                           
   899                           ;I2C.c: 71: SSPBUF = c;
   900  0014DC  C022  FFC9         	movff	sendByte@c,4041	;volatile
   901  0014E0                     l182:
   902  0014E0  B69E               	btfsc	3998,3,c	;volatile
   903  0014E2  0012               	return	
   904  0014E4  D7FD               	goto	l182
   905  0014E6                     __end_of_sendByte:
   906                           	opt stack 0
   907                           tblptru	equ	0xFF8
   908                           tblptrh	equ	0xFF7
   909                           tblptrl	equ	0xFF6
   910                           tablat	equ	0xFF5
   911                           intcon	equ	0xFF2
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           postdec1	equ	0xFE5
   915                           plusw1	equ	0xFE3
   916                           fsr1l	equ	0xFE1
   917                           plusw2	equ	0xFDB
   918                           
   919 ;; *************** function _I2CStart *****************
   920 ;; Defined at:
   921 ;;		line 58 in file "I2C.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		None
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    2
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_writeDataByte
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text6
   950  001500                     __ptext6:
   951                           	opt stack 0
   952  001500                     _I2CStart:
   953                           	opt stack 25
   954                           
   955                           ;I2C.c: 60: SSPCON2bits.SEN = 1;;
   956                           
   957                           ;incstack = 0
   958  001500  80C5               	bsf	4037,0,c	;volatile
   959  001502                     l170:
   960  001502  A0C5               	btfss	4037,0,c	;volatile
   961  001504  0012               	return	
   962  001506  D7FD               	goto	l170
   963  001508                     __end_of_I2CStart:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           intcon	equ	0xFF2
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           postdec1	equ	0xFE5
   973                           plusw1	equ	0xFE3
   974                           fsr1l	equ	0xFE1
   975                           plusw2	equ	0xFDB
   976                           
   977 ;; *************** function _I2CInit *****************
   978 ;; Defined at:
   979 ;;		line 19 in file "I2C.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  2   43[None  ] int 
   986 ;; Registers used:
   987 ;;		None
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    2
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;;		_writeDataByte
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text7
  1009  0014F4                     __ptext7:
  1010                           	opt stack 0
  1011  0014F4                     _I2CInit:
  1012                           	opt stack 25
  1013                           
  1014                           ;I2C.c: 20: SSPCON1bits.SSPM0 = 0;
  1015                           
  1016                           ;incstack = 0
  1017  0014F4  90C6               	bcf	4038,0,c	;volatile
  1018                           
  1019                           ;I2C.c: 21: SSPCON1bits.SSPM1 = 0;
  1020  0014F6  92C6               	bcf	4038,1,c	;volatile
  1021                           
  1022                           ;I2C.c: 22: SSPCON1bits.SSPM2 = 0;
  1023  0014F8  94C6               	bcf	4038,2,c	;volatile
  1024                           
  1025                           ;I2C.c: 23: SSPCON1bits.SSPM3 = 1;
  1026  0014FA  86C6               	bsf	4038,3,c	;volatile
  1027                           
  1028                           ;I2C.c: 25: SSPCON1bits.SSPEN = 1;
  1029  0014FC  8AC6               	bsf	4038,5,c	;volatile
  1030  0014FE  0012               	return		;funcret
  1031  001500                     __end_of_I2CInit:
  1032                           	opt stack 0
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           intcon	equ	0xFF2
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           plusw1	equ	0xFE3
  1042                           fsr1l	equ	0xFE1
  1043                           plusw2	equ	0xFDB
  1044                           
  1045 ;; *************** function _receiveByte *****************
  1046 ;; Defined at:
  1047 ;;		line 75 in file "I2C.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  retc            1   33[COMRAM] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      unsigned char 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;Total ram usage:        1 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_readDataByte
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text8
  1076  0014B8                     __ptext8:
  1077                           	opt stack 0
  1078  0014B8                     _receiveByte:
  1079                           	opt stack 26
  1080                           
  1081                           ;I2C.c: 76: SSPCON2bits.RCEN = 1;
  1082                           
  1083                           ;incstack = 0
  1084  0014B8  86C5               	bsf	4037,3,c	;volatile
  1085                           
  1086                           ;I2C.c: 77: PIR1bits.SSPIF = 0;
  1087  0014BA  969E               	bcf	3998,3,c	;volatile
  1088  0014BC                     l188:
  1089  0014BC  A69E               	btfss	3998,3,c	;volatile
  1090  0014BE  D7FE               	goto	l188
  1091                           
  1092                           ;I2C.c: 79: unsigned char retc = SSPBUF;
  1093  0014C0  CFC9 F022          	movff	4041,receiveByte@retc	;volatile
  1094                           
  1095                           ;I2C.c: 80: return retc;
  1096  0014C4  5022               	movf	receiveByte@retc,w,c
  1097  0014C6  0012               	return	
  1098  0014C8                     __end_of_receiveByte:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           intcon	equ	0xFF2
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           plusw1	equ	0xFE3
  1109                           fsr1l	equ	0xFE1
  1110                           plusw2	equ	0xFDB
  1111                           
  1112 ;; *************** function _I2CRestart *****************
  1113 ;; Defined at:
  1114 ;;		line 64 in file "I2C.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		None
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    2
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_readDataByte
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text9
  1143  001508                     __ptext9:
  1144                           	opt stack 0
  1145  001508                     _I2CRestart:
  1146                           	opt stack 26
  1147                           
  1148                           ;I2C.c: 65: SSPCON2bits.RSEN = 1;;
  1149                           
  1150                           ;incstack = 0
  1151  001508  82C5               	bsf	4037,1,c	;volatile
  1152  00150A                     l176:
  1153  00150A  A2C5               	btfss	4037,1,c	;volatile
  1154  00150C  0012               	return	
  1155  00150E  D7FD               	goto	l176
  1156  001510                     __end_of_I2CRestart:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           intcon	equ	0xFF2
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           postdec1	equ	0xFE5
  1166                           plusw1	equ	0xFE3
  1167                           fsr1l	equ	0xFE1
  1168                           plusw2	equ	0xFDB
  1169                           
  1170 ;; *************** function _lcdWriteString *****************
  1171 ;; Defined at:
  1172 ;;		line 95 in file "user.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  str             2   35[COMRAM] PTR unsigned char 
  1175 ;;		 -> STR_2(5), STR_1(4), main@str(15), 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  i               2   39[COMRAM] int 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        6 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    4
  1194 ;; This function calls:
  1195 ;;		_lcdWriteChar
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text10
  1202  0012A4                     __ptext10:
  1203                           	opt stack 0
  1204  0012A4                     _lcdWriteString:
  1205                           	opt stack 26
  1206                           
  1207                           ;user.c: 96: for(int i = 0; str[i]; i++){
  1208                           
  1209                           ;incstack = 0
  1210  0012A4  0E00               	movlw	0
  1211  0012A6  6E29               	movwf	lcdWriteString@i+1,c
  1212  0012A8  0E00               	movlw	0
  1213  0012AA  6E28               	movwf	lcdWriteString@i,c
  1214  0012AC  D01B               	goto	l1522
  1215  0012AE                     l1518:
  1216                           
  1217                           ;user.c: 97: lcdWriteChar(str[i]);
  1218  0012AE  5028               	movf	lcdWriteString@i,w,c
  1219  0012B0  2424               	addwf	lcdWriteString@str,w,c
  1220  0012B2  6E26               	movwf	??_lcdWriteString& (0+255),c
  1221  0012B4  5029               	movf	lcdWriteString@i+1,w,c
  1222  0012B6  2025               	addwfc	lcdWriteString@str+1,w,c
  1223  0012B8  6E27               	movwf	(??_lcdWriteString+1)& (0+255),c
  1224  0012BA  C026  FFF6         	movff	??_lcdWriteString,tblptrl
  1225  0012BE  C027  FFF7         	movff	??_lcdWriteString+1,tblptrh
  1226  0012C2  0E00               	movlw	low (__smallconst shr (0+16))
  1227  0012C4  6EF8               	movwf	tblptru,c
  1228  0012C6  0E0F               	movlw	(high __ramtop+-1)
  1229  0012C8  64F7               	cpfsgt	tblptrh,c
  1230  0012CA  D003               	bra	u497
  1231  0012CC  0008               	tblrd		*
  1232  0012CE  50F5               	movf	tablat,w,c
  1233  0012D0  D005               	bra	u490
  1234  0012D2                     u497:
  1235  0012D2  CFF6 FFE1          	movff	tblptrl,fsr1l
  1236  0012D6  CFF7 FFE2          	movff	tblptrh,fsr1h
  1237  0012DA  50E7               	movf	indf1,w,c
  1238  0012DC                     u490:
  1239  0012DC  ECB6  F009         	call	_lcdWriteChar
  1240  0012E0  4A28               	infsnz	lcdWriteString@i,f,c
  1241  0012E2  2A29               	incf	lcdWriteString@i+1,f,c
  1242  0012E4                     l1522:
  1243  0012E4  5028               	movf	lcdWriteString@i,w,c
  1244  0012E6  2424               	addwf	lcdWriteString@str,w,c
  1245  0012E8  6E26               	movwf	??_lcdWriteString& (0+255),c
  1246  0012EA  5029               	movf	lcdWriteString@i+1,w,c
  1247  0012EC  2025               	addwfc	lcdWriteString@str+1,w,c
  1248  0012EE  6E27               	movwf	(??_lcdWriteString+1)& (0+255),c
  1249  0012F0  C026  FFF6         	movff	??_lcdWriteString,tblptrl
  1250  0012F4  C027  FFF7         	movff	??_lcdWriteString+1,tblptrh
  1251  0012F8  0E00               	movlw	low (__smallconst shr (0+16))
  1252  0012FA  6EF8               	movwf	tblptru,c
  1253  0012FC  0E0F               	movlw	(high __ramtop+-1)
  1254  0012FE  64F7               	cpfsgt	tblptrh,c
  1255  001300  D003               	bra	u507
  1256  001302  0008               	tblrd		*
  1257  001304  50F5               	movf	tablat,w,c
  1258  001306  D005               	bra	u500
  1259  001308                     u507:
  1260  001308  CFF6 FFE1          	movff	tblptrl,fsr1l
  1261  00130C  CFF7 FFE2          	movff	tblptrh,fsr1h
  1262  001310  50E7               	movf	indf1,w,c
  1263  001312                     u500:
  1264  001312  0900               	iorlw	0
  1265  001314  B4D8               	btfsc	status,2,c
  1266  001316  0012               	return	
  1267  001318  D7CA               	goto	l1518
  1268  00131A                     __end_of_lcdWriteString:
  1269                           	opt stack 0
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           intcon	equ	0xFF2
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           indf1	equ	0xFE7
  1278                           postdec1	equ	0xFE5
  1279                           plusw1	equ	0xFE3
  1280                           fsr1h	equ	0xFE2
  1281                           fsr1l	equ	0xFE1
  1282                           plusw2	equ	0xFDB
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _lcdWriteInt *****************
  1286 ;; Defined at:
  1287 ;;		line 114 in file "user.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  num             1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  num             1   64[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;Total ram usage:        1 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    5
  1308 ;; This function calls:
  1309 ;;		_lcdWriteChar
  1310 ;;		_lcdWriteUI
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text11
  1317  0014E6                     __ptext11:
  1318                           	opt stack 0
  1319  0014E6                     _lcdWriteInt:
  1320                           	opt stack 25
  1321                           
  1322                           ;incstack = 0
  1323                           ;lcdWriteInt@num stored from wreg
  1324  0014E6  6E41               	movwf	lcdWriteInt@num,c
  1325                           
  1326                           ;user.c: 118: }
  1327                           ;user.c: 119: lcdWriteUI((unsigned int) num);
  1328                           
  1329                           ;user.c: 117: num = -num;
  1330                           
  1331                           ;user.c: 116: lcdWriteChar('-');
  1332                           
  1333                           ;user.c: 115: if(num < 0){
  1334  0014E8  C041  F029         	movff	lcdWriteInt@num,lcdWriteUI@num
  1335  0014EC  6A2A               	clrf	lcdWriteUI@num+1,c
  1336  0014EE  EC15  F009         	call	_lcdWriteUI	;wreg free
  1337  0014F2  0012               	return		;funcret
  1338  0014F4                     __end_of_lcdWriteInt:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           intcon	equ	0xFF2
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           indf1	equ	0xFE7
  1348                           postdec1	equ	0xFE5
  1349                           plusw1	equ	0xFE3
  1350                           fsr1h	equ	0xFE2
  1351                           fsr1l	equ	0xFE1
  1352                           plusw2	equ	0xFDB
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _lcdWriteUI *****************
  1356 ;; Defined at:
  1357 ;;		line 101 in file "user.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  num             2   40[COMRAM] unsigned int 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  stack          20   42[COMRAM] unsigned char [20]
  1362 ;;  i               2   62[COMRAM] int 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:       24 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    4
  1379 ;; This function calls:
  1380 ;;		___lwdiv
  1381 ;;		___lwmod
  1382 ;;		_lcdWriteChar
  1383 ;; This function is called by:
  1384 ;;		_lcdWriteInt
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text12
  1389  00122A                     __ptext12:
  1390                           	opt stack 0
  1391  00122A                     _lcdWriteUI:
  1392                           	opt stack 25
  1393                           
  1394                           ;user.c: 102: char stack[20];
  1395                           ;user.c: 103: int i = 0;
  1396                           
  1397                           ;incstack = 0
  1398  00122A  0E00               	movlw	0
  1399  00122C  6E40               	movwf	lcdWriteUI@i+1,c
  1400  00122E  0E00               	movlw	0
  1401  001230  6E3F               	movwf	lcdWriteUI@i,c
  1402  001232                     l1450:
  1403                           
  1404                           ;user.c: 105: stack[i++] = '0' + (num % 10);
  1405  001232  0E2B               	movlw	low lcdWriteUI@stack
  1406  001234  243F               	addwf	lcdWriteUI@i,w,c
  1407  001236  6ED9               	movwf	fsr2l,c
  1408  001238  0E00               	movlw	high lcdWriteUI@stack
  1409  00123A  2040               	addwfc	lcdWriteUI@i+1,w,c
  1410  00123C  6EDA               	movwf	fsr2h,c
  1411  00123E  C029  F022         	movff	lcdWriteUI@num,___lwmod@dividend
  1412  001242  C02A  F023         	movff	lcdWriteUI@num+1,___lwmod@dividend+1
  1413  001246  0E00               	movlw	0
  1414  001248  6E25               	movwf	___lwmod@divisor+1,c
  1415  00124A  0E0A               	movlw	10
  1416  00124C  6E24               	movwf	___lwmod@divisor,c
  1417  00124E  ECDA  F009         	call	___lwmod	;wreg free
  1418  001252  5022               	movf	?___lwmod,w,c
  1419  001254  0F30               	addlw	48
  1420  001256  6EDF               	movwf	indf2,c
  1421  001258  4A3F               	infsnz	lcdWriteUI@i,f,c
  1422  00125A  2A40               	incf	lcdWriteUI@i+1,f,c
  1423                           
  1424                           ;user.c: 106: num /= 10;
  1425  00125C  C029  F022         	movff	lcdWriteUI@num,___lwdiv@dividend
  1426  001260  C02A  F023         	movff	lcdWriteUI@num+1,___lwdiv@dividend+1
  1427  001264  0E00               	movlw	0
  1428  001266  6E25               	movwf	___lwdiv@divisor+1,c
  1429  001268  0E0A               	movlw	10
  1430  00126A  6E24               	movwf	___lwdiv@divisor,c
  1431  00126C  EC8D  F009         	call	___lwdiv	;wreg free
  1432  001270  C022  F029         	movff	?___lwdiv,lcdWriteUI@num
  1433  001274  C023  F02A         	movff	?___lwdiv+1,lcdWriteUI@num+1
  1434                           
  1435                           ;user.c: 107: }
  1436                           ;user.c: 108: while(num != 0);
  1437  001278  5029               	movf	lcdWriteUI@num,w,c
  1438  00127A  102A               	iorwf	lcdWriteUI@num+1,w,c
  1439  00127C  B4D8               	btfsc	status,2,c
  1440  00127E  D00D               	goto	l1460
  1441  001280  D7D8               	goto	l1450
  1442  001282                     l1458:
  1443                           
  1444                           ;user.c: 110: lcdWriteChar(stack[--i]);
  1445  001282  063F               	decf	lcdWriteUI@i,f,c
  1446  001284  A0D8               	btfss	status,0,c
  1447  001286  0640               	decf	lcdWriteUI@i+1,f,c
  1448  001288  0E2B               	movlw	low lcdWriteUI@stack
  1449  00128A  243F               	addwf	lcdWriteUI@i,w,c
  1450  00128C  6ED9               	movwf	fsr2l,c
  1451  00128E  0E00               	movlw	high lcdWriteUI@stack
  1452  001290  2040               	addwfc	lcdWriteUI@i+1,w,c
  1453  001292  6EDA               	movwf	fsr2h,c
  1454  001294  50DF               	movf	indf2,w,c
  1455  001296  ECB6  F009         	call	_lcdWriteChar
  1456  00129A                     l1460:
  1457  00129A  503F               	movf	lcdWriteUI@i,w,c
  1458  00129C  1040               	iorwf	lcdWriteUI@i+1,w,c
  1459  00129E  B4D8               	btfsc	status,2,c
  1460  0012A0  0012               	return	
  1461  0012A2  D7EF               	goto	l1458
  1462  0012A4                     __end_of_lcdWriteUI:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           intcon	equ	0xFF2
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf1	equ	0xFE7
  1472                           postdec1	equ	0xFE5
  1473                           plusw1	equ	0xFE3
  1474                           fsr1h	equ	0xFE2
  1475                           fsr1l	equ	0xFE1
  1476                           indf2	equ	0xFDF
  1477                           plusw2	equ	0xFDB
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8
  1481                           
  1482 ;; *************** function _lcdWriteChar *****************
  1483 ;; Defined at:
  1484 ;;		line 80 in file "user.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  leter           1    wreg     unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  leter           1   34[COMRAM] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;Total ram usage:        2 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		_lcdEnable
  1507 ;; This function is called by:
  1508 ;;		_lcdWriteString
  1509 ;;		_lcdWriteUI
  1510 ;;		_lcdWriteInt
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text13
  1515  00136C                     __ptext13:
  1516                           	opt stack 0
  1517  00136C                     _lcdWriteChar:
  1518                           	opt stack 26
  1519                           
  1520                           ;incstack = 0
  1521                           ;lcdWriteChar@leter stored from wreg
  1522  00136C  6E23               	movwf	lcdWriteChar@leter,c
  1523                           
  1524                           ;user.c: 81: PORTCbits.RC2 = 1;
  1525  00136E  8482               	bsf	3970,2,c	;volatile
  1526                           
  1527                           ;user.c: 82: _delay((unsigned long)((10)*(8000000/4000.0)));
  1528  001370  0E1A               	movlw	26
  1529  001372  6E22               	movwf	??_lcdWriteChar& (0+255),c
  1530  001374  0EF8               	movlw	248
  1531  001376                     u587:
  1532  001376  2EE8               	decfsz	wreg,f,c
  1533  001378  D7FE               	bra	u587
  1534  00137A  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  1535  00137C  D7FC               	bra	u587
  1536  00137E  D000               	nop2	
  1537                           
  1538                           ;user.c: 85: PORTD = (leter >> 4) & 0b00001111;
  1539  001380  3823               	swapf	lcdWriteChar@leter,w,c
  1540  001382  0B0F               	andlw	15
  1541  001384  0B0F               	andlw	15
  1542  001386  6E83               	movwf	3971,c	;volatile
  1543                           
  1544                           ;user.c: 86: lcdEnable();
  1545  001388  EC88  F00A         	call	_lcdEnable	;wreg free
  1546                           
  1547                           ;user.c: 87: _delay((unsigned long)((1)*(8000000/4000.0)));
  1548  00138C  0E03               	movlw	3
  1549  00138E  6E22               	movwf	??_lcdWriteChar& (0+255),c
  1550  001390  0E98               	movlw	152
  1551  001392                     u597:
  1552  001392  2EE8               	decfsz	wreg,f,c
  1553  001394  D7FE               	bra	u597
  1554  001396  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  1555  001398  D7FC               	bra	u597
  1556                           
  1557                           ;user.c: 89: PORTD = leter & 0b00001111;
  1558  00139A  5023               	movf	lcdWriteChar@leter,w,c
  1559  00139C  0B0F               	andlw	15
  1560  00139E  6E83               	movwf	3971,c	;volatile
  1561                           
  1562                           ;user.c: 90: lcdEnable();
  1563  0013A0  EC88  F00A         	call	_lcdEnable	;wreg free
  1564                           
  1565                           ;user.c: 91: _delay((unsigned long)((1)*(8000000/4000.0)));
  1566  0013A4  0E03               	movlw	3
  1567  0013A6  6E22               	movwf	??_lcdWriteChar& (0+255),c
  1568  0013A8  0E98               	movlw	152
  1569  0013AA                     u607:
  1570  0013AA  2EE8               	decfsz	wreg,f,c
  1571  0013AC  D7FE               	bra	u607
  1572  0013AE  2E22               	decfsz	??_lcdWriteChar& (0+255),f,c
  1573  0013B0  D7FC               	bra	u607
  1574  0013B2  0012               	return		;funcret
  1575  0013B4                     __end_of_lcdWriteChar:
  1576                           	opt stack 0
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           intcon	equ	0xFF2
  1582                           postinc0	equ	0xFEE
  1583                           wreg	equ	0xFE8
  1584                           indf1	equ	0xFE7
  1585                           postdec1	equ	0xFE5
  1586                           plusw1	equ	0xFE3
  1587                           fsr1h	equ	0xFE2
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           plusw2	equ	0xFDB
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function ___lwmod *****************
  1596 ;; Defined at:
  1597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  dividend        2   33[COMRAM] unsigned int 
  1600 ;;  divisor         2   35[COMRAM] unsigned int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  counter         1   37[COMRAM] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  2   33[COMRAM] unsigned int 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;Total ram usage:        5 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    2
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_lcdWriteUI
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text14
  1627  0013B4                     __ptext14:
  1628                           	opt stack 0
  1629  0013B4                     ___lwmod:
  1630                           	opt stack 26
  1631                           
  1632                           ;incstack = 0
  1633  0013B4  5024               	movf	___lwmod@divisor,w,c
  1634  0013B6  1025               	iorwf	___lwmod@divisor+1,w,c
  1635  0013B8  B4D8               	btfsc	status,2,c
  1636  0013BA  D018               	goto	l645
  1637  0013BC  0E01               	movlw	1
  1638  0013BE  6E26               	movwf	___lwmod@counter,c
  1639  0013C0  D004               	goto	l1438
  1640  0013C2                     l1436:
  1641  0013C2  90D8               	bcf	status,0,c
  1642  0013C4  3624               	rlcf	___lwmod@divisor,f,c
  1643  0013C6  3625               	rlcf	___lwmod@divisor+1,f,c
  1644  0013C8  2A26               	incf	___lwmod@counter,f,c
  1645  0013CA                     l1438:
  1646  0013CA  AE25               	btfss	___lwmod@divisor+1,7,c
  1647  0013CC  D7FA               	goto	l1436
  1648  0013CE                     l1440:
  1649  0013CE  5024               	movf	___lwmod@divisor,w,c
  1650  0013D0  5C22               	subwf	___lwmod@dividend,w,c
  1651  0013D2  5025               	movf	___lwmod@divisor+1,w,c
  1652  0013D4  5823               	subwfb	___lwmod@dividend+1,w,c
  1653  0013D6  A0D8               	btfss	status,0,c
  1654  0013D8  D004               	goto	l1444
  1655  0013DA  5024               	movf	___lwmod@divisor,w,c
  1656  0013DC  5E22               	subwf	___lwmod@dividend,f,c
  1657  0013DE  5025               	movf	___lwmod@divisor+1,w,c
  1658  0013E0  5A23               	subwfb	___lwmod@dividend+1,f,c
  1659  0013E2                     l1444:
  1660  0013E2  90D8               	bcf	status,0,c
  1661  0013E4  3225               	rrcf	___lwmod@divisor+1,f,c
  1662  0013E6  3224               	rrcf	___lwmod@divisor,f,c
  1663  0013E8  2E26               	decfsz	___lwmod@counter,f,c
  1664  0013EA  D7F1               	goto	l1440
  1665  0013EC                     l645:
  1666  0013EC  C022  F022         	movff	___lwmod@dividend,?___lwmod
  1667  0013F0  C023  F023         	movff	___lwmod@dividend+1,?___lwmod+1
  1668  0013F4  0012               	return		;funcret
  1669  0013F6                     __end_of___lwmod:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           intcon	equ	0xFF2
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           indf1	equ	0xFE7
  1679                           postdec1	equ	0xFE5
  1680                           plusw1	equ	0xFE3
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           plusw2	equ	0xFDB
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function ___lwdiv *****************
  1690 ;; Defined at:
  1691 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  dividend        2   33[COMRAM] unsigned int 
  1694 ;;  divisor         2   35[COMRAM] unsigned int 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  quotient        2   38[COMRAM] unsigned int 
  1697 ;;  counter         1   37[COMRAM] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2   33[COMRAM] unsigned int 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        7 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    2
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_lcdWriteUI
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text15
  1722  00131A                     __ptext15:
  1723                           	opt stack 0
  1724  00131A                     ___lwdiv:
  1725                           	opt stack 26
  1726                           
  1727                           ;incstack = 0
  1728  00131A  0E00               	movlw	0
  1729  00131C  6E28               	movwf	___lwdiv@quotient+1,c
  1730  00131E  0E00               	movlw	0
  1731  001320  6E27               	movwf	___lwdiv@quotient,c
  1732  001322  5024               	movf	___lwdiv@divisor,w,c
  1733  001324  1025               	iorwf	___lwdiv@divisor+1,w,c
  1734  001326  B4D8               	btfsc	status,2,c
  1735  001328  D01C               	goto	l635
  1736  00132A  0E01               	movlw	1
  1737  00132C  6E26               	movwf	___lwdiv@counter,c
  1738  00132E  D004               	goto	l1418
  1739  001330                     l1416:
  1740  001330  90D8               	bcf	status,0,c
  1741  001332  3624               	rlcf	___lwdiv@divisor,f,c
  1742  001334  3625               	rlcf	___lwdiv@divisor+1,f,c
  1743  001336  2A26               	incf	___lwdiv@counter,f,c
  1744  001338                     l1418:
  1745  001338  AE25               	btfss	___lwdiv@divisor+1,7,c
  1746  00133A  D7FA               	goto	l1416
  1747  00133C                     l1420:
  1748  00133C  90D8               	bcf	status,0,c
  1749  00133E  3627               	rlcf	___lwdiv@quotient,f,c
  1750  001340  3628               	rlcf	___lwdiv@quotient+1,f,c
  1751  001342  5024               	movf	___lwdiv@divisor,w,c
  1752  001344  5C22               	subwf	___lwdiv@dividend,w,c
  1753  001346  5025               	movf	___lwdiv@divisor+1,w,c
  1754  001348  5823               	subwfb	___lwdiv@dividend+1,w,c
  1755  00134A  A0D8               	btfss	status,0,c
  1756  00134C  D005               	goto	l1428
  1757  00134E  5024               	movf	___lwdiv@divisor,w,c
  1758  001350  5E22               	subwf	___lwdiv@dividend,f,c
  1759  001352  5025               	movf	___lwdiv@divisor+1,w,c
  1760  001354  5A23               	subwfb	___lwdiv@dividend+1,f,c
  1761  001356  8027               	bsf	___lwdiv@quotient,0,c
  1762  001358                     l1428:
  1763  001358  90D8               	bcf	status,0,c
  1764  00135A  3225               	rrcf	___lwdiv@divisor+1,f,c
  1765  00135C  3224               	rrcf	___lwdiv@divisor,f,c
  1766  00135E  2E26               	decfsz	___lwdiv@counter,f,c
  1767  001360  D7ED               	goto	l1420
  1768  001362                     l635:
  1769  001362  C027  F022         	movff	___lwdiv@quotient,?___lwdiv
  1770  001366  C028  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1771  00136A  0012               	return		;funcret
  1772  00136C                     __end_of___lwdiv:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           intcon	equ	0xFF2
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           indf1	equ	0xFE7
  1782                           postdec1	equ	0xFE5
  1783                           plusw1	equ	0xFE3
  1784                           fsr1h	equ	0xFE2
  1785                           fsr1l	equ	0xFE1
  1786                           indf2	equ	0xFDF
  1787                           plusw2	equ	0xFDB
  1788                           fsr2h	equ	0xFDA
  1789                           fsr2l	equ	0xFD9
  1790                           status	equ	0xFD8
  1791                           
  1792 ;; *************** function _initLCD *****************
  1793 ;; Defined at:
  1794 ;;		line 47 in file "user.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    3
  1815 ;; This function calls:
  1816 ;;		_lcdEnable
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text16
  1823  001194                     __ptext16:
  1824                           	opt stack 0
  1825  001194                     _initLCD:
  1826                           	opt stack 27
  1827                           
  1828                           ;user.c: 48: PORTCbits.RC5 = 0;
  1829                           
  1830                           ;incstack = 0
  1831  001194  9A82               	bcf	3970,5,c	;volatile
  1832                           
  1833                           ;user.c: 49: PORTCbits.RC2 = 0;
  1834  001196  9482               	bcf	3970,2,c	;volatile
  1835                           
  1836                           ;user.c: 50: _delay((unsigned long)((100)*(8000000/4000.0)));
  1837  001198  0E02               	movlw	2
  1838  00119A  6E23               	movwf	(??_initLCD+1)& (0+255),c
  1839  00119C  0E04               	movlw	4
  1840  00119E  6E22               	movwf	??_initLCD& (0+255),c
  1841  0011A0  0EBA               	movlw	186
  1842  0011A2                     u617:
  1843  0011A2  2EE8               	decfsz	wreg,f,c
  1844  0011A4  D7FE               	bra	u617
  1845  0011A6  2E22               	decfsz	??_initLCD& (0+255),f,c
  1846  0011A8  D7FC               	bra	u617
  1847  0011AA  2E23               	decfsz	(??_initLCD+1)& (0+255),f,c
  1848  0011AC  D7FA               	bra	u617
  1849  0011AE  D000               	nop2	
  1850                           
  1851                           ;user.c: 52: PORTD = 0b00000010;
  1852  0011B0  0E02               	movlw	2
  1853  0011B2  6E83               	movwf	3971,c	;volatile
  1854                           
  1855                           ;user.c: 53: lcdEnable();
  1856  0011B4  EC88  F00A         	call	_lcdEnable	;wreg free
  1857                           
  1858                           ;user.c: 54: PORTD = 0b00000010;
  1859  0011B8  0E02               	movlw	2
  1860  0011BA  6E83               	movwf	3971,c	;volatile
  1861                           
  1862                           ;user.c: 55: lcdEnable();
  1863  0011BC  EC88  F00A         	call	_lcdEnable	;wreg free
  1864                           
  1865                           ;user.c: 56: PORTD = 0b00001111;
  1866  0011C0  0E0F               	movlw	15
  1867  0011C2  6E83               	movwf	3971,c	;volatile
  1868                           
  1869                           ;user.c: 57: lcdEnable();
  1870  0011C4  EC88  F00A         	call	_lcdEnable	;wreg free
  1871                           
  1872                           ;user.c: 58: _delay((unsigned long)((70)*(8000000/4000000.0)));
  1873  0011C8  0E2E               	movlw	46
  1874  0011CA                     u627:
  1875  0011CA  2EE8               	decfsz	wreg,f,c
  1876  0011CC  D7FE               	bra	u627
  1877  0011CE  D000               	nop2	
  1878                           
  1879                           ;user.c: 60: PORTD = 0b00000000;
  1880  0011D0  0E00               	movlw	0
  1881  0011D2  6E83               	movwf	3971,c	;volatile
  1882                           
  1883                           ;user.c: 61: lcdEnable();
  1884  0011D4  EC88  F00A         	call	_lcdEnable	;wreg free
  1885                           
  1886                           ;user.c: 62: PORTD = 0b00001111;
  1887  0011D8  0E0F               	movlw	15
  1888  0011DA  6E83               	movwf	3971,c	;volatile
  1889                           
  1890                           ;user.c: 63: lcdEnable();
  1891  0011DC  EC88  F00A         	call	_lcdEnable	;wreg free
  1892                           
  1893                           ;user.c: 64: _delay((unsigned long)((70)*(8000000/4000000.0)));
  1894  0011E0  0E2E               	movlw	46
  1895  0011E2                     u637:
  1896  0011E2  2EE8               	decfsz	wreg,f,c
  1897  0011E4  D7FE               	bra	u637
  1898  0011E6  D000               	nop2	
  1899                           
  1900                           ;user.c: 66: PORTD = 0b00000000;
  1901  0011E8  0E00               	movlw	0
  1902  0011EA  6E83               	movwf	3971,c	;volatile
  1903                           
  1904                           ;user.c: 67: lcdEnable();
  1905  0011EC  EC88  F00A         	call	_lcdEnable	;wreg free
  1906                           
  1907                           ;user.c: 68: PORTD = 0b00000001;
  1908  0011F0  0E01               	movlw	1
  1909  0011F2  6E83               	movwf	3971,c	;volatile
  1910                           
  1911                           ;user.c: 69: lcdEnable();
  1912  0011F4  EC88  F00A         	call	_lcdEnable	;wreg free
  1913                           
  1914                           ;user.c: 70: _delay((unsigned long)((10)*(8000000/4000.0)));
  1915  0011F8  0E1A               	movlw	26
  1916  0011FA  6E22               	movwf	??_initLCD& (0+255),c
  1917  0011FC  0EF8               	movlw	248
  1918  0011FE                     u647:
  1919  0011FE  2EE8               	decfsz	wreg,f,c
  1920  001200  D7FE               	bra	u647
  1921  001202  2E22               	decfsz	??_initLCD& (0+255),f,c
  1922  001204  D7FC               	bra	u647
  1923  001206  D000               	nop2	
  1924                           
  1925                           ;user.c: 72: PORTD = 0b00000000;
  1926  001208  0E00               	movlw	0
  1927  00120A  6E83               	movwf	3971,c	;volatile
  1928                           
  1929                           ;user.c: 73: lcdEnable();
  1930  00120C  EC88  F00A         	call	_lcdEnable	;wreg free
  1931                           
  1932                           ;user.c: 74: PORTD = 0b00000011;
  1933  001210  0E03               	movlw	3
  1934  001212  6E83               	movwf	3971,c	;volatile
  1935                           
  1936                           ;user.c: 75: lcdEnable();
  1937  001214  EC88  F00A         	call	_lcdEnable	;wreg free
  1938                           
  1939                           ;user.c: 76: _delay((unsigned long)((30)*(8000000/4000.0)));
  1940  001218  0E4E               	movlw	78
  1941  00121A  6E22               	movwf	??_initLCD& (0+255),c
  1942  00121C  0EEB               	movlw	235
  1943  00121E                     u657:
  1944  00121E  2EE8               	decfsz	wreg,f,c
  1945  001220  D7FE               	bra	u657
  1946  001222  2E22               	decfsz	??_initLCD& (0+255),f,c
  1947  001224  D7FC               	bra	u657
  1948  001226  F000               	nop	
  1949  001228  0012               	return		;funcret
  1950  00122A                     __end_of_initLCD:
  1951                           	opt stack 0
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           intcon	equ	0xFF2
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           indf1	equ	0xFE7
  1960                           postdec1	equ	0xFE5
  1961                           plusw1	equ	0xFE3
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           indf2	equ	0xFDF
  1965                           plusw2	equ	0xFDB
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _clearDisplay *****************
  1971 ;; Defined at:
  1972 ;;		line 122 in file "user.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    3
  1993 ;; This function calls:
  1994 ;;		_lcdEnable
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text17
  2001  00142A                     __ptext17:
  2002                           	opt stack 0
  2003  00142A                     _clearDisplay:
  2004                           	opt stack 27
  2005                           
  2006                           ;user.c: 125: PORTCbits.RC2 = 0;
  2007                           
  2008                           ;incstack = 0
  2009  00142A  9482               	bcf	3970,2,c	;volatile
  2010                           
  2011                           ;user.c: 126: PORTD = 0b00000000;
  2012  00142C  0E00               	movlw	0
  2013  00142E  6E83               	movwf	3971,c	;volatile
  2014                           
  2015                           ;user.c: 127: lcdEnable();
  2016  001430  EC88  F00A         	call	_lcdEnable	;wreg free
  2017                           
  2018                           ;user.c: 128: _delay((unsigned long)((10)*(8000000/4000.0)));
  2019  001434  0E1A               	movlw	26
  2020  001436  6E22               	movwf	??_clearDisplay& (0+255),c
  2021  001438  0EF8               	movlw	248
  2022  00143A                     u667:
  2023  00143A  2EE8               	decfsz	wreg,f,c
  2024  00143C  D7FE               	bra	u667
  2025  00143E  2E22               	decfsz	??_clearDisplay& (0+255),f,c
  2026  001440  D7FC               	bra	u667
  2027  001442  D000               	nop2	
  2028                           
  2029                           ;user.c: 130: PORTD = 0b00000001;
  2030  001444  0E01               	movlw	1
  2031  001446  6E83               	movwf	3971,c	;volatile
  2032                           
  2033                           ;user.c: 131: lcdEnable();
  2034  001448  EC88  F00A         	call	_lcdEnable	;wreg free
  2035                           
  2036                           ;user.c: 132: _delay((unsigned long)((10)*(8000000/4000.0)));
  2037  00144C  0E1A               	movlw	26
  2038  00144E  6E22               	movwf	??_clearDisplay& (0+255),c
  2039  001450  0EF8               	movlw	248
  2040  001452                     u677:
  2041  001452  2EE8               	decfsz	wreg,f,c
  2042  001454  D7FE               	bra	u677
  2043  001456  2E22               	decfsz	??_clearDisplay& (0+255),f,c
  2044  001458  D7FC               	bra	u677
  2045  00145A  D000               	nop2	
  2046  00145C  0012               	return		;funcret
  2047  00145E                     __end_of_clearDisplay:
  2048                           	opt stack 0
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           intcon	equ	0xFF2
  2054                           postinc0	equ	0xFEE
  2055                           wreg	equ	0xFE8
  2056                           indf1	equ	0xFE7
  2057                           postdec1	equ	0xFE5
  2058                           plusw1	equ	0xFE3
  2059                           fsr1h	equ	0xFE2
  2060                           fsr1l	equ	0xFE1
  2061                           indf2	equ	0xFDF
  2062                           plusw2	equ	0xFDB
  2063                           fsr2h	equ	0xFDA
  2064                           fsr2l	equ	0xFD9
  2065                           status	equ	0xFD8
  2066                           
  2067 ;; *************** function _lcdEnable *****************
  2068 ;; Defined at:
  2069 ;;		line 41 in file "user.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		None
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    2
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_initLCD
  2094 ;;		_lcdWriteChar
  2095 ;;		_clearDisplay
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text18
  2100  001510                     __ptext18:
  2101                           	opt stack 0
  2102  001510                     _lcdEnable:
  2103                           	opt stack 26
  2104                           
  2105                           ;user.c: 42: PORTCbits.RC5 = 1;
  2106                           
  2107                           ;incstack = 0
  2108  001510  8A82               	bsf	3970,5,c	;volatile
  2109                           
  2110                           ;user.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
  2111  001512  D000               	nop2		;2 cycle nop
  2112                           
  2113                           ;user.c: 44: PORTCbits.RC5 = 0;
  2114  001514  9A82               	bcf	3970,5,c	;volatile
  2115  001516  0012               	return		;funcret
  2116  001518                     __end_of_lcdEnable:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           intcon	equ	0xFF2
  2123                           postinc0	equ	0xFEE
  2124                           wreg	equ	0xFE8
  2125                           indf1	equ	0xFE7
  2126                           postdec1	equ	0xFE5
  2127                           plusw1	equ	0xFE3
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           indf2	equ	0xFDF
  2131                           plusw2	equ	0xFDB
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _InitApp *****************
  2137 ;; Defined at:
  2138 ;;		line 28 in file "user.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		None
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text19
  2167  00151C                     __ptext19:
  2168                           	opt stack 0
  2169  00151C                     _InitApp:
  2170                           	opt stack 28
  2171                           
  2172                           ;incstack = 0
  2173  00151C  0012               	return		;funcret
  2174  00151E                     __end_of_InitApp:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           indf1	equ	0xFE7
  2184                           postdec1	equ	0xFE5
  2185                           plusw1	equ	0xFE3
  2186                           fsr1h	equ	0xFE2
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           plusw2	equ	0xFDB
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _I2CStop *****************
  2195 ;; Defined at:
  2196 ;;		line 28 in file "I2C.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		None
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    2
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text20
  2225  001518                     __ptext20:
  2226                           	opt stack 0
  2227  001518                     _I2CStop:
  2228                           	opt stack 28
  2229                           
  2230                           ;I2C.c: 30: SSPCON2bits.PEN = 1;
  2231                           
  2232                           ;incstack = 0
  2233  001518  84C5               	bsf	4037,2,c	;volatile
  2234  00151A  0012               	return		;funcret
  2235  00151C                     __end_of_I2CStop:
  2236                           	opt stack 0
  2237                           tblptru	equ	0xFF8
  2238                           tblptrh	equ	0xFF7
  2239                           tblptrl	equ	0xFF6
  2240                           tablat	equ	0xFF5
  2241                           intcon	equ	0xFF2
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           indf1	equ	0xFE7
  2245                           postdec1	equ	0xFE5
  2246                           plusw1	equ	0xFE3
  2247                           fsr1h	equ	0xFE2
  2248                           fsr1l	equ	0xFE1
  2249                           indf2	equ	0xFDF
  2250                           plusw2	equ	0xFDB
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _ConfigureOscillator *****************
  2256 ;; Defined at:
  2257 ;;		line 24 in file "system.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		None
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text21
  2286  00151E                     __ptext21:
  2287                           	opt stack 0
  2288  00151E                     _ConfigureOscillator:
  2289                           	opt stack 28
  2290                           
  2291                           ;incstack = 0
  2292  00151E  0012               	return		;funcret
  2293  001520                     __end_of_ConfigureOscillator:
  2294                           	opt stack 0
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           intcon	equ	0xFF2
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           indf1	equ	0xFE7
  2303                           postdec1	equ	0xFE5
  2304                           plusw1	equ	0xFE3
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           indf2	equ	0xFDF
  2308                           plusw2	equ	0xFDB
  2309                           fsr2h	equ	0xFDA
  2310                           fsr2l	equ	0xFD9
  2311                           status	equ	0xFD8
  2312                           
  2313 ;; *************** function _low_isr *****************
  2314 ;; Defined at:
  2315 ;;		line 75 in file "interrupts.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		None
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:       17 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		Interrupt level 1
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	intcodelo
  2344  000018                     __pintcodelo:
  2345                           	opt stack 0
  2346  000018                     _low_isr:
  2347                           	opt stack 25
  2348                           
  2349                           ;incstack = 0
  2350  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2351  00001A  CFD8 F011          	movff	status,??_low_isr
  2352  00001E  CFE8 F012          	movff	wreg,??_low_isr+1
  2353  000022  CFE0 F013          	movff	bsr,??_low_isr+2
  2354  000026  CFFA F014          	movff	pclath,??_low_isr+3
  2355  00002A  CFFB F015          	movff	pclatu,??_low_isr+4
  2356  00002E  CFE9 F016          	movff	fsr0l,??_low_isr+5
  2357  000032  CFEA F017          	movff	fsr0h,??_low_isr+6
  2358  000036  CFE1 F018          	movff	fsr1l,??_low_isr+7
  2359  00003A  CFE2 F019          	movff	fsr1h,??_low_isr+8
  2360  00003E  CFD9 F01A          	movff	fsr2l,??_low_isr+9
  2361  000042  CFDA F01B          	movff	fsr2h,??_low_isr+10
  2362  000046  CFF3 F01C          	movff	prodl,??_low_isr+11
  2363  00004A  CFF4 F01D          	movff	prodh,??_low_isr+12
  2364  00004E  CFF6 F01E          	movff	tblptrl,??_low_isr+13
  2365  000052  CFF7 F01F          	movff	tblptrh,??_low_isr+14
  2366  000056  CFF8 F020          	movff	tblptru,??_low_isr+15
  2367  00005A  CFF5 F021          	movff	tablat,??_low_isr+16
  2368  00005E  C021  FFF5         	movff	??_low_isr+16,tablat
  2369  000062  C020  FFF8         	movff	??_low_isr+15,tblptru
  2370  000066  C01F  FFF7         	movff	??_low_isr+14,tblptrh
  2371  00006A  C01E  FFF6         	movff	??_low_isr+13,tblptrl
  2372  00006E  C01D  FFF4         	movff	??_low_isr+12,prodh
  2373  000072  C01C  FFF3         	movff	??_low_isr+11,prodl
  2374  000076  C01B  FFDA         	movff	??_low_isr+10,fsr2h
  2375  00007A  C01A  FFD9         	movff	??_low_isr+9,fsr2l
  2376  00007E  C019  FFE2         	movff	??_low_isr+8,fsr1h
  2377  000082  C018  FFE1         	movff	??_low_isr+7,fsr1l
  2378  000086  C017  FFEA         	movff	??_low_isr+6,fsr0h
  2379  00008A  C016  FFE9         	movff	??_low_isr+5,fsr0l
  2380  00008E  C015  FFFB         	movff	??_low_isr+4,pclatu
  2381  000092  C014  FFFA         	movff	??_low_isr+3,pclath
  2382  000096  C013  FFE0         	movff	??_low_isr+2,bsr
  2383  00009A  C012  FFE8         	movff	??_low_isr+1,wreg
  2384  00009E  C011  FFD8         	movff	??_low_isr,status
  2385  0000A2  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2386  0000A4  0010               	retfie	
  2387  0000A6                     __end_of_low_isr:
  2388                           	opt stack 0
  2389                           pclatu	equ	0xFFB
  2390                           pclath	equ	0xFFA
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           indf1	equ	0xFE7
  2403                           postdec1	equ	0xFE5
  2404                           plusw1	equ	0xFE3
  2405                           fsr1h	equ	0xFE2
  2406                           fsr1l	equ	0xFE1
  2407                           bsr	equ	0xFE0
  2408                           indf2	equ	0xFDF
  2409                           plusw2	equ	0xFDB
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function _high_isr *****************
  2415 ;; Defined at:
  2416 ;;		line 30 in file "interrupts.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;Total ram usage:       16 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		Interrupt level 2
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	intcode
  2444  000008                     __pintcode:
  2445                           	opt stack 0
  2446  000008                     _high_isr:
  2447                           	opt stack 25
  2448                           
  2449                           ;incstack = 0
  2450  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2451  00000A  EF7E  F008         	goto	int_func
  2452                           pclatu	equ	0xFFB
  2453                           pclath	equ	0xFFA
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           prodh	equ	0xFF4
  2459                           prodl	equ	0xFF3
  2460                           intcon	equ	0xFF2
  2461                           postinc0	equ	0xFEE
  2462                           fsr0h	equ	0xFEA
  2463                           fsr0l	equ	0xFE9
  2464                           wreg	equ	0xFE8
  2465                           indf1	equ	0xFE7
  2466                           postdec1	equ	0xFE5
  2467                           plusw1	equ	0xFE3
  2468                           fsr1h	equ	0xFE2
  2469                           fsr1l	equ	0xFE1
  2470                           bsr	equ	0xFE0
  2471                           indf2	equ	0xFDF
  2472                           plusw2	equ	0xFDB
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477                           	psect	intcode_body
  2478  0010FC                     __pintcode_body:
  2479                           	opt stack 25
  2480  0010FC                     int_func:
  2481                           	opt stack 25
  2482  0010FC  CFFA F003          	movff	pclath,??_high_isr+2
  2483  001100  CFFB F004          	movff	pclatu,??_high_isr+3
  2484  001104  CFE9 F005          	movff	fsr0l,??_high_isr+4
  2485  001108  CFEA F006          	movff	fsr0h,??_high_isr+5
  2486  00110C  CFE1 F007          	movff	fsr1l,??_high_isr+6
  2487  001110  CFE2 F008          	movff	fsr1h,??_high_isr+7
  2488  001114  CFD9 F009          	movff	fsr2l,??_high_isr+8
  2489  001118  CFDA F00A          	movff	fsr2h,??_high_isr+9
  2490  00111C  CFF3 F00B          	movff	prodl,??_high_isr+10
  2491  001120  CFF4 F00C          	movff	prodh,??_high_isr+11
  2492  001124  CFF6 F00D          	movff	tblptrl,??_high_isr+12
  2493  001128  CFF7 F00E          	movff	tblptrh,??_high_isr+13
  2494  00112C  CFF8 F00F          	movff	tblptru,??_high_isr+14
  2495  001130  CFF5 F010          	movff	tablat,??_high_isr+15
  2496                           
  2497                           ;interrupts.c: 66: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  2498  001134  BAF2               	btfsc	intcon,5,c	;volatile
  2499  001136  A4F2               	btfss	intcon,2,c	;volatile
  2500  001138  D00F               	goto	i2l10
  2501                           
  2502                           ;interrupts.c: 67: valuePort = valuePort + 1;
  2503  00113A  2855               	incf	_valuePort,w,c
  2504  00113C  6E55               	movwf	_valuePort,c
  2505                           
  2506                           ;interrupts.c: 68: _delay(200000);
  2507  00113E  0E02               	movlw	2
  2508  001140  6E02               	movwf	(??_high_isr+1)& (0+255),c
  2509  001142  0E04               	movlw	4
  2510  001144  6E01               	movwf	??_high_isr& (0+255),c
  2511  001146  0EBA               	movlw	186
  2512  001148                     i2u68_47:
  2513  001148  2EE8               	decfsz	wreg,f,c
  2514  00114A  D7FE               	bra	i2u68_47
  2515  00114C  2E01               	decfsz	??_high_isr& (0+255),f,c
  2516  00114E  D7FC               	bra	i2u68_47
  2517  001150  2E02               	decfsz	(??_high_isr+1)& (0+255),f,c
  2518  001152  D7FA               	bra	i2u68_47
  2519  001154  D000               	nop2	
  2520                           
  2521                           ;interrupts.c: 69: INTCONbits.TMR0IF = 0;
  2522  001156  94F2               	bcf	intcon,2,c	;volatile
  2523  001158                     i2l10:
  2524  001158  C010  FFF5         	movff	??_high_isr+15,tablat
  2525  00115C  C00F  FFF8         	movff	??_high_isr+14,tblptru
  2526  001160  C00E  FFF7         	movff	??_high_isr+13,tblptrh
  2527  001164  C00D  FFF6         	movff	??_high_isr+12,tblptrl
  2528  001168  C00C  FFF4         	movff	??_high_isr+11,prodh
  2529  00116C  C00B  FFF3         	movff	??_high_isr+10,prodl
  2530  001170  C00A  FFDA         	movff	??_high_isr+9,fsr2h
  2531  001174  C009  FFD9         	movff	??_high_isr+8,fsr2l
  2532  001178  C008  FFE2         	movff	??_high_isr+7,fsr1h
  2533  00117C  C007  FFE1         	movff	??_high_isr+6,fsr1l
  2534  001180  C006  FFEA         	movff	??_high_isr+5,fsr0h
  2535  001184  C005  FFE9         	movff	??_high_isr+4,fsr0l
  2536  001188  C004  FFFB         	movff	??_high_isr+3,pclatu
  2537  00118C  C003  FFFA         	movff	??_high_isr+2,pclath
  2538  001190  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2539  001192  0011               	retfie		f
  2540  001194                     __end_of_high_isr:
  2541                           	opt stack 0
  2542                           pclatu	equ	0xFFB
  2543                           pclath	equ	0xFFA
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon	equ	0xFF2
  2551                           postinc0	equ	0xFEE
  2552                           fsr0h	equ	0xFEA
  2553                           fsr0l	equ	0xFE9
  2554                           wreg	equ	0xFE8
  2555                           indf1	equ	0xFE7
  2556                           postdec1	equ	0xFE5
  2557                           plusw1	equ	0xFE3
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           bsr	equ	0xFE0
  2561                           indf2	equ	0xFDF
  2562                           plusw2	equ	0xFDB
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           pclatu	equ	0xFFB
  2567                           pclath	equ	0xFFA
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           intcon	equ	0xFF2
  2575                           postinc0	equ	0xFEE
  2576                           fsr0h	equ	0xFEA
  2577                           fsr0l	equ	0xFE9
  2578                           wreg	equ	0xFE8
  2579                           indf1	equ	0xFE7
  2580                           postdec1	equ	0xFE5
  2581                           plusw1	equ	0xFE3
  2582                           fsr1h	equ	0xFE2
  2583                           fsr1l	equ	0xFE1
  2584                           bsr	equ	0xFE0
  2585                           indf2	equ	0xFDF
  2586                           plusw2	equ	0xFDB
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591                           	psect	rparam
  2592  0000                     pclatu	equ	0xFFB
  2593                           pclath	equ	0xFFA
  2594                           tblptru	equ	0xFF8
  2595                           tblptrh	equ	0xFF7
  2596                           tblptrl	equ	0xFF6
  2597                           tablat	equ	0xFF5
  2598                           prodh	equ	0xFF4
  2599                           prodl	equ	0xFF3
  2600                           intcon	equ	0xFF2
  2601                           postinc0	equ	0xFEE
  2602                           fsr0h	equ	0xFEA
  2603                           fsr0l	equ	0xFE9
  2604                           wreg	equ	0xFE8
  2605                           indf1	equ	0xFE7
  2606                           postdec1	equ	0xFE5
  2607                           plusw1	equ	0xFE3
  2608                           fsr1h	equ	0xFE2
  2609                           fsr1l	equ	0xFE1
  2610                           bsr	equ	0xFE0
  2611                           indf2	equ	0xFDF
  2612                           plusw2	equ	0xFDB
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617                           	psect	temp
  2618  000056                     btemp:
  2619                           	opt stack 0
  2620  000056                     	ds	1
  2621  0000                     int$flags	set	btemp
  2622                           pclatu	equ	0xFFB
  2623                           pclath	equ	0xFFA
  2624                           tblptru	equ	0xFF8
  2625                           tblptrh	equ	0xFF7
  2626                           tblptrl	equ	0xFF6
  2627                           tablat	equ	0xFF5
  2628                           prodh	equ	0xFF4
  2629                           prodl	equ	0xFF3
  2630                           intcon	equ	0xFF2
  2631                           postinc0	equ	0xFEE
  2632                           fsr0h	equ	0xFEA
  2633                           fsr0l	equ	0xFE9
  2634                           wreg	equ	0xFE8
  2635                           indf1	equ	0xFE7
  2636                           postdec1	equ	0xFE5
  2637                           plusw1	equ	0xFE3
  2638                           fsr1h	equ	0xFE2
  2639                           fsr1l	equ	0xFE1
  2640                           bsr	equ	0xFE0
  2641                           indf2	equ	0xFDF
  2642                           plusw2	equ	0xFDB
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    0
    Data        15
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     67      85
    BANK0           128     16      16
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcdWriteString@str	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[5]), STR_1(CODE[4]), main@str(BANK0[15]), 


Critical Paths under _main in COMRAM

    _main->_lcdWriteInt
    _readZ->_readDataByte
    _readX->_readDataByte
    _readDataByte->_writeDataByte
    _writeDataByte->_sendByte
    _lcdWriteString->_lcdWriteChar
    _lcdWriteInt->_lcdWriteUI
    _lcdWriteUI->___lwdiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    3448
                                             65 COMRAM     2     2      0
                                              0 BANK0     16    16      0
                _ConfigureOscillator
                            _I2CInit
                            _I2CStop
                            _InitApp
                       _clearDisplay
                            _initLCD
                        _lcdWriteInt
                     _lcdWriteString
                              _readX
                              _readZ
 ---------------------------------------------------------------------------------
 (1) _readZ                                                1     1      0     829
                                             39 COMRAM     1     1      0
                       _readDataByte
 ---------------------------------------------------------------------------------
 (1) _readX                                                1     1      0     829
                                             39 COMRAM     1     1      0
                       _readDataByte
 ---------------------------------------------------------------------------------
 (2) _readDataByte                                         3     2      1     795
                                             36 COMRAM     3     2      1
                         _I2CRestart
                        _receiveByte
                           _sendByte
                      _writeDataByte
 ---------------------------------------------------------------------------------
 (3) _writeDataByte                                        2     1      1     161
                                             34 COMRAM     2     1      1
                            _I2CInit
                           _I2CStart
                           _sendByte
 ---------------------------------------------------------------------------------
 (4) _sendByte                                             1     1      0      22
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2CInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _receiveByte                                          1     1      0      23
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2CRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdWriteString                                       6     4      2     405
                                             35 COMRAM     6     4      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (1) _lcdWriteInt                                          1     1      0    1277
                                             64 COMRAM     1     1      0
                       _lcdWriteChar
                         _lcdWriteUI
 ---------------------------------------------------------------------------------
 (2) _lcdWriteUI                                          24    22      2    1168
                                             40 COMRAM    24    22      2
                            ___lwdiv
                            ___lwmod
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         2     2      0      44
                                             33 COMRAM     2     2      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             33 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                             33 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0       0
                                             33 COMRAM     2     2      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         1     1      0       0
                                             33 COMRAM     1     1      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (3) _lcdEnable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2CStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             17    17      0       0
                                             16 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _I2CInit
   _I2CStop
   _InitApp
   _clearDisplay
     _lcdEnable
   _initLCD
     _lcdEnable
   _lcdWriteInt
     _lcdWriteChar
       _lcdEnable
     _lcdWriteUI
       ___lwdiv
       ___lwmod
       _lcdWriteChar
         _lcdEnable
   _lcdWriteString
     _lcdWriteChar
       _lcdEnable
   _readX
     _readDataByte
       _I2CRestart
       _receiveByte
       _sendByte
       _writeDataByte
         _I2CInit
         _I2CStart
         _sendByte
   _readZ
     _readDataByte
       _I2CRestart
       _receiveByte
       _sendByte
       _writeDataByte
         _I2CInit
         _I2CStart
         _sendByte

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     10      10       5       12.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     43      55       1       67.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      34        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Mar 24 13:17:36 2017

                 lcdWriteUI@i 003F                            bsr 000FE0                   __CFG_BORV$3 000000  
         __size_of_I2CRestart 0008                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l170 1502                           l182 14E0  
                         l176 150A                           l188 14BC                           l635 1362  
                         l645 13EC                  __CFG_CPB$OFF 000000                           u500 1312  
                         u521 104A                  __CFG_CPD$OFF 000000                           u507 1308  
                         u607 13AA                           u617 11A2                           u490 12DC  
                         u627 11CA                           u547 1032                           u637 11E2  
                         u557 1068                           u647 11FE                           u567 108C  
                         u657 121E                           u497 12D2                           u577 10EE  
                         u667 143A                           u587 1376                           u677 1452  
                         u597 1392                           _ack 0054               __end_of_I2CInit 1500  
             __end_of_I2CStop 151C                           wreg 000FE8                 lcdWriteUI@num 0029  
              ??_lcdWriteChar 0022                          l1420 133C                          l1416 1330  
                        l1440 13CE                          l1418 1338                          l1450 1232  
                        l1522 12E4                          l1428 1358                          l1444 13E2  
                        l1436 13C2                          l1460 129A                          l1438 13CA  
                        l1518 12AE                          l1458 1282                          l1594 109C  
                        STR_1 1006                          STR_2 1001                          _LATB 000F8A  
                        i2l10 1158                          _main 100C                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0056              __end_of_I2CStart 1508  
                        prodh 000FF4                          prodl 000FF3                          start 00A6  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
        __end_of_clearDisplay 145E               __end_of_InitApp 151E                lcdWriteInt@num 0041  
                       ?_main 0001                         _T0CON 000FD5               __end_of___lwdiv 136C  
             __end_of___lwmod 13F6                         _PORTB 000F81                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95           _ConfigureOscillator 151E                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                         __addr 0053                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000               __end_of_initLCD 122A                __CFG_EBTRB$OFF 000000  
                       _readX 14A8                         _readZ 1498               __end_of_low_isr 00A6  
                       pclath 000FFA                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         status 000FD8                  ?_receiveByte 0001  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 13F6  
               ?_readDataByte 0025                  __end_of_main 10FC               lcdWriteUI@stack 002B  
                   ??_I2CInit 0022                __CFG_OSC$RCIO6 000000                     ??_I2CStop 0022  
                      ??_main 0042                 __activetblptr 000002              ??_lcdWriteString 0026  
                      ?_readX 0001                        ?_readZ 0001                  ??_I2CRestart 0022  
                      _SSPBUF 000FC9                     ??_InitApp 0022         ??_ConfigureOscillator 0022  
        __size_of_lcdWriteInt 000E                ??_readDataByte 0026                __CFG_XINST$OFF 000000  
            __end_of_high_isr 1194          __end_of_lcdWriteChar 13B4                __CFG_STVREN$ON 000000  
             lcdWriteString@i 0028                     ??___lwdiv 0026                     ??___lwmod 0026  
          __end_of_I2CRestart 1510              __end_of_sendByte 14E6                     ??_initLCD 0022  
                __pdataCOMRAM 0044        __size_of_writeDataByte 0018                     ?_I2CStart 0001  
                __mediumconst 0000                     ??_low_isr 0011                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                    __accesstop 0080  
     __end_of__initialization 141C         __size_of_clearDisplay 0034                 ___rparam_used 000001  
              __pcstackCOMRAM 0001                 __end_of_readX 14B8                 __end_of_readZ 14A8  
          __size_of_lcdEnable 0008                    ??_I2CStart 0022                  _clearDisplay 142A  
                     ??_readX 0028                       ??_readZ 0028                 _writeDataByte 1480  
        __size_of_receiveByte 0010                       _I2CInit 14F4                       _I2CStop 1518  
                  _lcdWriteUI 122A          __end_of_readDataByte 1480                       i2u68_47 1148  
            writeDataByte@reg 0023                     ?_high_isr 0001             __end_of_lcdEnable 1518  
              ?_writeDataByte 0023                       _InitApp 151C         __size_of_lcdWriteChar 0048  
                   ?_sendByte 0001                       __Hparam 0000                       __Lparam 0000  
                     ___lwdiv 131A                       ___lwmod 13B4                  __psmallconst 1000  
                     __pcinit 13F6                       __ramtop 1000                       __ptext0 100C  
                     __ptext1 1498                       __ptext2 14A8                       __ptext3 145E  
                     __ptext4 1480                       __ptext5 14D8                       __ptext6 1500  
                     __ptext7 14F4                       __ptext8 14B8                       __ptext9 1508  
                     _initLCD 1194                       _low_isr 0018                       main@str 0080  
                  ??_high_isr 0001                  _lcdWriteChar 136C                __pintcode_body 10FC  
        end_of_initialization 141C                 __Lmediumconst 0000                       int_func 10FC  
            readDataByte@addr 0027              readDataByte@retc 0026                    ??_sendByte 0022  
                     postdec1 000FE5                       postinc0 000FEE                     _PORTCbits 000F82  
                 ?_lcdWriteUI 0029             __size_of_I2CStart 0008   __end_of_ConfigureOscillator 1520  
             ??_writeDataByte 0024               receiveByte@retc 0022                 ??_lcdWriteInt 0041  
               __pidataCOMRAM 14C8         __size_of_readDataByte 0022           start_initialization 13F6  
     __size_of_lcdWriteString 0076                    readX@x_pos 0028                    readZ@z_pos 0028  
         __size_of_lcdWriteUI 007A             lcdWriteChar@leter 0023                  _readDataByte 145E  
         __end_of_lcdWriteInt 14F4              __CFG_LPT1OSC$OFF 000000                      ?_I2CInit 0001  
                    ?_I2CStop 0001                   __pbssCOMRAM 0053                 __pcstackBANK0 0080  
           __size_of_high_isr 118C                 ??_receiveByte 0022                      ?_InitApp 0001  
            ___lwdiv@dividend 0022             __CFG_CCP2MX$PORTC 000000                     _lcdEnable 1510  
                   __pintcode 0008             __size_of_sendByte 000E                      ?___lwdiv 0022  
                    ?___lwmod 0022                   __pintcodelo 0018                      ?_initLCD 0001  
                 __smallconst 1000                      _I2CStart 1500                      ?_low_isr 0001  
            ___lwdiv@quotient 0027                __size_of_readX 0010                __size_of_readZ 0010  
                 _lcdWriteInt 14E6               readDataByte@reg 0025                      _PIR1bits 000F9E  
                  ?_lcdEnable 0001                     _valuePort 0055              __CFG_WDTPS$32768 000000  
                   main@F2902 0044           __end_of_receiveByte 14C8             writeDataByte@addr 0024  
            __size_of_I2CInit 000C              __size_of_I2CStop 0004                  ??_lcdWriteUI 002B  
                   copy_data0 140A                    _I2CRestart 1508                _lcdWriteString 12A4  
            __size_of_InitApp 0002                      __Hrparam 0000                      __Lrparam 0000  
          __end_of_lcdWriteUI 12A4            __CFG_BOREN$SBORDIS 000000              __size_of___lwdiv 0052  
            __size_of___lwmod 0042              __size_of_initLCD 0096             lcdWriteString@str 0024  
                   sendByte@c 0022               ___lwdiv@divisor 0024               ___lwdiv@counter 0026  
            __size_of_low_isr 008E                 ?_clearDisplay 0001                      __ptext10 12A4  
                    __ptext11 14E6                      __ptext20 1518                      __ptext12 122A  
                    __ptext21 151E                      __ptext13 136C                      __ptext14 13B4  
                    __ptext15 131A                      __ptext16 1194                      __ptext17 142A  
                    __ptext18 1510                      __ptext19 151C        __end_of_lcdWriteString 131A  
                    _high_isr 0008                 __size_of_main 00F0         __end_of_writeDataByte 1498  
                 _receiveByte 14B8                      _sendByte 14D8  __size_of_ConfigureOscillator 0002  
                 ??_lcdEnable 0022                      int$flags 0056                      main@xpos 008F  
                  _INTCONbits 000FF2                ??_clearDisplay 0022               ?_lcdWriteString 0024  
                 ?_I2CRestart 0001                      intlevel1 0000                      intlevel2 0000  
            ___lwmod@dividend 0022               ___lwmod@divisor 0024               ___lwmod@counter 0026  
                 _SSPCON1bits 000FC6                   _SSPCON2bits 000FC5                 ?_lcdWriteChar 0001  
                ?_lcdWriteInt 0001  
