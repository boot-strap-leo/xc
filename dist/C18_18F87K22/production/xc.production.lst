

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 27 16:15:43 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18LF4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 1.41
    30                           ; Generated 25/01/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18LF4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  0004DC                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _lightStatus
    69  0004DC  01                 	db	1
    70                           
    71                           ;initializer for _rate
    72  0004DD  2D                 	db	45
    73  0000                     _TXREG	set	4013
    74  0000                     _RCSTAbits	set	4011
    75  0000                     _PIE1bits	set	3997
    76  0000                     _SPBRG	set	4015
    77  0000                     _SPBRGH	set	4016
    78  0000                     _BAUDCONbits	set	4024
    79  0000                     _TXSTAbits	set	4012
    80  0000                     _T2CONbits	set	4042
    81  0000                     _T2CON	set	4042
    82  0000                     _CCP2CON	set	4026
    83  0000                     _CCPR2L	set	4027
    84  0000                     _PR2	set	4043
    85  0000                     _SSPBUF	set	4041
    86  0000                     _PIR1bits	set	3998
    87  0000                     _SSPCON2bits	set	4037
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _LATB	set	3978
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTCbits	set	3970
    92  0000                     _T0CON	set	4053
    93  0000                     _TRISCbits	set	3988
    94  0000                     _PORTB	set	3969
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISD	set	3989
    97  0000                     _TRISA	set	3986
    98  0000                     _TRISB	set	3987
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR0H	set	4055
   101  0000                     _INTCONbits	set	4082
   102  0000                     _RCREG	set	4014
   103  0000                     _TRMT	set	32097
   104  0000                     _LATA2	set	31818
   105  0000                     _RCIF	set	31989
   106  0000                     _RCIE	set	31981
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  000430                     __pcinit:
   112                           	opt stack 0
   113  000430                     start_initialization:
   114                           	opt stack 0
   115  000430                     __initialization:
   116                           	opt stack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (2 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  000430  0EDC               	movlw	low __pidataCOMRAM
   121  000432  6EF6               	movwf	tblptrl,c
   122  000434  0E04               	movlw	high __pidataCOMRAM
   123  000436  6EF7               	movwf	tblptrh,c
   124  000438  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  00043A  6EF8               	movwf	tblptru,c
   126  00043C  0009               	tblrd		*+	;fetch initializer
   127  00043E  CFF5 F055          	movff	tablat,__pdataCOMRAM
   128  000442  0009               	tblrd		*+	;fetch initializer
   129  000444  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   130                           
   131                           ; Clear objects allocated to BANK0 (105 bytes)
   132  000448  EE00  F080         	lfsr	0,__pbssBANK0
   133  00044C  0E69               	movlw	105
   134  00044E                     clear_0:
   135  00044E  6AEE               	clrf	postinc0,c
   136  000450  06E8               	decf	wreg,f,c
   137  000452  E1FD               	bnz	clear_0
   138                           
   139                           ; Clear objects allocated to COMRAM (39 bytes)
   140  000454  EE00  F02E         	lfsr	0,__pbssCOMRAM
   141  000458  0E27               	movlw	39
   142  00045A                     clear_1:
   143  00045A  6AEE               	clrf	postinc0,c
   144  00045C  06E8               	decf	wreg,f,c
   145  00045E  E1FD               	bnz	clear_1
   146  000460                     end_of_initialization:
   147                           	opt stack 0
   148  000460                     __end_of__initialization:
   149                           	opt stack 0
   150  000460  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151  000462  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152  000464  0E00               	movlw	low (__Lmediumconst shr (0+16))
   153  000466  6EF8               	movwf	tblptru,c
   154  000468  0100               	movlb	0
   155  00046A  EFC2  F000         	goto	_main	;jump to C main() function
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           
   163                           	psect	bssCOMRAM
   164  00002E                     __pbssCOMRAM:
   165                           	opt stack 0
   166  00002E                     _my_stack:
   167                           	opt stack 0
   168  00002E                     	ds	20
   169  000042                     _myCount:
   170                           	opt stack 0
   171  000042                     	ds	2
   172  000044                     _iter:
   173                           	opt stack 0
   174  000044                     	ds	2
   175  000046                     _servo_counter:
   176                           	opt stack 0
   177  000046                     	ds	2
   178  000048                     _offCounter:
   179                           	opt stack 0
   180  000048                     	ds	2
   181  00004A                     _onCounter:
   182                           	opt stack 0
   183  00004A                     	ds	2
   184  00004C                     _servo_direction:
   185                           	opt stack 0
   186  00004C                     	ds	2
   187  00004E                     __addr:
   188                           	opt stack 0
   189  00004E                     	ds	1
   190  00004F                     _ack:
   191                           	opt stack 0
   192  00004F                     	ds	1
   193  000050                     _valuePort:
   194                           	opt stack 0
   195  000050                     	ds	1
   196  000051                     _uart_tail:
   197                           	opt stack 0
   198  000051                     	ds	1
   199  000052                     _uart_head:
   200                           	opt stack 0
   201  000052                     	ds	1
   202  000053                     _RC_FLAG:
   203                           	opt stack 0
   204  000053                     	ds	1
   205  000054                     _RC_DATA:
   206                           	opt stack 0
   207  000054                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           tblptrh	equ	0xFF7
   210                           tblptrl	equ	0xFF6
   211                           tablat	equ	0xFF5
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	dataCOMRAM
   216  000055                     __pdataCOMRAM:
   217                           	opt stack 0
   218  000055                     _lightStatus:
   219                           	opt stack 0
   220  000055                     	ds	1
   221  000056                     _rate:
   222                           	opt stack 0
   223  000056                     	ds	1
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           
   231                           	psect	bssBANK0
   232  000080                     __pbssBANK0:
   233                           	opt stack 0
   234  000080                     _uart_buffer:
   235                           	opt stack 0
   236  000080                     	ds	105
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           
   244                           	psect	cstackCOMRAM
   245  000001                     __pcstackCOMRAM:
   246                           	opt stack 0
   247  000001                     ?i2___awmod:
   248                           	opt stack 0
   249  000001                     uartTX@data:
   250                           	opt stack 0
   251  000001                     i2___awmod@dividend:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x0
   255  000001                     	ds	2
   256  000003                     i2___awmod@divisor:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260  000003                     	ds	2
   261  000005                     i2___awmod@counter:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x4
   265  000005                     	ds	1
   266  000006                     i2___awmod@sign:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270  000006                     	ds	1
   271  000007                     ??_high_isr:
   272                           
   273                           ; 1 bytes @ 0x6
   274  000007                     	ds	14
   275  000015                     ??_low_isr:
   276                           
   277                           ; 1 bytes @ 0x14
   278  000015                     	ds	17
   279  000026                     ??_initLCD:
   280  000026                     ??_lcdWriteChar:
   281  000026                     ?___awmod:
   282                           	opt stack 0
   283  000026                     ___awmod@dividend:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x25
   287  000026                     	ds	1
   288  000027                     lcdWriteChar@leter:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x26
   292  000027                     	ds	1
   293  000028                     ___awmod@divisor:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x27
   297  000028                     	ds	2
   298  00002A                     ___awmod@counter:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x29
   302  00002A                     	ds	1
   303  00002B                     ___awmod@sign:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x2A
   307  00002B                     	ds	1
   308  00002C                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x2B
   311  00002C                     	ds	2
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 46 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  2  110[None  ] int 
   331 ;; Registers used:
   332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called:    5
   344 ;; This function calls:
   345 ;;		_ConfigureOscillator
   346 ;;		_InitApp
   347 ;;		___awmod
   348 ;;		_initLCD
   349 ;;		_initUART
   350 ;;		_lcdWriteChar
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357  000184                     __ptext0:
   358                           	opt stack 0
   359  000184                     _main:
   360                           	opt stack 26
   361                           
   362                           ;main.c: 49: ConfigureOscillator();
   363                           
   364                           ;incstack = 0
   365  000184  EC70  F002         	call	_ConfigureOscillator	;wreg free
   366                           
   367                           ;main.c: 52: InitApp();
   368  000188  EC6F  F002         	call	_InitApp	;wreg free
   369                           
   370                           ;main.c: 54: TRISB=0X00;
   371  00018C  0E00               	movlw	0
   372  00018E  6E93               	movwf	3987,c	;volatile
   373                           
   374                           ;main.c: 55: TRISA=0XFF;
   375  000190  6892               	setf	3986,c	;volatile
   376                           
   377                           ;main.c: 56: TRISD = 0x00;
   378  000192  0E00               	movlw	0
   379  000194  6E95               	movwf	3989,c	;volatile
   380                           
   381                           ;main.c: 57: TRISC = 0b00011000;
   382  000196  0E18               	movlw	24
   383  000198  6E94               	movwf	3988,c	;volatile
   384                           
   385                           ;main.c: 58: PORTB=0X00;
   386  00019A  0E00               	movlw	0
   387  00019C  6E81               	movwf	3969,c	;volatile
   388                           
   389                           ;main.c: 60: TRISCbits.RC2 = 0;
   390  00019E  9494               	bcf	3988,2,c	;volatile
   391                           
   392                           ;main.c: 61: T0CON = 0b10001000;
   393  0001A0  0E88               	movlw	136
   394  0001A2  6ED5               	movwf	4053,c	;volatile
   395                           
   396                           ;main.c: 62: INTCONbits.TMR0IE = 1;
   397  0001A4  8AF2               	bsf	intcon,5,c	;volatile
   398                           
   399                           ;main.c: 63: (INTCONbits.GIE = 1);
   400  0001A6  8EF2               	bsf	intcon,7,c	;volatile
   401                           
   402                           ;main.c: 66: _delay((unsigned long)((70)*(4000000/4000.0)));
   403  0001A8  0E5B               	movlw	91
   404  0001AA  6E2C               	movwf	??_main& (0+255),c
   405  0001AC  0EE8               	movlw	232
   406  0001AE                     u817:
   407  0001AE  2EE8               	decfsz	wreg,f,c
   408  0001B0  D7FE               	bra	u817
   409  0001B2  2E2C               	decfsz	??_main& (0+255),f,c
   410  0001B4  D7FC               	bra	u817
   411                           
   412                           ;main.c: 67: initLCD();
   413  0001B6  EC20  F001         	call	_initLCD	;wreg free
   414                           
   415                           ;main.c: 70: _delay((unsigned long)((500)*(4000000/4000.0)));
   416  0001BA  0E03               	movlw	3
   417  0001BC  6E2D               	movwf	(??_main+1)& (0+255),c
   418  0001BE  0E8A               	movlw	138
   419  0001C0  6E2C               	movwf	??_main& (0+255),c
   420  0001C2  0E56               	movlw	86
   421  0001C4                     u827:
   422  0001C4  2EE8               	decfsz	wreg,f,c
   423  0001C6  D7FE               	bra	u827
   424  0001C8  2E2C               	decfsz	??_main& (0+255),f,c
   425  0001CA  D7FC               	bra	u827
   426  0001CC  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   427  0001CE  D7FA               	bra	u827
   428                           
   429                           ;main.c: 72: initUART();
   430  0001D0  EC54  F002         	call	_initUART	;wreg free
   431  0001D4                     l1778:
   432                           
   433                           ;main.c: 75: _delay((unsigned long)((1000)*(4000000/4000.0)));
   434  0001D4  0E06               	movlw	6
   435  0001D6  6E2D               	movwf	(??_main+1)& (0+255),c
   436  0001D8  0E13               	movlw	19
   437  0001DA  6E2C               	movwf	??_main& (0+255),c
   438  0001DC  0EAE               	movlw	174
   439  0001DE                     u837:
   440  0001DE  2EE8               	decfsz	wreg,f,c
   441  0001E0  D7FE               	bra	u837
   442  0001E2  2E2C               	decfsz	??_main& (0+255),f,c
   443  0001E4  D7FC               	bra	u837
   444  0001E6  2E2D               	decfsz	(??_main+1)& (0+255),f,c
   445  0001E8  D7FA               	bra	u837
   446                           
   447                           ;main.c: 81: _delay((unsigned long)((10)*(4000000/4000.0)));
   448  0001EA  0E0D               	movlw	13
   449  0001EC  6E2C               	movwf	??_main& (0+255),c
   450  0001EE  0EFC               	movlw	252
   451  0001F0                     u847:
   452  0001F0  2EE8               	decfsz	wreg,f,c
   453  0001F2  D7FE               	bra	u847
   454  0001F4  2E2C               	decfsz	??_main& (0+255),f,c
   455  0001F6  D7FC               	bra	u847
   456                           
   457                           ;main.c: 82: if(RC_FLAG == 1){
   458  0001F8  0453               	decf	_RC_FLAG,w,c
   459  0001FA  B4D8               	btfsc	status,2,c
   460  0001FC  D01A               	goto	l1790
   461  0001FE  D7EA               	goto	l1778
   462  000200                     l1786:
   463                           
   464                           ;main.c: 84: lcdWriteChar(uart_buffer[uart_head]);
   465  000200  5052               	movf	_uart_head,w,c
   466  000202  0D01               	mullw	1
   467  000204  0E80               	movlw	low _uart_buffer
   468  000206  24F3               	addwf	prodl,w,c
   469  000208  6ED9               	movwf	fsr2l,c
   470  00020A  0E00               	movlw	high _uart_buffer
   471  00020C  20F4               	addwfc	prodh,w,c
   472  00020E  6EDA               	movwf	fsr2h,c
   473  000210  50DF               	movf	indf2,w,c
   474  000212  EC37  F002         	call	_lcdWriteChar
   475                           
   476                           ;main.c: 85: uart_head = (1 + uart_head) % 100;
   477  000216  0E01               	movlw	1
   478  000218  2452               	addwf	_uart_head,w,c
   479  00021A  6E26               	movwf	___awmod@dividend,c
   480  00021C  6A27               	clrf	___awmod@dividend+1,c
   481  00021E  0E00               	movlw	0
   482  000220  2227               	addwfc	___awmod@dividend+1,f,c
   483  000222  0E00               	movlw	0
   484  000224  6E29               	movwf	___awmod@divisor+1,c
   485  000226  0E64               	movlw	100
   486  000228  6E28               	movwf	___awmod@divisor,c
   487  00022A  ECA8  F001         	call	___awmod	;wreg free
   488  00022E  5026               	movf	?___awmod,w,c
   489  000230  6E52               	movwf	_uart_head,c
   490  000232                     l1790:
   491  000232  5051               	movf	_uart_tail,w,c
   492  000234  1852               	xorwf	_uart_head,w,c
   493  000236  A4D8               	btfss	status,2,c
   494  000238  D7E3               	goto	l1786
   495                           
   496                           ;main.c: 86: }
   497                           ;main.c: 87: RC_FLAG = 0;
   498  00023A  0E00               	movlw	0
   499  00023C  6E53               	movwf	_RC_FLAG,c
   500  00023E  D7CA               	goto	l1778
   501  000240                     __end_of_main:
   502                           	opt stack 0
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           prodh	equ	0xFF4
   508                           prodl	equ	0xFF3
   509                           intcon	equ	0xFF2
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           indf2	equ	0xFDF
   513                           fsr2h	equ	0xFDA
   514                           fsr2l	equ	0xFD9
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _lcdWriteChar *****************
   518 ;; Defined at:
   519 ;;		line 80 in file "user.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  leter           1    wreg     unsigned char 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  leter           1   38[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        2 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    4
   540 ;; This function calls:
   541 ;;		_lcdEnable
   542 ;; This function is called by:
   543 ;;		_main
   544 ;;		_lcdWriteString
   545 ;;		_lcdWriteUI
   546 ;;		_lcdWriteInt
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text1
   551  00046E                     __ptext1:
   552                           	opt stack 0
   553  00046E                     _lcdWriteChar:
   554                           	opt stack 26
   555                           
   556                           ;incstack = 0
   557                           ;lcdWriteChar@leter stored from wreg
   558  00046E  6E27               	movwf	lcdWriteChar@leter,c
   559                           
   560                           ;user.c: 81: PORTCbits.RC2 = 1;
   561  000470  8482               	bsf	3970,2,c	;volatile
   562                           
   563                           ;user.c: 82: _delay((unsigned long)((10)*(4000000/4000.0)));
   564  000472  0E0D               	movlw	13
   565  000474  6E26               	movwf	??_lcdWriteChar& (0+255),c
   566  000476  0EFC               	movlw	252
   567  000478                     u857:
   568  000478  2EE8               	decfsz	wreg,f,c
   569  00047A  D7FE               	bra	u857
   570  00047C  2E26               	decfsz	??_lcdWriteChar& (0+255),f,c
   571  00047E  D7FC               	bra	u857
   572                           
   573                           ;user.c: 85: PORTD = (leter >> 4) & 0b00001111;
   574  000480  3827               	swapf	lcdWriteChar@leter,w,c
   575  000482  0B0F               	andlw	15
   576  000484  0B0F               	andlw	15
   577  000486  6E83               	movwf	3971,c	;volatile
   578                           
   579                           ;user.c: 86: lcdEnable();
   580  000488  EC6A  F002         	call	_lcdEnable	;wreg free
   581                           
   582                           ;user.c: 87: _delay((unsigned long)((1)*(4000000/4000.0)));
   583  00048C  0EC8               	movlw	200
   584  00048E                     u867:
   585  00048E  D000               	nop2	
   586  000490  2EE8               	decfsz	wreg,f,c
   587  000492  D7FD               	bra	u867
   588                           
   589                           ;user.c: 89: PORTD = leter & 0b00001111;
   590  000494  5027               	movf	lcdWriteChar@leter,w,c
   591  000496  0B0F               	andlw	15
   592  000498  6E83               	movwf	3971,c	;volatile
   593                           
   594                           ;user.c: 90: lcdEnable();
   595  00049A  EC6A  F002         	call	_lcdEnable	;wreg free
   596                           
   597                           ;user.c: 91: _delay((unsigned long)((1)*(4000000/4000.0)));
   598  00049E  0EC8               	movlw	200
   599  0004A0                     u877:
   600  0004A0  D000               	nop2	
   601  0004A2  2EE8               	decfsz	wreg,f,c
   602  0004A4  D7FD               	bra	u877
   603  0004A6  0012               	return		;funcret
   604  0004A8                     __end_of_lcdWriteChar:
   605                           	opt stack 0
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           prodh	equ	0xFF4
   611                           prodl	equ	0xFF3
   612                           intcon	equ	0xFF2
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           indf2	equ	0xFDF
   616                           fsr2h	equ	0xFDA
   617                           fsr2l	equ	0xFD9
   618                           status	equ	0xFD8
   619                           
   620 ;; *************** function _initUART *****************
   621 ;; Defined at:
   622 ;;		line 4 in file "eusart.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    3
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text2
   651  0004A8                     __ptext2:
   652                           	opt stack 0
   653  0004A8                     _initUART:
   654                           	opt stack 27
   655                           
   656                           ;eusart.c: 5: TRISCbits.RC7 = 1;
   657                           
   658                           ;incstack = 0
   659  0004A8  8E94               	bsf	3988,7,c	;volatile
   660                           
   661                           ;eusart.c: 6: TRISCbits.RC6 = 1;
   662  0004AA  8C94               	bsf	3988,6,c	;volatile
   663                           
   664                           ;eusart.c: 8: TXSTAbits.BRGH = 1;
   665  0004AC  84AC               	bsf	4012,2,c	;volatile
   666                           
   667                           ;eusart.c: 9: BAUDCONbits.BRG16 = 1;
   668  0004AE  86B8               	bsf	4024,3,c	;volatile
   669                           
   670                           ;eusart.c: 10: TXSTAbits.SYNC =0;
   671  0004B0  98AC               	bcf	4012,4,c	;volatile
   672                           
   673                           ;eusart.c: 14: SPBRGH = 0x00;
   674  0004B2  0E00               	movlw	0
   675  0004B4  6EB0               	movwf	4016,c	;volatile
   676                           
   677                           ;eusart.c: 15: SPBRG = 0x07;
   678  0004B6  0E07               	movlw	7
   679  0004B8  6EAF               	movwf	4015,c	;volatile
   680                           
   681                           ;eusart.c: 18: PIE1bits.RCIE = 1;
   682  0004BA  8A9D               	bsf	3997,5,c	;volatile
   683                           
   684                           ;eusart.c: 19: INTCONbits.PEIE = 1;
   685  0004BC  8CF2               	bsf	intcon,6,c	;volatile
   686                           
   687                           ;eusart.c: 20: INTCONbits.GIE = 1;
   688  0004BE  8EF2               	bsf	intcon,7,c	;volatile
   689                           
   690                           ;eusart.c: 23: RCSTAbits.CREN = 1;
   691  0004C0  88AB               	bsf	4011,4,c	;volatile
   692                           
   693                           ;eusart.c: 24: TXSTAbits.TXEN = 1;
   694  0004C2  8AAC               	bsf	4012,5,c	;volatile
   695                           
   696                           ;eusart.c: 25: RCSTAbits.SPEN = 1;
   697  0004C4  8EAB               	bsf	4011,7,c	;volatile
   698  0004C6  0012               	return		;funcret
   699  0004C8                     __end_of_initUART:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           prodh	equ	0xFF4
   706                           prodl	equ	0xFF3
   707                           intcon	equ	0xFF2
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           indf2	equ	0xFDF
   711                           fsr2h	equ	0xFDA
   712                           fsr2l	equ	0xFD9
   713                           status	equ	0xFD8
   714                           
   715 ;; *************** function _initLCD *****************
   716 ;; Defined at:
   717 ;;		line 47 in file "user.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;Total ram usage:        1 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    4
   738 ;; This function calls:
   739 ;;		_lcdEnable
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  000240                     __ptext3:
   747                           	opt stack 0
   748  000240                     _initLCD:
   749                           	opt stack 26
   750                           
   751                           ;user.c: 48: PORTCbits.RC5 = 0;
   752                           
   753                           ;incstack = 0
   754  000240  9A82               	bcf	3970,5,c	;volatile
   755                           
   756                           ;user.c: 49: PORTCbits.RC2 = 0;
   757  000242  9482               	bcf	3970,2,c	;volatile
   758                           
   759                           ;user.c: 50: _delay((unsigned long)((100)*(4000000/4000.0)));
   760  000244  0E82               	movlw	130
   761  000246  6E26               	movwf	??_initLCD& (0+255),c
   762  000248  0EDE               	movlw	222
   763  00024A                     u887:
   764  00024A  2EE8               	decfsz	wreg,f,c
   765  00024C  D7FE               	bra	u887
   766  00024E  2E26               	decfsz	??_initLCD& (0+255),f,c
   767  000250  D7FC               	bra	u887
   768                           
   769                           ;user.c: 52: PORTD = 0b00000010;
   770  000252  0E02               	movlw	2
   771  000254  6E83               	movwf	3971,c	;volatile
   772                           
   773                           ;user.c: 53: lcdEnable();
   774  000256  EC6A  F002         	call	_lcdEnable	;wreg free
   775                           
   776                           ;user.c: 54: PORTD = 0b00000010;
   777  00025A  0E02               	movlw	2
   778  00025C  6E83               	movwf	3971,c	;volatile
   779                           
   780                           ;user.c: 55: lcdEnable();
   781  00025E  EC6A  F002         	call	_lcdEnable	;wreg free
   782                           
   783                           ;user.c: 56: PORTD = 0b00001111;
   784  000262  0E0F               	movlw	15
   785  000264  6E83               	movwf	3971,c	;volatile
   786                           
   787                           ;user.c: 57: lcdEnable();
   788  000266  EC6A  F002         	call	_lcdEnable	;wreg free
   789                           
   790                           ;user.c: 58: _delay((unsigned long)((70)*(4000000/4000000.0)));
   791  00026A  0E17               	movlw	23
   792  00026C                     u897:
   793  00026C  2EE8               	decfsz	wreg,f,c
   794  00026E  D7FE               	bra	u897
   795  000270  F000               	nop	
   796                           
   797                           ;user.c: 60: PORTD = 0b00000000;
   798  000272  0E00               	movlw	0
   799  000274  6E83               	movwf	3971,c	;volatile
   800                           
   801                           ;user.c: 61: lcdEnable();
   802  000276  EC6A  F002         	call	_lcdEnable	;wreg free
   803                           
   804                           ;user.c: 62: PORTD = 0b00001111;
   805  00027A  0E0F               	movlw	15
   806  00027C  6E83               	movwf	3971,c	;volatile
   807                           
   808                           ;user.c: 63: lcdEnable();
   809  00027E  EC6A  F002         	call	_lcdEnable	;wreg free
   810                           
   811                           ;user.c: 64: _delay((unsigned long)((70)*(4000000/4000000.0)));
   812  000282  0E17               	movlw	23
   813  000284                     u907:
   814  000284  2EE8               	decfsz	wreg,f,c
   815  000286  D7FE               	bra	u907
   816  000288  F000               	nop	
   817                           
   818                           ;user.c: 66: PORTD = 0b00000000;
   819  00028A  0E00               	movlw	0
   820  00028C  6E83               	movwf	3971,c	;volatile
   821                           
   822                           ;user.c: 67: lcdEnable();
   823  00028E  EC6A  F002         	call	_lcdEnable	;wreg free
   824                           
   825                           ;user.c: 68: PORTD = 0b00000001;
   826  000292  0E01               	movlw	1
   827  000294  6E83               	movwf	3971,c	;volatile
   828                           
   829                           ;user.c: 69: lcdEnable();
   830  000296  EC6A  F002         	call	_lcdEnable	;wreg free
   831                           
   832                           ;user.c: 70: _delay((unsigned long)((10)*(4000000/4000.0)));
   833  00029A  0E0D               	movlw	13
   834  00029C  6E26               	movwf	??_initLCD& (0+255),c
   835  00029E  0EFC               	movlw	252
   836  0002A0                     u917:
   837  0002A0  2EE8               	decfsz	wreg,f,c
   838  0002A2  D7FE               	bra	u917
   839  0002A4  2E26               	decfsz	??_initLCD& (0+255),f,c
   840  0002A6  D7FC               	bra	u917
   841                           
   842                           ;user.c: 72: PORTD = 0b00000000;
   843  0002A8  0E00               	movlw	0
   844  0002AA  6E83               	movwf	3971,c	;volatile
   845                           
   846                           ;user.c: 73: lcdEnable();
   847  0002AC  EC6A  F002         	call	_lcdEnable	;wreg free
   848                           
   849                           ;user.c: 74: PORTD = 0b00000011;
   850  0002B0  0E03               	movlw	3
   851  0002B2  6E83               	movwf	3971,c	;volatile
   852                           
   853                           ;user.c: 75: lcdEnable();
   854  0002B4  EC6A  F002         	call	_lcdEnable	;wreg free
   855                           
   856                           ;user.c: 76: _delay((unsigned long)((30)*(4000000/4000.0)));
   857  0002B8  0E27               	movlw	39
   858  0002BA  6E26               	movwf	??_initLCD& (0+255),c
   859  0002BC  0EF5               	movlw	245
   860  0002BE                     u927:
   861  0002BE  2EE8               	decfsz	wreg,f,c
   862  0002C0  D7FE               	bra	u927
   863  0002C2  2E26               	decfsz	??_initLCD& (0+255),f,c
   864  0002C4  D7FC               	bra	u927
   865  0002C6  F000               	nop	
   866  0002C8  0012               	return		;funcret
   867  0002CA                     __end_of_initLCD:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           intcon	equ	0xFF2
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           indf2	equ	0xFDF
   879                           fsr2h	equ	0xFDA
   880                           fsr2l	equ	0xFD9
   881                           status	equ	0xFD8
   882                           
   883 ;; *************** function _lcdEnable *****************
   884 ;; Defined at:
   885 ;;		line 41 in file "user.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		None
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    3
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_initLCD
   910 ;;		_lcdWriteChar
   911 ;;		_clearDisplay
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text4
   916  0004D4                     __ptext4:
   917                           	opt stack 0
   918  0004D4                     _lcdEnable:
   919                           	opt stack 26
   920                           
   921                           ;user.c: 42: PORTCbits.RC5 = 1;
   922                           
   923                           ;incstack = 0
   924  0004D4  8A82               	bsf	3970,5,c	;volatile
   925                           
   926                           ;user.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));
   927  0004D6  F000               	nop	
   928                           
   929                           ;user.c: 44: PORTCbits.RC5 = 0;
   930  0004D8  9A82               	bcf	3970,5,c	;volatile
   931  0004DA  0012               	return		;funcret
   932  0004DC                     __end_of_lcdEnable:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           prodh	equ	0xFF4
   939                           prodl	equ	0xFF3
   940                           intcon	equ	0xFF2
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           indf2	equ	0xFDF
   944                           fsr2h	equ	0xFDA
   945                           fsr2l	equ	0xFD9
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function ___awmod *****************
   949 ;; Defined at:
   950 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awmod.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  dividend        2   37[COMRAM] int 
   953 ;;  divisor         2   39[COMRAM] int 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  sign            1   42[COMRAM] unsigned char 
   956 ;;  counter         1   41[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2   37[COMRAM] int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        6 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    3
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_main
   977 ;;		_myQueuePush
   978 ;;		_myQueueCheck
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text5
   983  000350                     __ptext5:
   984                           	opt stack 0
   985  000350                     ___awmod:
   986                           	opt stack 27
   987                           
   988                           ;incstack = 0
   989  000350  0E00               	movlw	0
   990  000352  6E2B               	movwf	___awmod@sign,c
   991  000354  AE27               	btfss	___awmod@dividend+1,7,c
   992  000356  D006               	goto	l1660
   993  000358  6C26               	negf	___awmod@dividend,c
   994  00035A  1E27               	comf	___awmod@dividend+1,f,c
   995  00035C  B0D8               	btfsc	status,0,c
   996  00035E  2A27               	incf	___awmod@dividend+1,f,c
   997  000360  0E01               	movlw	1
   998  000362  6E2B               	movwf	___awmod@sign,c
   999  000364                     l1660:
  1000  000364  AE29               	btfss	___awmod@divisor+1,7,c
  1001  000366  D004               	goto	l1664
  1002  000368  6C28               	negf	___awmod@divisor,c
  1003  00036A  1E29               	comf	___awmod@divisor+1,f,c
  1004  00036C  B0D8               	btfsc	status,0,c
  1005  00036E  2A29               	incf	___awmod@divisor+1,f,c
  1006  000370                     l1664:
  1007  000370  5028               	movf	___awmod@divisor,w,c
  1008  000372  1029               	iorwf	___awmod@divisor+1,w,c
  1009  000374  B4D8               	btfsc	status,2,c
  1010  000376  D018               	goto	l1680
  1011  000378  0E01               	movlw	1
  1012  00037A  6E2A               	movwf	___awmod@counter,c
  1013  00037C  D004               	goto	l1670
  1014  00037E                     l1668:
  1015  00037E  90D8               	bcf	status,0,c
  1016  000380  3628               	rlcf	___awmod@divisor,f,c
  1017  000382  3629               	rlcf	___awmod@divisor+1,f,c
  1018  000384  2A2A               	incf	___awmod@counter,f,c
  1019  000386                     l1670:
  1020  000386  AE29               	btfss	___awmod@divisor+1,7,c
  1021  000388  D7FA               	goto	l1668
  1022  00038A                     l1672:
  1023  00038A  5028               	movf	___awmod@divisor,w,c
  1024  00038C  5C26               	subwf	___awmod@dividend,w,c
  1025  00038E  5029               	movf	___awmod@divisor+1,w,c
  1026  000390  5827               	subwfb	___awmod@dividend+1,w,c
  1027  000392  A0D8               	btfss	status,0,c
  1028  000394  D004               	goto	l1676
  1029  000396  5028               	movf	___awmod@divisor,w,c
  1030  000398  5E26               	subwf	___awmod@dividend,f,c
  1031  00039A  5029               	movf	___awmod@divisor+1,w,c
  1032  00039C  5A27               	subwfb	___awmod@dividend+1,f,c
  1033  00039E                     l1676:
  1034  00039E  90D8               	bcf	status,0,c
  1035  0003A0  3229               	rrcf	___awmod@divisor+1,f,c
  1036  0003A2  3228               	rrcf	___awmod@divisor,f,c
  1037  0003A4  2E2A               	decfsz	___awmod@counter,f,c
  1038  0003A6  D7F1               	goto	l1672
  1039  0003A8                     l1680:
  1040  0003A8  502B               	movf	___awmod@sign,w,c
  1041  0003AA  B4D8               	btfsc	status,2,c
  1042  0003AC  D004               	goto	l1684
  1043  0003AE  6C26               	negf	___awmod@dividend,c
  1044  0003B0  1E27               	comf	___awmod@dividend+1,f,c
  1045  0003B2  B0D8               	btfsc	status,0,c
  1046  0003B4  2A27               	incf	___awmod@dividend+1,f,c
  1047  0003B6                     l1684:
  1048  0003B6  C026  F026         	movff	___awmod@dividend,?___awmod
  1049  0003BA  C027  F027         	movff	___awmod@dividend+1,?___awmod+1
  1050  0003BE  0012               	return	
  1051  0003C0                     __end_of___awmod:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           prodh	equ	0xFF4
  1058                           prodl	equ	0xFF3
  1059                           intcon	equ	0xFF2
  1060                           postinc0	equ	0xFEE
  1061                           wreg	equ	0xFE8
  1062                           indf2	equ	0xFDF
  1063                           fsr2h	equ	0xFDA
  1064                           fsr2l	equ	0xFD9
  1065                           status	equ	0xFD8
  1066                           
  1067 ;; *************** function _InitApp *****************
  1068 ;; Defined at:
  1069 ;;		line 28 in file "user.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		None
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text6
  1098  0004DE                     __ptext6:
  1099                           	opt stack 0
  1100  0004DE                     _InitApp:
  1101                           	opt stack 27
  1102                           
  1103                           ;incstack = 0
  1104  0004DE  0012               	return		;funcret
  1105  0004E0                     __end_of_InitApp:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           prodh	equ	0xFF4
  1112                           prodl	equ	0xFF3
  1113                           intcon	equ	0xFF2
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           indf2	equ	0xFDF
  1117                           fsr2h	equ	0xFDA
  1118                           fsr2l	equ	0xFD9
  1119                           status	equ	0xFD8
  1120                           
  1121 ;; *************** function _ConfigureOscillator *****************
  1122 ;; Defined at:
  1123 ;;		line 24 in file "system.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		None
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    3
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text7
  1152  0004E0                     __ptext7:
  1153                           	opt stack 0
  1154  0004E0                     _ConfigureOscillator:
  1155                           	opt stack 27
  1156                           
  1157                           ;incstack = 0
  1158  0004E0  0012               	return		;funcret
  1159  0004E2                     __end_of_ConfigureOscillator:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           prodh	equ	0xFF4
  1166                           prodl	equ	0xFF3
  1167                           intcon	equ	0xFF2
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           indf2	equ	0xFDF
  1171                           fsr2h	equ	0xFDA
  1172                           fsr2l	equ	0xFD9
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _low_isr *****************
  1176 ;; Defined at:
  1177 ;;		line 85 in file "interrupts.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		None
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;Total ram usage:       17 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		Interrupt level 1
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	intcodelo
  1206  000018                     __pintcodelo:
  1207                           	opt stack 0
  1208  000018                     _low_isr:
  1209                           	opt stack 26
  1210                           
  1211                           ;incstack = 0
  1212  000018  8057               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1213  00001A  CFD8 F015          	movff	status,??_low_isr
  1214  00001E  CFE8 F016          	movff	wreg,??_low_isr+1
  1215  000022  CFE0 F017          	movff	bsr,??_low_isr+2
  1216  000026  CFFA F018          	movff	pclath,??_low_isr+3
  1217  00002A  CFFB F019          	movff	pclatu,??_low_isr+4
  1218  00002E  CFE9 F01A          	movff	fsr0l,??_low_isr+5
  1219  000032  CFEA F01B          	movff	fsr0h,??_low_isr+6
  1220  000036  CFE1 F01C          	movff	fsr1l,??_low_isr+7
  1221  00003A  CFE2 F01D          	movff	fsr1h,??_low_isr+8
  1222  00003E  CFD9 F01E          	movff	fsr2l,??_low_isr+9
  1223  000042  CFDA F01F          	movff	fsr2h,??_low_isr+10
  1224  000046  CFF3 F020          	movff	prodl,??_low_isr+11
  1225  00004A  CFF4 F021          	movff	prodh,??_low_isr+12
  1226  00004E  CFF6 F022          	movff	tblptrl,??_low_isr+13
  1227  000052  CFF7 F023          	movff	tblptrh,??_low_isr+14
  1228  000056  CFF8 F024          	movff	tblptru,??_low_isr+15
  1229  00005A  CFF5 F025          	movff	tablat,??_low_isr+16
  1230  00005E  C025  FFF5         	movff	??_low_isr+16,tablat
  1231  000062  C024  FFF8         	movff	??_low_isr+15,tblptru
  1232  000066  C023  FFF7         	movff	??_low_isr+14,tblptrh
  1233  00006A  C022  FFF6         	movff	??_low_isr+13,tblptrl
  1234  00006E  C021  FFF4         	movff	??_low_isr+12,prodh
  1235  000072  C020  FFF3         	movff	??_low_isr+11,prodl
  1236  000076  C01F  FFDA         	movff	??_low_isr+10,fsr2h
  1237  00007A  C01E  FFD9         	movff	??_low_isr+9,fsr2l
  1238  00007E  C01D  FFE2         	movff	??_low_isr+8,fsr1h
  1239  000082  C01C  FFE1         	movff	??_low_isr+7,fsr1l
  1240  000086  C01B  FFEA         	movff	??_low_isr+6,fsr0h
  1241  00008A  C01A  FFE9         	movff	??_low_isr+5,fsr0l
  1242  00008E  C019  FFFB         	movff	??_low_isr+4,pclatu
  1243  000092  C018  FFFA         	movff	??_low_isr+3,pclath
  1244  000096  C017  FFE0         	movff	??_low_isr+2,bsr
  1245  00009A  C016  FFE8         	movff	??_low_isr+1,wreg
  1246  00009E  C015  FFD8         	movff	??_low_isr,status
  1247  0000A2  9057               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1248  0000A4  0010               	retfie	
  1249  0000A6                     __end_of_low_isr:
  1250                           	opt stack 0
  1251                           pclatu	equ	0xFFB
  1252                           pclath	equ	0xFFA
  1253                           tblptru	equ	0xFF8
  1254                           tblptrh	equ	0xFF7
  1255                           tblptrl	equ	0xFF6
  1256                           tablat	equ	0xFF5
  1257                           prodh	equ	0xFF4
  1258                           prodl	equ	0xFF3
  1259                           intcon	equ	0xFF2
  1260                           postinc0	equ	0xFEE
  1261                           fsr0h	equ	0xFEA
  1262                           fsr0l	equ	0xFE9
  1263                           wreg	equ	0xFE8
  1264                           fsr1h	equ	0xFE2
  1265                           fsr1l	equ	0xFE1
  1266                           bsr	equ	0xFE0
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _high_isr *****************
  1273 ;; Defined at:
  1274 ;;		line 32 in file "interrupts.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:       14 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    1
  1295 ;; This function calls:
  1296 ;;		_servoInteruptions
  1297 ;;		_uartTX
  1298 ;;		i2___awmod
  1299 ;; This function is called by:
  1300 ;;		Interrupt level 2
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	intcode
  1305  000008                     __pintcode:
  1306                           	opt stack 0
  1307  000008                     _high_isr:
  1308                           	opt stack 26
  1309                           
  1310                           ;incstack = 0
  1311  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1312  00000A  EF55  F000         	goto	int_func
  1313                           pclatu	equ	0xFFB
  1314                           pclath	equ	0xFFA
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           fsr0h	equ	0xFEA
  1324                           fsr0l	equ	0xFE9
  1325                           wreg	equ	0xFE8
  1326                           fsr1h	equ	0xFE2
  1327                           fsr1l	equ	0xFE1
  1328                           bsr	equ	0xFE0
  1329                           indf2	equ	0xFDF
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334                           	psect	intcode_body
  1335  0000AA                     __pintcode_body:
  1336                           	opt stack 26
  1337  0000AA                     int_func:
  1338                           	opt stack 26
  1339  0000AA  CFFA F007          	movff	pclath,??_high_isr
  1340  0000AE  CFFB F008          	movff	pclatu,??_high_isr+1
  1341  0000B2  CFE9 F009          	movff	fsr0l,??_high_isr+2
  1342  0000B6  CFEA F00A          	movff	fsr0h,??_high_isr+3
  1343  0000BA  CFE1 F00B          	movff	fsr1l,??_high_isr+4
  1344  0000BE  CFE2 F00C          	movff	fsr1h,??_high_isr+5
  1345  0000C2  CFD9 F00D          	movff	fsr2l,??_high_isr+6
  1346  0000C6  CFDA F00E          	movff	fsr2h,??_high_isr+7
  1347  0000CA  CFF3 F00F          	movff	prodl,??_high_isr+8
  1348  0000CE  CFF4 F010          	movff	prodh,??_high_isr+9
  1349  0000D2  CFF6 F011          	movff	tblptrl,??_high_isr+10
  1350  0000D6  CFF7 F012          	movff	tblptrh,??_high_isr+11
  1351  0000DA  CFF8 F013          	movff	tblptru,??_high_isr+12
  1352  0000DE  CFF5 F014          	movff	tablat,??_high_isr+13
  1353                           
  1354                           ;interrupts.c: 67: if (RCIE && RCIF) {
  1355  0000E2  BA9D               	btfsc	3997,5,c	;volatile
  1356  0000E4  AA9E               	btfss	3998,5,c	;volatile
  1357  0000E6  D027               	goto	i2l1740
  1358                           
  1359                           ;interrupts.c: 68: uart_buffer[uart_tail] = RCREG;
  1360  0000E8  5051               	movf	_uart_tail,w,c
  1361  0000EA  0D01               	mullw	1
  1362  0000EC  0E80               	movlw	low _uart_buffer
  1363  0000EE  24F3               	addwf	prodl,w,c
  1364  0000F0  6ED9               	movwf	fsr2l,c
  1365  0000F2  0E00               	movlw	high _uart_buffer
  1366  0000F4  20F4               	addwfc	prodh,w,c
  1367  0000F6  6EDA               	movwf	fsr2h,c
  1368  0000F8  CFAE FFDF          	movff	4014,indf2	;volatile
  1369                           
  1370                           ;interrupts.c: 69: uartTX(uart_buffer[uart_tail]);
  1371  0000FC  5051               	movf	_uart_tail,w,c
  1372  0000FE  0D01               	mullw	1
  1373  000100  0E80               	movlw	low _uart_buffer
  1374  000102  24F3               	addwf	prodl,w,c
  1375  000104  6ED9               	movwf	fsr2l,c
  1376  000106  0E00               	movlw	high _uart_buffer
  1377  000108  20F4               	addwfc	prodh,w,c
  1378  00010A  6EDA               	movwf	fsr2h,c
  1379  00010C  50DF               	movf	indf2,w,c
  1380  00010E  EC64  F002         	call	_uartTX
  1381                           
  1382                           ;interrupts.c: 70: uart_tail = (1 + uart_tail) % 100;
  1383  000112  0E01               	movlw	1
  1384  000114  2451               	addwf	_uart_tail,w,c
  1385  000116  6E01               	movwf	i2___awmod@dividend,c
  1386  000118  6A02               	clrf	i2___awmod@dividend+1,c
  1387  00011A  0E00               	movlw	0
  1388  00011C  2202               	addwfc	i2___awmod@dividend+1,f,c
  1389  00011E  0E00               	movlw	0
  1390  000120  6E04               	movwf	i2___awmod@divisor+1,c
  1391  000122  0E64               	movlw	100
  1392  000124  6E03               	movwf	i2___awmod@divisor,c
  1393  000126  ECE0  F001         	call	i2___awmod	;wreg free
  1394  00012A  5001               	movf	?i2___awmod,w,c
  1395  00012C  6E51               	movwf	_uart_tail,c
  1396                           
  1397                           ;interrupts.c: 71: RC_FLAG = 1;
  1398  00012E  0E01               	movlw	1
  1399  000130  6E53               	movwf	_RC_FLAG,c
  1400                           
  1401                           ;interrupts.c: 72: LATA2 = 1;
  1402  000132  8489               	bsf	3977,2,c	;volatile
  1403                           
  1404                           ;interrupts.c: 73: RCIF = 0;
  1405  000134  9A9E               	bcf	3998,5,c	;volatile
  1406  000136                     i2l1740:
  1407                           
  1408                           ;interrupts.c: 74: }
  1409                           ;interrupts.c: 75: if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  1410  000136  BAF2               	btfsc	intcon,5,c	;volatile
  1411  000138  A4F2               	btfss	intcon,2,c	;volatile
  1412  00013A  D006               	goto	i2l43
  1413                           
  1414                           ;interrupts.c: 76: servoInteruptions();
  1415  00013C  EC65  F001         	call	_servoInteruptions	;wreg free
  1416                           
  1417                           ;interrupts.c: 77: INTCONbits.TMR0IF = 0;
  1418  000140  94F2               	bcf	intcon,2,c	;volatile
  1419                           
  1420                           ;interrupts.c: 78: TMR0H = 0xFF;
  1421  000142  68D7               	setf	4055,c	;volatile
  1422                           
  1423                           ;interrupts.c: 79: TMR0L = 0x80;
  1424  000144  0E80               	movlw	128
  1425  000146  6ED6               	movwf	4054,c	;volatile
  1426  000148                     i2l43:
  1427  000148  C014  FFF5         	movff	??_high_isr+13,tablat
  1428  00014C  C013  FFF8         	movff	??_high_isr+12,tblptru
  1429  000150  C012  FFF7         	movff	??_high_isr+11,tblptrh
  1430  000154  C011  FFF6         	movff	??_high_isr+10,tblptrl
  1431  000158  C010  FFF4         	movff	??_high_isr+9,prodh
  1432  00015C  C00F  FFF3         	movff	??_high_isr+8,prodl
  1433  000160  C00E  FFDA         	movff	??_high_isr+7,fsr2h
  1434  000164  C00D  FFD9         	movff	??_high_isr+6,fsr2l
  1435  000168  C00C  FFE2         	movff	??_high_isr+5,fsr1h
  1436  00016C  C00B  FFE1         	movff	??_high_isr+4,fsr1l
  1437  000170  C00A  FFEA         	movff	??_high_isr+3,fsr0h
  1438  000174  C009  FFE9         	movff	??_high_isr+2,fsr0l
  1439  000178  C008  FFFB         	movff	??_high_isr+1,pclatu
  1440  00017C  C007  FFFA         	movff	??_high_isr,pclath
  1441  000180  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1442  000182  0011               	retfie		f
  1443  000184                     __end_of_high_isr:
  1444                           	opt stack 0
  1445                           pclatu	equ	0xFFB
  1446                           pclath	equ	0xFFA
  1447                           tblptru	equ	0xFF8
  1448                           tblptrh	equ	0xFF7
  1449                           tblptrl	equ	0xFF6
  1450                           tablat	equ	0xFF5
  1451                           prodh	equ	0xFF4
  1452                           prodl	equ	0xFF3
  1453                           intcon	equ	0xFF2
  1454                           postinc0	equ	0xFEE
  1455                           fsr0h	equ	0xFEA
  1456                           fsr0l	equ	0xFE9
  1457                           wreg	equ	0xFE8
  1458                           fsr1h	equ	0xFE2
  1459                           fsr1l	equ	0xFE1
  1460                           bsr	equ	0xFE0
  1461                           indf2	equ	0xFDF
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466 ;; *************** function i2___awmod *****************
  1467 ;; Defined at:
  1468 ;;		line 8 in file "/opt/microchip/xc8/v1.41/sources/common/awmod.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  dividend        2    0[COMRAM] int 
  1471 ;;  divisor         2    2[COMRAM] int 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  __awmod         1    5[COMRAM] unsigned char 
  1474 ;;  __awmod         1    4[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    0[COMRAM] int 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_high_isr
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text10
  1498  0003C0                     __ptext10:
  1499                           	opt stack 0
  1500  0003C0                     i2___awmod:
  1501                           	opt stack 26
  1502                           
  1503                           ;incstack = 0
  1504  0003C0  0E00               	movlw	0
  1505  0003C2  6E06               	movwf	i2___awmod@sign,c
  1506  0003C4  AE02               	btfss	i2___awmod@dividend+1,7,c
  1507  0003C6  D006               	goto	i2l1696
  1508  0003C8  6C01               	negf	i2___awmod@dividend,c
  1509  0003CA  1E02               	comf	i2___awmod@dividend+1,f,c
  1510  0003CC  B0D8               	btfsc	status,0,c
  1511  0003CE  2A02               	incf	i2___awmod@dividend+1,f,c
  1512  0003D0  0E01               	movlw	1
  1513  0003D2  6E06               	movwf	i2___awmod@sign,c
  1514  0003D4                     i2l1696:
  1515  0003D4  AE04               	btfss	i2___awmod@divisor+1,7,c
  1516  0003D6  D004               	goto	i2l1700
  1517  0003D8  6C03               	negf	i2___awmod@divisor,c
  1518  0003DA  1E04               	comf	i2___awmod@divisor+1,f,c
  1519  0003DC  B0D8               	btfsc	status,0,c
  1520  0003DE  2A04               	incf	i2___awmod@divisor+1,f,c
  1521  0003E0                     i2l1700:
  1522  0003E0  5003               	movf	i2___awmod@divisor,w,c
  1523  0003E2  1004               	iorwf	i2___awmod@divisor+1,w,c
  1524  0003E4  B4D8               	btfsc	status,2,c
  1525  0003E6  D018               	goto	i2l1716
  1526  0003E8  0E01               	movlw	1
  1527  0003EA  6E05               	movwf	i2___awmod@counter,c
  1528  0003EC  D004               	goto	i2l1706
  1529  0003EE                     i2l1704:
  1530  0003EE  90D8               	bcf	status,0,c
  1531  0003F0  3603               	rlcf	i2___awmod@divisor,f,c
  1532  0003F2  3604               	rlcf	i2___awmod@divisor+1,f,c
  1533  0003F4  2A05               	incf	i2___awmod@counter,f,c
  1534  0003F6                     i2l1706:
  1535  0003F6  AE04               	btfss	i2___awmod@divisor+1,7,c
  1536  0003F8  D7FA               	goto	i2l1704
  1537  0003FA                     i2l1708:
  1538  0003FA  5003               	movf	i2___awmod@divisor,w,c
  1539  0003FC  5C01               	subwf	i2___awmod@dividend,w,c
  1540  0003FE  5004               	movf	i2___awmod@divisor+1,w,c
  1541  000400  5802               	subwfb	i2___awmod@dividend+1,w,c
  1542  000402  A0D8               	btfss	status,0,c
  1543  000404  D004               	goto	i2l1712
  1544  000406  5003               	movf	i2___awmod@divisor,w,c
  1545  000408  5E01               	subwf	i2___awmod@dividend,f,c
  1546  00040A  5004               	movf	i2___awmod@divisor+1,w,c
  1547  00040C  5A02               	subwfb	i2___awmod@dividend+1,f,c
  1548  00040E                     i2l1712:
  1549  00040E  90D8               	bcf	status,0,c
  1550  000410  3204               	rrcf	i2___awmod@divisor+1,f,c
  1551  000412  3203               	rrcf	i2___awmod@divisor,f,c
  1552  000414  2E05               	decfsz	i2___awmod@counter,f,c
  1553  000416  D7F1               	goto	i2l1708
  1554  000418                     i2l1716:
  1555  000418  5006               	movf	i2___awmod@sign,w,c
  1556  00041A  B4D8               	btfsc	status,2,c
  1557  00041C  D004               	goto	i2l1720
  1558  00041E  6C01               	negf	i2___awmod@dividend,c
  1559  000420  1E02               	comf	i2___awmod@dividend+1,f,c
  1560  000422  B0D8               	btfsc	status,0,c
  1561  000424  2A02               	incf	i2___awmod@dividend+1,f,c
  1562  000426                     i2l1720:
  1563  000426  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  1564  00042A  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  1565  00042E  0012               	return	
  1566  000430                     __end_ofi2___awmod:
  1567                           	opt stack 0
  1568                           pclatu	equ	0xFFB
  1569                           pclath	equ	0xFFA
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodh	equ	0xFF4
  1575                           prodl	equ	0xFF3
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           fsr0h	equ	0xFEA
  1579                           fsr0l	equ	0xFE9
  1580                           wreg	equ	0xFE8
  1581                           fsr1h	equ	0xFE2
  1582                           fsr1l	equ	0xFE1
  1583                           bsr	equ	0xFE0
  1584                           indf2	equ	0xFDF
  1585                           fsr2h	equ	0xFDA
  1586                           fsr2l	equ	0xFD9
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function _uartTX *****************
  1590 ;; Defined at:
  1591 ;;		line 29 in file "eusart.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  data            1    wreg     unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  data            1    0[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_high_isr
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text11
  1619  0004C8                     __ptext11:
  1620                           	opt stack 0
  1621  0004C8                     _uartTX:
  1622                           	opt stack 26
  1623                           
  1624                           ;incstack = 0
  1625                           ;uartTX@data stored from wreg
  1626  0004C8  6E01               	movwf	uartTX@data,c
  1627                           
  1628                           ;eusart.c: 30: TXREG = data;
  1629  0004CA  C001  FFAD         	movff	uartTX@data,4013	;volatile
  1630  0004CE                     i2l427:
  1631  0004CE  B2AC               	btfsc	4012,1,c	;volatile
  1632  0004D0  0012               	return	
  1633  0004D2  D7FD               	goto	i2l427
  1634  0004D4                     __end_of_uartTX:
  1635                           	opt stack 0
  1636                           pclatu	equ	0xFFB
  1637                           pclath	equ	0xFFA
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           prodh	equ	0xFF4
  1643                           prodl	equ	0xFF3
  1644                           intcon	equ	0xFF2
  1645                           postinc0	equ	0xFEE
  1646                           fsr0h	equ	0xFEA
  1647                           fsr0l	equ	0xFE9
  1648                           wreg	equ	0xFE8
  1649                           fsr1h	equ	0xFE2
  1650                           fsr1l	equ	0xFE1
  1651                           bsr	equ	0xFE0
  1652                           indf2	equ	0xFDF
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _servoInteruptions *****************
  1658 ;; Defined at:
  1659 ;;		line 10 in file "servo.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_high_isr
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text12
  1687  0002CA                     __ptext12:
  1688                           	opt stack 0
  1689  0002CA                     _servoInteruptions:
  1690                           	opt stack 26
  1691                           
  1692                           ;servo.c: 12: if(onCounter != 0 || offCounter != 0){
  1693                           
  1694                           ;incstack = 0
  1695  0002CA  504A               	movf	_onCounter,w,c
  1696  0002CC  104B               	iorwf	_onCounter+1,w,c
  1697  0002CE  A4D8               	btfss	status,2,c
  1698  0002D0  D004               	goto	i2l1538
  1699  0002D2  5048               	movf	_offCounter,w,c
  1700  0002D4  1049               	iorwf	_offCounter+1,w,c
  1701  0002D6  B4D8               	btfsc	status,2,c
  1702  0002D8  D00E               	goto	i2l1550
  1703  0002DA                     i2l1538:
  1704                           
  1705                           ;servo.c: 13: if(onCounter != 0){
  1706  0002DA  504A               	movf	_onCounter,w,c
  1707  0002DC  104B               	iorwf	_onCounter+1,w,c
  1708  0002DE  B4D8               	btfsc	status,2,c
  1709  0002E0  D005               	goto	i2l1544
  1710                           
  1711                           ;servo.c: 14: onCounter--;
  1712  0002E2  064A               	decf	_onCounter,f,c
  1713  0002E4  A0D8               	btfss	status,0,c
  1714  0002E6  064B               	decf	_onCounter+1,f,c
  1715                           
  1716                           ;servo.c: 15: PORTCbits.RC2 = 1;
  1717  0002E8  8482               	bsf	3970,2,c	;volatile
  1718                           
  1719                           ;servo.c: 16: }
  1720  0002EA  0012               	return	
  1721  0002EC                     i2l1544:
  1722                           
  1723                           ;servo.c: 17: else{
  1724                           ;servo.c: 18: offCounter--;
  1725  0002EC  0648               	decf	_offCounter,f,c
  1726  0002EE  A0D8               	btfss	status,0,c
  1727  0002F0  0649               	decf	_offCounter+1,f,c
  1728                           
  1729                           ;servo.c: 19: PORTCbits.RC2 = 0;
  1730  0002F2  9482               	bcf	3970,2,c	;volatile
  1731                           
  1732                           ;servo.c: 20: }
  1733                           ;servo.c: 21: return;
  1734  0002F4  0012               	return	
  1735  0002F6                     i2l1550:
  1736                           
  1737                           ;servo.c: 22: }
  1738                           ;servo.c: 23: if(servo_counter < 30){
  1739  0002F6  5047               	movf	_servo_counter+1,w,c
  1740  0002F8  E12A               	bnz	i2l386
  1741  0002FA  0E1E               	movlw	30
  1742  0002FC  5C46               	subwf	_servo_counter,w,c
  1743  0002FE  B0D8               	btfsc	status,0,c
  1744  000300  0012               	return	
  1745                           
  1746                           ;servo.c: 24: servo_counter++;
  1747  000302  4A46               	infsnz	_servo_counter,f,c
  1748  000304  2A47               	incf	_servo_counter+1,f,c
  1749                           
  1750                           ;servo.c: 25: if(servo_direction == 3){
  1751  000306  0E03               	movlw	3
  1752  000308  184C               	xorwf	_servo_direction,w,c
  1753  00030A  104D               	iorwf	_servo_direction+1,w,c
  1754  00030C  A4D8               	btfss	status,2,c
  1755  00030E  D009               	goto	i2l1558
  1756                           
  1757                           ;servo.c: 26: onCounter = 5;
  1758  000310  0E00               	movlw	0
  1759  000312  6E4B               	movwf	_onCounter+1,c
  1760  000314  0E05               	movlw	5
  1761  000316  6E4A               	movwf	_onCounter,c
  1762                           
  1763                           ;servo.c: 27: offCounter = 15;
  1764  000318  0E00               	movlw	0
  1765  00031A  6E49               	movwf	_offCounter+1,c
  1766  00031C  0E0F               	movlw	15
  1767  00031E  6E48               	movwf	_offCounter,c
  1768                           
  1769                           ;servo.c: 28: }
  1770  000320  0012               	return	
  1771  000322                     i2l1558:
  1772                           
  1773                           ;servo.c: 29: else if(servo_direction == 1){
  1774  000322  044C               	decf	_servo_direction,w,c
  1775  000324  104D               	iorwf	_servo_direction+1,w,c
  1776  000326  A4D8               	btfss	status,2,c
  1777  000328  D009               	goto	i2l1562
  1778                           
  1779                           ;servo.c: 30: onCounter = 11;
  1780  00032A  0E00               	movlw	0
  1781  00032C  6E4B               	movwf	_onCounter+1,c
  1782  00032E  0E0B               	movlw	11
  1783  000330  6E4A               	movwf	_onCounter,c
  1784                           
  1785                           ;servo.c: 31: offCounter = 9;
  1786  000332  0E00               	movlw	0
  1787  000334  6E49               	movwf	_offCounter+1,c
  1788  000336  0E09               	movlw	9
  1789  000338  6E48               	movwf	_offCounter,c
  1790                           
  1791                           ;servo.c: 32: }
  1792  00033A  0012               	return	
  1793  00033C                     i2l1562:
  1794                           
  1795                           ;servo.c: 33: else{
  1796                           ;servo.c: 34: onCounter = 8;
  1797  00033C  0E00               	movlw	0
  1798  00033E  6E4B               	movwf	_onCounter+1,c
  1799  000340  0E08               	movlw	8
  1800  000342  6E4A               	movwf	_onCounter,c
  1801                           
  1802                           ;servo.c: 35: offCounter = 12;
  1803  000344  0E00               	movlw	0
  1804  000346  6E49               	movwf	_offCounter+1,c
  1805  000348  0E0C               	movlw	12
  1806  00034A  6E48               	movwf	_offCounter,c
  1807  00034C  0012               	return	
  1808  00034E                     i2l386:
  1809  00034E  0012               	return		;funcret
  1810  000350                     __end_of_servoInteruptions:
  1811                           	opt stack 0
  1812  0000                     pclatu	equ	0xFFB
  1813                           pclath	equ	0xFFA
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           prodh	equ	0xFF4
  1819                           prodl	equ	0xFF3
  1820                           intcon	equ	0xFF2
  1821                           postinc0	equ	0xFEE
  1822                           fsr0h	equ	0xFEA
  1823                           fsr0l	equ	0xFE9
  1824                           wreg	equ	0xFE8
  1825                           fsr1h	equ	0xFE2
  1826                           fsr1l	equ	0xFE1
  1827                           bsr	equ	0xFE0
  1828                           indf2	equ	0xFDF
  1829                           fsr2h	equ	0xFDA
  1830                           fsr2l	equ	0xFD9
  1831                           status	equ	0xFD8
  1832                           pclatu	equ	0xFFB
  1833                           pclath	equ	0xFFA
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           intcon	equ	0xFF2
  1841                           postinc0	equ	0xFEE
  1842                           fsr0h	equ	0xFEA
  1843                           fsr0l	equ	0xFE9
  1844                           wreg	equ	0xFE8
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           bsr	equ	0xFE0
  1848                           indf2	equ	0xFDF
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853                           	psect	rparam
  1854  0000                     pclatu	equ	0xFFB
  1855                           pclath	equ	0xFFA
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           prodh	equ	0xFF4
  1861                           prodl	equ	0xFF3
  1862                           intcon	equ	0xFF2
  1863                           postinc0	equ	0xFEE
  1864                           fsr0h	equ	0xFEA
  1865                           fsr0l	equ	0xFE9
  1866                           wreg	equ	0xFE8
  1867                           fsr1h	equ	0xFE2
  1868                           fsr1l	equ	0xFE1
  1869                           bsr	equ	0xFE0
  1870                           indf2	equ	0xFDF
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8
  1874                           
  1875                           	psect	temp
  1876  000057                     btemp:
  1877                           	opt stack 0
  1878  000057                     	ds	1
  1879  0000                     int$flags	set	btemp
  1880                           pclatu	equ	0xFFB
  1881                           pclath	equ	0xFFA
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           intcon	equ	0xFF2
  1889                           postinc0	equ	0xFEE
  1890                           fsr0h	equ	0xFEA
  1891                           fsr0l	equ	0xFE9
  1892                           wreg	equ	0xFE8
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           bsr	equ	0xFE0
  1896                           indf2	equ	0xFDF
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      86
    BANK0           128      0     105
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     632
                                             43 COMRAM     2     2      0
                _ConfigureOscillator
                            _InitApp
                            ___awmod
                            _initLCD
                           _initUART
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (1) _lcdWriteChar                                         2     2      0      44
                                             37 COMRAM     2     2      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0       0
                                             37 COMRAM     1     1      0
                          _lcdEnable
 ---------------------------------------------------------------------------------
 (2) _lcdEnable                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     588
                                             37 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                             20 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0     370
                                              6 COMRAM    14    14      0
                  _servoInteruptions
                             _uartTX
                          i2___awmod
 ---------------------------------------------------------------------------------
 (5) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _uartTX                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _servoInteruptions                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___awmod
   _initLCD
     _lcdEnable
   _initUART
   _lcdWriteChar
     _lcdEnable

 _low_isr (ROOT)

 _high_isr (ROOT)
   _servoInteruptions
   _uartTX
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      69       5       82.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      56       1       68.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BF      34        0.0%
DATA                 0      0      BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 27 16:15:43 2017

                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                           u817 01AE  
                         u907 0284                           u827 01C4                           u917 02A0  
                         u837 01DE                           u927 02BE                           u847 01F0  
                         u857 0478                           u867 048E                           u877 04A0  
                         u887 024A                           u897 026C                           _ack 004F  
                ___awmod@sign 002B                           prod 000FF3                           wreg 000FE8  
              ??_lcdWriteChar 0026                          l1660 0364                          l1670 0386  
                        l1672 038A                          l1680 03A8                          l1664 0370  
                        l1684 03B6                          l1676 039E                          l1668 037E  
                        l1790 0232                          l1786 0200                          l1778 01D4  
                        _LATB 000F8A                          _RCIE 007CED                          _RCIF 007CF5  
                        i2l43 0148                          _TRMT 007D61                          _main 0184  
                        _iter 0044                          _rate 0056                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        btemp 0057                          prodh 000FF4                          prodl 000FF3  
                        start 00A6                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               __end_of_InitApp 04E0                         ?_main 0001  
             __end_of___awmod 03C0                         _T0CON 000FD5                         _T2CON 000FCA  
                       _LATA2 007C4A                         i2l427 04CE                         i2l386 034E  
                       _RCREG 000FAE                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _SPBRG 000FAF                         _PORTB 000F81                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TXREG 000FAD           _ConfigureOscillator 04E0  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                         __addr 004E  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000               __end_of_initLCD 02CA  
              __CFG_EBTRB$OFF 000000               __end_of_low_isr 00A6                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8            __size_ofi2___awmod 0070  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 0430  
                __end_of_main 0240                __CFG_OSC$RCIO6 000000                        ??_main 002C  
               __activetblptr 000002                        _CCPR2L 000FBB                        i2l1700 03E0  
                      i2l1550 02F6                        i2l1544 02EC                        i2l1720 0426  
                      i2l1712 040E                        i2l1704 03EE                        i2l1562 033C  
                      i2l1538 02DA                        i2l1706 03F6                        i2l1708 03FA  
                      i2l1716 0418                        i2l1740 0136                        i2l1558 0322  
                      i2l1696 03D4                        _SPBRGH 000FB0                        _SSPBUF 000FC9  
                   ??_InitApp 0026         ??_ConfigureOscillator 0026                __CFG_XINST$OFF 000000  
            __end_of_high_isr 0184          __end_of_lcdWriteChar 04A8                __CFG_STVREN$ON 000000  
                   ??___awmod 002A              __end_of_initUART 04C8                        clear_0 044E  
                      clear_1 045A               ___awmod@divisor 0028                        _uartTX 04C8  
             ___awmod@counter 002A                     ??_initLCD 0026                  __pdataCOMRAM 0055  
           __end_ofi2___awmod 0430                     ??_low_isr 0015                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                i2___awmod@sign 0006  
                  __accesstop 0080       __end_of__initialization 0460                 ___rparam_used 000001  
              __pcstackCOMRAM 0001            __size_of_lcdEnable 0008                    __pbssBANK0 0080  
                     _CCP2CON 000FBA                       ?_uartTX 0001                       _RC_DATA 0054  
                     _RC_FLAG 0053                     ?_high_isr 0001                     ?_initUART 0001  
                  _offCounter 0048             __end_of_lcdEnable 04DC                       _InitApp 04DE  
       __size_of_lcdWriteChar 003A                       __Hparam 0000                       __Lparam 0000  
                     ___awmod 0350                       __pcinit 0430                       __ramtop 1000  
                     __ptext0 0184               __size_of_uartTX 000C                       __ptext1 046E  
                     __ptext2 04A8                       __ptext3 0240                       __ptext4 04D4  
                     __ptext5 0350                       __ptext6 04DE                       __ptext7 04E0  
                     _initLCD 0240                     _T2CONbits 000FCA                       _myCount 0042  
            ___awmod@dividend 0026                       _low_isr 0018                    ??_high_isr 0007  
                _lcdWriteChar 046E                __pintcode_body 00AA          end_of_initialization 0460  
                  ??_initUART 0026                 __Lmediumconst 0000                       int_func 00AA  
                   _RCSTAbits 000FAB                       postinc0 000FEE                     _PORTCbits 000F82  
                   _TRISCbits 000F94                     i2___awmod 03C0   __end_of_ConfigureOscillator 04E2  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8                 __pidataCOMRAM 04DC  
             _servo_direction 004C                __end_of_uartTX 04D4           start_initialization 0430  
                  ?i2___awmod 0001             lcdWriteChar@leter 0027              __CFG_LPT1OSC$OFF 000000  
                    ??_uartTX 0001                   __pbssCOMRAM 002E             __size_of_high_isr 017C  
           __size_of_initUART 0020                      ?_InitApp 0001             __CFG_CCP2MX$PORTC 000000  
                   _lcdEnable 04D4                     __pintcode 0008                      ?___awmod 0026  
                 __pintcodelo 0018                      ?_initLCD 0001                     _onCounter 004A  
                    ?_low_isr 0001                   ??i2___awmod 0005                    uartTX@data 0001  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E             _servoInteruptions 02CA  
                  ?_lcdEnable 0001                     _valuePort 0050              __CFG_WDTPS$32768 000000  
                   _uart_head 0052                     _uart_tail 0051            ?_servoInteruptions 0001  
         ??_servoInteruptions 0001            i2___awmod@dividend 0001     __end_of_servoInteruptions 0350  
            __size_of_InitApp 0002                      __Hrparam 0000                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000              __size_of___awmod 0070                   _lightStatus 0055  
            __size_of_initLCD 008A              __size_of_low_isr 008E                      __ptext10 03C0  
                    __ptext11 04C8                      __ptext12 02CA                      _high_isr 0008  
                    _initUART 04A8                 __size_of_main 00BC  __size_of_ConfigureOscillator 0002  
                 ??_lcdEnable 0026                      _my_stack 002E                      int$flags 0057  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                 _servo_counter 0046  
                  _INTCONbits 000FF2                      intlevel1 0000                      intlevel2 0000  
  __size_of_servoInteruptions 0086                   _uart_buffer 0080                   _SSPCON1bits 000FC6  
                 _SSPCON2bits 000FC5                 ?_lcdWriteChar 0001  
